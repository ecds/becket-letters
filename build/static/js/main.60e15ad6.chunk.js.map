{"version":3,"sources":["components/utilities/HeaderBuilder.js","components/BrowseLetters.js","components/utilities/DocMetaBuilder.js","components/utilities/SearchRecipientOnPage.js","components/utilities/MentionedLettersTable.js","components/EntityDetails.js","components/Jumbotron.js","components/utilities/HomeTile.js","components/Landing.js","components/RepositoryQuickGlance.js","components/QuickGlance.js","components/LetterDetails.js","components/utilities/LoadingSpinner.js","components/utilities/Pagination.js","components/LettersBy.js","components/PersonDetails.js","components/RepositoryDetails.js","components/utilities/Sidebar.js","components/TimelineEvent.js","components/TimelineYear.js","components/Timeline.js","components/FilterSearch.js","App.js","serviceWorker.js","index.js"],"names":["HeaderBuilder","console","log","this","props","type","header","attributes","label","entityData","dangerouslySetInnerHTML","__html","className","properties","length","map","entity","key","composer","description","titleText","link","links","target","href","response","reason","director","theatre","city","date","author","translator","authors","publication","artist","subtitleText1","proposal","subtitleText2","Component","BrowseLetters","context","changeEntityType","e","activeTab","id","action","setState","state","error","isLoaded","setActive","bind","t","active","to","onClick","striptags","require","MentionedLetters","meta","title","desc","SearchRecipientOnPage","filterLettersList","filter","tr","td","i","document","getElementById","tableId","value","toUpperCase","getElementsByTagName","textContent","innerText","indexOf","style","display","onKeyUp","placeholder","placeHolder","letters","colSpan","letter","this_recipient","name","EntityDetails","getData","axios","all","get","apiUrl","match","params","then","spread","data","catch","err","message","metaBuild","DocMetaBuilder","HomeJumbotron","Jumbotron","src","HomeTile","cardTitle","charAt","slice","Card","width","marginBottom","Body","Title","Footer","withRouter","Landing","Container","fluid","CardGroup","RepositoryQuickGlance","QuickGlance","localURLExtension","typeLabel","getLocalURLExtender","getLifeDates","LetterDetails","letterRecipients","entitiesMentioned","getEntityList","placesWritten","relationships","recipients","physicalDescription","getPhysicalDescription","apiUrlExtender","repositories","respository","LoadingSpinner","icon","spin","size","Pagination","changePageNumber","page","createPrevBtn","parseInt","Button","createNextBtn","pagination","createPagination","pageBtns","push","Dropdown","Item","alt","Toggle","Menu","aria-label","LettersBy","handler","pageValue","entityChange","entityType","searchData","searchTerms","table","classList","remove","isSearching","getAllData","intiateSearch","resetPage","event","preventDefault","elements","query","refs","form","EntityList","entityLabel","currentLabel","substring","pathname","metaTitle","Row","Col","Form","onSubmit","ref","Group","variant","Control","md","Table","striped","bordered","tableHeader","PersonDetails","getEntityData","lettersList","getReceivedLetters","receivedLetters","ReceivedLettersList","index","rel","profile","class","data-toggle","data-target","aria-expanded","aria-controls","media","images","image","RepositoryDetails","american","colspan","Sidebar","Navbar","bg","expand","Brand","Collapse","Nav","Link","NavDropdown","TimelineEvent","eventClassName","additional","startsWith","TimelineYear","events","year","Timeline","myRef","React","createRef","timelineEntries","window","scrollTo","top","left","behavior","getLetterData","allTimelineEntries","selector","Object","keys","keyOuter","renderSearchTooltip","Tooltip","FilterSearch","firstSearched","search","filterRowsByType","stateType","flipAllFilters","direction","hideAll","areAttendancesHidden","areLettersHidden","areMusicsHidden","areOrganizationsHidden","arePeopleHidden","arePlacesHidden","areProductionsHidden","areEventsHidden","arePublicationsHidden","areReadingsHidden","areTranslatingsHidden","areWorkOfArtsHidden","areWritingsHidden","checkbox","startDate","endDate","attendancesCount","lettersCount","musicCount","organizationsCount","peopleCount","placesCount","productionsCount","publicEventsCount","publicationsCount","readingsCount","translationsCount","worksOfArtCount","writingsCount","Fragment","selectedStartDate","Date","selectedEndDate","currentDate","OverlayTrigger","placement","delay","show","hide","overlay","onChange","checked","format","disableCalendar","minDate","maxDate","library","add","faSpinner","faSearch","App","entityTypes","buildname","exact","path","component","render","Boolean","location","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.60e15ad6.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass HeaderBuilder extends Component {\n    render() {\n        console.log(this.props);\n        if (this.props.type === 'string') {\n            return (\n                <h1>{this.props.header}</h1>\n            )\n        }\n        else if (this.props.header && this.props.header.type === \"repositories\") {\n            return (\n                <h1>\n                    {this.props.header.attributes.label ? this.props.header.attributes.label : null}\n                </h1>\n            );\n        }\n        else if (this.props.entityData.attributes['type-label'] === 'Attendance') {\n            return (\n                <h1>\n                    <span dangerouslySetInnerHTML={{ __html: this.props.entityData.attributes.label }} className=\"label\" />\n                    {this.props.entityData.attributes.properties ?\n                        <span>\n                            {this.props.entityData.attributes.properties['alternative-spellings'].length > 0 ? <span className='spellings'>{this.props.entityData.attributes.properties['alternative-spellings'].map((entity, key) => <span key={key} dangerouslySetInnerHTML={{ __html: entity }} className=\"list-span\"></span>)} </span> : null}\n                            {this.props.entityData.attributes.properties && this.props.entityData.attributes.properties['place-date'] ? <span dangerouslySetInnerHTML={{ __html: this.props.entityData.attributes.properties['place-date'] }} className=\"comma\" /> : null}\n                            {this.props.entityData.attributes.properties && this.props.entityData.attributes.properties['attended-with'] ? <span dangerouslySetInnerHTML={{ __html: this.props.entityData.attributes.properties['attended-with'] }} className=\"attended-with\" /> : null}\n                            {this.props.entityData.attributes.properties && this.props.entityData.attributes.properties['performed-by'] ? <span className=\"performed-by\">{this.props.entityData.attributes.properties['performed-by'].map((entity, key) => <span className=\"list-span\" key={key} dangerouslySetInnerHTML={{ __html: entity }}></span>)}</span> : null}\n                        </span>\n                        : null}\n                </h1>\n            )\n        }\n        else if (this.props.entityData.attributes['type-label'] === 'Music') {\n            return (\n                <h1>\n                    <span>{this.props.entityData.attributes.properties !== null ? this.props.entityData.attributes.properties.composer : null}</span>\n                    <span dangerouslySetInnerHTML={{ __html: this.props.entityData.attributes.label }} className=\"comma\" />\n                    {this.props.entityData.attributes.properties['alternative-titles'].length > 0 ? <span className='spellings'>{this.props.entityData.attributes.properties['alternative-titles'].map((entity, key) => <span key={key} dangerouslySetInnerHTML={{ __html: entity }} className=\"list-span\"></span>)} </span> : ', '}\n                    {this.props.entityData.attributes.properties['description'] ? <span dangerouslySetInnerHTML={{ __html: this.props.entityData.attributes.properties['description'] }} className=\"notes\" /> : null}\n                    ]            {this.props.entityData.attributes.properties['performed-by'] ? <p><span dangerouslySetInnerHTML={{ __html: this.props.entityData.attributes.properties['performed-by'] }} className=\"new-line performed-by\" /></p> : null}\n                    {this.props.entityData.attributes.properties['notes'] ? <p><span dangerouslySetInnerHTML={{ __html: this.props.entityData.attributes.properties['notes'] }} className=\"notes\" /></p> : null}\n                </h1>\n            )\n        }\n        else if (this.props.entityData.attributes['type-label'] === 'Organization') {\n            return (\n                <h1>\n                    <span dangerouslySetInnerHTML={{ __html: this.props.entityData.attributes.label }} />\n                    {this.props.entityData.attributes.properties ?\n                        <span>\n                            {this.props.entityData.attributes.properties['alternate-spellings'].length > 0 ? <span className='spellings'>{this.props.entityData.attributes.properties['alternate-spellings'].map((entity, key) => <span key={key} dangerouslySetInnerHTML={{ __html: entity }} className=\"list-span\"></span>)} </span> : ''}\n                            {this.props.entityData.attributes.properties.description ? <span className=\"comma\" dangerouslySetInnerHTML={{ __html: this.props.entityData.attributes.properties.description }} /> : null}\n                        </span>\n                        : null}\n                </h1>\n            )\n        }\n        else if (this.props.entityData.attributes['type-label'] === 'Place') {\n            let titleText = this.props.entityData.attributes.label ? this.props.entityData.attributes.label : '';\n            let link = this.props.entityData.attributes.properties.links ? this.props.entityData.attributes.properties.links : '';\n            return (\n                <>\n                    <h1>\n                        <span dangerouslySetInnerHTML={{ __html: titleText }} />\n                        {this.props.entityData.attributes.properties ?\n                            <span>\n                                {this.props.entityData.attributes.properties['alternate-spellings'].length > 0 ? <span className='spellings'>{this.props.entityData.attributes.properties['alternate-spellings'].map((entity, key) => <span key={key} dangerouslySetInnerHTML={{ __html: entity }} className=\"list-span\"></span>)} </span> : null}\n                                {this.props.entityData.attributes.properties.description && this.props.entityData.attributes.properties.description !== \"\" ? <span className=\"comma\" dangerouslySetInnerHTML={{ __html: this.props.entityData.attributes.properties.description }} /> : null}\n                            </span>\n                            : null}\n                    </h1>\n                    {link !== '' ?\n                        <h2>\n                            <a target=\"_new\" href={link}>{link}</a>\n                        </h2>\n                        :\n                        null}\n                </>\n            )\n        }\n        else if (this.props.entityData.attributes['type-label'] === 'Production') {\n            return (\n                <h1>\n                    <span dangerouslySetInnerHTML={{ __html: this.props.entityData.attributes.label }} className=\"label\" />\n                    {this.props.entityData.attributes.properties['proposal'] && this.props.entityData.attributes.properties['response'] === 'no' ?\n                        <span>\n                            {this.props.entityData.attributes.properties['proposal'] ? <span dangerouslySetInnerHTML={{ __html: this.props.entityData.attributes.properties['proposal'] }} className=\"proposed-by\" /> : null}\n                            {this.props.entityData.attributes.properties.response ? <span className=\"comma\">{this.props.entityData.attributes.properties.response}</span> : null}\n                            {this.props.entityData.attributes.properties.reason ? <span className=\"comma\">{this.props.entityData.attributes.properties.reason}</span> : null}\n                            {this.props.entityData.attributes.properties['notes'] ? <span dangerouslySetInnerHTML={{ __html: this.props.entityData.attributes.properties['notes'] }} className=\"notes\" /> : null}\n                        </span>\n                        : <span>\n                            <span className=\"detailGroup\">\n                                {this.props.entityData.attributes.properties.director ? <span dangerouslySetInnerHTML={{ __html: this.props.entityData.attributes.properties.director }} className=\"comma director\" /> : null}\n                                {this.props.entityData.attributes.properties.theatre ? <span dangerouslySetInnerHTML={{ __html: this.props.entityData.attributes.properties.theatre }} className=\"comma\" /> : null}\n                                {this.props.entityData.attributes.properties.city ? <span dangerouslySetInnerHTML={{ __html: this.props.entityData.attributes.properties.city }} className=\"comma\" /> : null}\n                                {this.props.entityData.attributes.properties.date ? <span dangerouslySetInnerHTML={{ __html: this.props.entityData.attributes.properties.date }} className=\"comma\" /> : null}\n                            </span>\n                            {this.props.entityData.attributes.properties['cast'] ? <span dangerouslySetInnerHTML={{ __html: this.props.entityData.attributes.properties['cast'] }} className=\"cast\" /> : null}\n                            {this.props.entityData.attributes.properties['notes'] ? <span dangerouslySetInnerHTML={{ __html: this.props.entityData.attributes.properties['notes'] }} className=\"notes\" /> : null}\n                            <br />\n                            {this.props.entityData.attributes.properties['staging-beckett'] ? <a href={this.props.entityData.attributes.properties['staging-beckett']} className=\"btn btn-primary\" target=\"_new\">Staging Beckett</a> : null}\n                        </span>}\n                </h1>\n            )\n        }\n        else if (this.props.entityData.attributes['type-label'] === 'Public Event') {\n            return (\n                <h1>\n                    <span dangerouslySetInnerHTML={{ __html: this.props.entityData.attributes.label }} className=\"label\" />\n                    {this.props.entityData.attributes.properties.date ? <span dangerouslySetInnerHTML={{ __html: this.props.entityData.attributes.properties.date }} className=\"comma\" /> : null}\n                </h1>\n            )\n        }\n        else if (this.props.entityData.attributes['type-label'] === 'Publication') {\n            return (\n                <h1>\n                    <span dangerouslySetInnerHTML={{ __html: this.props.entityData.attributes.label }} />\n                    {this.props.entityData.attributes.properties.author ? <span className=\"comma\">{this.props.entityData.attributes.properties.author}</span> : null}\n                    {this.props.entityData.attributes.properties.translator ? <span className=\"comma\">{this.props.entityData.attributes.properties.translator}</span> : null}\n                    {this.props.entityData.attributes.properties['publication-information'] ? <span className=\"comma\" dangerouslySetInnerHTML={{ __html: this.props.entityData.attributes.properties['publication-information'] }} /> : null}\n                    {this.props.entityData.attributes.properties['notes'] ? <span dangerouslySetInnerHTML={{ __html: this.props.entityData.attributes.properties['notes'] }} className=\"notes\" /> : null}\n                </h1>\n            )\n        }\n        else if (this.props.entityData.attributes['type-label'] === 'Reading') {\n            return (\n                <>\n                    <h1>\n                        {this.props.entityData.attributes.properties.authors ? <span>{this.props.entityData.attributes.properties.authors}</span> : null}\n                        <span dangerouslySetInnerHTML={{ __html: this.props.entityData.attributes.label }} />\n                        .\n                    </h1>\n                    {this.props.entityData.attributes.properties.publication ? <h2 dangerouslySetInnerHTML={{ __html: this.props.entityData.attributes.properties.publication }} /> : null}\n                </>\n            )\n        }\n        else if (this.props.entityData.attributes['type-label'] === 'Translating') {\n            return (\n                <h1>\n                    <span dangerouslySetInnerHTML={{ __html: this.props.entityData.attributes.label }} />\n                    {this.props.entityData.attributes.properties.author ? <span className=\"comma\">{this.props.entityData.attributes.properties.author}</span> : null}\n                    {this.props.entityData.attributes.properties['translated-into'] ? <span className=\"comma\">{this.props.entityData.attributes.properties['translated-into']}</span> : null}\n                    {this.props.entityData.attributes.properties.translator ? <span className=\"translated-by\">{this.props.entityData.attributes.properties.translator}</span> : null}\n                    {this.props.entityData.attributes.properties['translated-title'] ? <span className=\"comma\" dangerouslySetInnerHTML={{ __html: this.props.entityData.attributes.properties['translated-title'] }} /> : null}\n                    {this.props.entityData.attributes.properties['comments'] ? <span dangerouslySetInnerHTML={{ __html: this.props.entityData.attributes.properties['comments'] }} /> : null}\n                </h1>\n            )\n        }\n        else if (this.props.entityData.attributes['type-label'] === 'Work Of Art') {\n            return (\n                <div>\n                    <h1>\n                        {this.props.entityData.attributes.properties.artist ? <span dangerouslySetInnerHTML={{ __html: this.props.entityData.attributes.properties.artist }} /> : null}\n                        {this.props.entityData.attributes.label ? <span className=\"comma\" dangerouslySetInnerHTML={{ __html: this.props.entityData.attributes.label }} /> : null}\n                        {this.props.entityData.attributes.properties['alternative-spellings'].length > 0 ? <span className='spellings'>{this.props.entityData.attributes.properties['alternative-spellings'].map((entity, key) => <span key={key} dangerouslySetInnerHTML={{ __html: entity }} className=\"list-span\"></span>)} </span> : ', '}\n                    </h1>\n                    {this.props.entityData.attributes.properties.description ? <h3><span dangerouslySetInnerHTML={{ __html: this.props.entityData.attributes.properties.description }} /></h3> : null}\n                    {this.props.entityData.attributes.properties['owner-location-accession-number-contemporaneous'] ?\n                        <h3>\n                            <p><i>Contemporaneous:  </i> {this.props.entityData.attributes.properties['owner-location-accession-number-contemporaneous']}</p>\n                        </h3>\n                        : null}\n                    <h3>\n                        <p><i>Current: </i> {this.props.entityData.attributes.properties['owner-location-accession-number-current'] ? <span>{this.props.entityData.attributes.properties['owner-location-accession-number-current']}</span> : 'Unknown'}</p>\n                    </h3>\n                </div>\n            )\n        }\n        else if (this.props.entityData.attributes['type-label'] === 'Writing') {\n            // make title line\n            let labelText = this.props.entityData.attributes.label;\n            let dateText = this.props.entityData.attributes.properties.date ? `, ${this.props.entityData.attributes.properties.date}` : '';\n            let titleText = labelText + dateText + '.';\n            // make subtitle line\n            let proposalText = this.props.entityData.attributes.properties.proposal ? this.props.entityData.attributes.properties.proposal : '';\n            let notesText = this.props.entityData.attributes.properties['notes'] ? this.props.entityData.attributes.properties['notes'] + '.' : '';\n            let subtitleText1 = proposalText\n            let subtitleText2 = notesText\n            return (\n                <>\n                    <h1>\n                        <span dangerouslySetInnerHTML={{ __html: titleText }} className=\"label\" />\n                    </h1>\n                    {subtitleText1 !== '' ?\n                        <h2>\n                            <span dangerouslySetInnerHTML={{ __html: subtitleText1 }} className=\"label\" />\n                        </h2>\n                        :\n                        null\n                    }\n                    {subtitleText2 !== '' ?\n                        <h2>\n                            <span dangerouslySetInnerHTML={{ __html: subtitleText2 }} className=\"label\" />\n                        </h2>\n                        :\n                        null\n                    }\n                </>\n            )\n        }\n        else {\n            return (\n                <h1>error</h1>\n            )\n        }\n    }\n}\n\nexport default HeaderBuilder;","import { Link } from 'react-router-dom';\nimport HeaderBuilder from './utilities/HeaderBuilder';\nimport React, { Component } from \"react\";\n\nclass BrowseLetters extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      activeTab: ''\n    };\n    this.setActive = this.setActive.bind(this);\n    this.changeEntityType = this.changeEntityType.bind(this);\n  }\n\n  changeEntityType = (e) => {\n    var activeTab = e.target.id\n    this.props.action(activeTab)\n    this.setState(() => {\n      return { activeTab: activeTab }\n    })\n  }\n\n  setActive(t) {\n    if (t === this.props.active) {\n      return 'active'\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"pt-3\">\n        <HeaderBuilder header='Browse Letters Mentioned' type='string' />\n        <ul className=\"nav nav-tabs\" id=\"browse-tabs\">\n          <li className={this.setActive('by-attendance')}><Link to=\"/browse-letters-attendance\" id='attendance' onClick={this.changeEntityType}>Attendance</Link></li>\n          <li className={this.setActive('by-music')}><Link to=\"/browse-letters-music\" id='music' onClick={this.changeEntityType}>Music</Link></li>\n          <li className={this.setActive('by-organization')}><Link to=\"/browse-letters-organization\" id='organization' onClick={this.changeEntityType}>Organizations</Link></li>\n          <li className={this.setActive('by-person')}><Link to=\"/browse-letters-person\" id='person' onClick={this.changeEntityType}>People</Link></li>\n          <li className={this.setActive('by-place')}><Link to=\"/browse-letters-place\" id='place' onClick={this.changeEntityType}>Places</Link></li>\n          <li className={this.setActive('by-production')}><Link to=\"/browse-letters-production\" id='production' onClick={this.changeEntityType}>Productions</Link></li>\n          <li className={this.setActive('by-public-event')}><Link to=\"/browse-letters-public-event\" id='public-event' onClick={this.changeEntityType}>Public Events</Link></li>\n          <li className={this.setActive('by-publication')}><Link to=\"/browse-letters-publication\" id='publication' onClick={this.changeEntityType}>Publications</Link></li>\n          <li className={this.setActive('by-reading')}><Link to=\"/browse-letters-reading\" id='reading' onClick={this.changeEntityType}>Readings</Link></li>\n          <li className={this.setActive('by-repositories')}><Link to=\"/browse-letters-repositories\" id='repositories' onClick={this.changeEntityType}>Repository</Link></li>\n          <li className={this.setActive('by-Translating')}><Link to=\"/browse-letters-Translating\" id='Translating' onClick={this.changeEntityType}>Translations</Link></li>\n          <li className={this.setActive('by-work-of-art')}><Link to=\"/browse-letters-work-of-art\" id='work-of-art' onClick={this.changeEntityType}>Works of Art</Link></li>\n          <li className={this.setActive('by-writing')}><Link to=\"/browse-letters-writing\" id='writing' onClick={this.changeEntityType}>Writings</Link></li>\n        </ul>\n\n      </div>\n    )\n  }\n}\n\nexport default BrowseLetters;\n","import React, { Component } from \"react\";\nimport DocumentMeta from 'react-document-meta';\n\nlet striptags = require('striptags');\n\nclass MentionedLetters extends Component {\n    render() {\n        const meta = {\n            title: this.props.title ? striptags(this.props.title) : this.props.id,\n            description: striptags(this.props.desc)\n        }\n            return (\n                <DocumentMeta {...meta} />\n            )\n        }\n}\n\nexport default MentionedLetters;\n","import React, { Component } from \"react\";\n\nclass SearchRecipientOnPage extends Component {\n  constructor(props, context) {\n      super(props, context);\n      this.filterLettersList = this.filterLettersList.bind(this);\n  }\n\n  filterLettersList() {\n  // Declare variables\n  var input, filter, table, tr, td, i, txtValue;\n  input = document.getElementById(this.props.tableId+'_input');\n  filter = input.value.toUpperCase();\n  table = document.getElementById(this.props.tableId);\n  tr = table.getElementsByTagName(\"tr\");\n\n  // Loop through all table rows, and hide those who don't match the search query\n  for (i = 0; i < tr.length; i++) {\n    td = tr[i].getElementsByTagName(\"td\")[0];\n    if (td) {\n      txtValue = td.textContent || td.innerText;\n      if (txtValue.toUpperCase().indexOf(filter) > -1) {\n        tr[i].style.display = \"\";\n      } else {\n        tr[i].style.display = \"none\";\n      }\n    }\n  }\n}\n\n  render() {\n      return (\n        <div className=\"table-search\">\n          {/* <label htmlFor={this.props.tableId+'_input'} >Search Letters by Recipient:</label> */}\n          <input type=\"text\" id={this.props.tableId+'_input'} onKeyUp={this.filterLettersList} placeholder={\"Search \"+this.props.placeHolder+'...'} className=\"form-control\"/>\n        </div>\n      )\n    }\n  }\n\nexport default SearchRecipientOnPage;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport SearchRecipientOnPage from './SearchRecipientOnPage';\n\nclass MentionedLetters extends Component {\n    render() {\n        if (this.props.letters.length === 0) {\n            return (\n                <p>No Letters</p>\n            )\n        }\n        else {\n            return (\n                <div>\n                    <SearchRecipientOnPage tableId='repositoryLetters' placeHolder='by recipient' />\n                    <table className='table table-bordered' id='repositoryLetters'>\n                        <thead>\n                            <tr>\n                                <th>Recipient</th>\n                                <th colSpan=\"2\">Date</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {this.props.letters.map((letter) =>\n                                <tr key={letter.id}>\n                                    <td>{letter['recipients'].map((this_recipient) => <a key={this_recipient.id} href={'/people/' + this_recipient.id + '/' + this_recipient.name}>{this_recipient.name}</a>)}</td>\n                                    <td>{letter.date}</td>\n                                    <td className=\"actions\"><Link to={'/letters/letterdetails/' + letter.id}>View Letter Details</Link></td>\n                                </tr>\n                            )}\n                        </tbody>\n                    </table>\n                </div>\n            )\n        }\n    }\n}\n\nexport default MentionedLetters;\n","import axios from 'axios';\nimport DocMetaBuilder from './utilities/DocMetaBuilder';\nimport HeaderBuilder from './utilities/HeaderBuilder';\nimport MentionedLetters from './utilities/MentionedLettersTable';\nimport React, { Component } from 'react';\n\nclass EntityDetails extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoaded: false,\n            error: '',\n            entityData: []\n        }\n    }\n\n    componentDidMount() {\n        this.getData()\n    }\n\n    getData = () => {\n        axios.all([\n            axios.get(this.props.apiUrl + '/entities/' + this.props.match.params.id)])\n            .then(axios.spread((getData) => {\n                const entityData = getData.data.data;\n                console.log(entityData);\n                this.setState({ entityData });\n                this.setState({ isLoaded: true })\n            }))\n            .catch((err) => {\n                this.setState({ isLoaded: false });\n                this.setState({ error: err.message });\n            });\n    }\n\n    render() {\n        const { error, isLoaded } = this.state;\n        // if there is an error\n        if (error) {\n            return <div>Error: {error.message}</div>;\n            // if not loaded show loading\n        } else if (!isLoaded) {\n            return <div>Loading...</div>;\n            // return now that component has value\n        } else {\n            let metaBuild = {\n                title: this.state.entityData.attributes.label,\n                description: `${this.state.entityData.attributes.label} ${this.state.entityData.attributes.properties['place-date']}`,\n                id: this.state.entityData.id\n            }\n            return (\n                <div className=\"details\">\n                    <DocMetaBuilder {...metaBuild} />\n                    <HeaderBuilder entityData={this.state.entityData} />\n                    <h3>Mentioned In:</h3>\n                    <MentionedLetters letters={this.state.entityData.attributes['public-letters-hash']} />\n                </div >\n            )\n        }\n    }\n}\n\nexport default EntityDetails;","import React, { Component } from \"react\";\nimport { Container, Jumbotron } from 'react-bootstrap';\n\nclass HomeJumbotron extends Component {\n    render() {\n      return (\n          <Jumbotron className=\"home-main\">\n              <img src=\"/imgs/Banner1.jpg\" />\n          </Jumbotron>\n        )\n    }\n}\n\nexport default HomeJumbotron;\n","import React, { Component } from \"react\";\nimport { Card } from 'react-bootstrap';\nimport { Link, withRouter } from 'react-router-dom';\n\nclass HomeTile extends Component {\n\n  render() {\n    // if type is not these two\n    let cardTitle =\n      this.props.type !== 'public-event' && this.props.type !== 'work-of-art' ?\n        // capitalize first letter and assign\n        this.props.type.charAt(0).toUpperCase() + this.props.type.slice(1)\n        :\n        // or, it must be one or the other\n        this.props.type === 'public-event' ? 'Public Event' : 'Work of Art'\n\n\n    return (\n      <Card style={{ width: '15rem', marginBottom: '1em' }}>\n        <Card.Body>\n          <Card.Title>{cardTitle}</Card.Title>\n        </Card.Body>\n        <Card.Footer className=\"btn btn-primary\">\n          <Link to={'/browse-letters-' + this.props.type}>Explore</Link>\n        </Card.Footer>\n      </Card>\n\n    )\n  }\n}\n\nexport default withRouter(HomeTile);\n","import React, { Component } from \"react\";\nimport HomeJumbotron from './Jumbotron';\nimport HomeTile from './utilities/HomeTile';\nimport DocMetaBuilder from './utilities/DocMetaBuilder';\nimport { CardGroup, Container } from 'react-bootstrap';\n\nclass Landing extends Component {\n  render() {\n    const metaBuild = {\n      title: \"Samuel Beckett's Letters\",\n      description: \"Begin your exploration of Samuel Beckett's letters\",\n    };\n\n    return (\n      <div className=\"landing\" >\n        <DocMetaBuilder {...metaBuild} />\n        <HomeJumbotron />\n        <Container fluid className=\"home-tiles\">\n          <h2>Browse Letters By</h2>\n          <CardGroup className='landing-group'>\n            <HomeTile type='attendance' />\n            <HomeTile type='music' />\n            <HomeTile type='organization' />\n            <HomeTile type='person' />\n            <HomeTile type='place' />\n            <HomeTile type='production' />\n            <HomeTile type='publication' />\n          </CardGroup>\n          <CardGroup className='landing-group'>\n          <HomeTile type='public-event' />\n            <HomeTile type='reading' />\n            <HomeTile type='repository' />\n            <HomeTile type='translating' />\n            <HomeTile type='work-of-art' />\n            <HomeTile type='writing' />\n          </CardGroup>\n        </Container>\n      </div >\n    )\n  }\n}\n\nexport default Landing;\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass RepositoryQuickGlance extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoaded: false,\n      error: '',\n      entityData: []\n    }\n  }\n\n  componentDidMount() {\n    this.getData()\n  }\n\n  getData() {\n    axios.all([\n      axios.get(this.props.apiUrl + '/repositories/' + this.props.id)])\n      .then(axios.spread((getData) => {\n        const entityData = getData.data.data;\n        this.setState({ entityData });\n        this.setState({ isLoaded: true })\n      }))\n      .catch((err) => {\n        this.setState({ isLoaded: false });\n        this.setState({ error: err.message });\n      });\n  }\n\n\n  render() {\n    const { error, isLoaded } = this.state;\n    // if there is an error\n    if (error) {\n      return <div>Error: {error.message}</div>;\n      // if not loaded show loading\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n      // return now that component has value\n    } else {\n      if (this.props.type === 'nolink') {\n        return (\n          <p className=\"listLink\">\n            <span dangerouslySetInnerHTML={{ __html: this.state.entityData.attributes.label }} />\n          </p>\n        )\n      }\n      else {\n        return (\n          <a href={'/repositories/' + this.state.entityData.id} className=\"listLink\">{this.state.entityData.attributes.label} </a>\n        )\n      }\n    }\n  }\n}\n\nexport default RepositoryQuickGlance;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nclass QuickGlance extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoaded: false,\n      error: '',\n      entityData: [],\n      localURLExtension: '',\n      typeLabel: ''\n    }\n  }\n\n  componentDidMount() {\n    this.getData()\n  }\n\n  getData() {\n    axios.all([\n      axios.get(this.props.apiUrl + '/entities/' + this.props.id)])\n      .then(axios.spread((getData) => {\n        const entityData = getData.data.data;\n        this.setState({ entityData });\n        this.getLocalURLExtender();\n        this.setState({ isLoaded: true })\n      }))\n      .catch((err) => {\n        this.setState({ isLoaded: false });\n        this.setState({ error: err.message });\n      });\n  }\n\n  getLifeDates() {\n    if (this.state.entityData.attributes.properties != null) {\n      return ' (' + this.state.entityData.attributes.properties['life-dates'] + ')'\n    }\n    else {\n      return false\n    }\n  }\n\n  getLocalURLExtender() {\n    this.setState({ typeLabel: this.state.entityData.attributes['type-label'] })\n    if (this.state.typeLabel === 'Attendance') {\n      this.setState({ localURLExtension: '/attendance/' + this.state.entityData.id })\n    }\n    else if (this.state.typeLabel === 'Music') {\n      this.setState({ localURLExtension: '/music/' + this.state.entityData.id })\n    }\n    else if (this.state.typeLabel === 'Organization') {\n      this.setState({ localURLExtension: '/organization/' + this.state.entityData.id })\n    }\n    else if (this.state.typeLabel === 'Place') {\n      this.setState({ localURLExtension: '/place/' + this.state.entityData.id })\n    }\n    else if (this.state.typeLabel === 'Production') {\n      this.setState({ localURLExtension: '/production/' + this.state.entityData.id })\n    }\n    else if (this.state.typeLabel === 'Public Event') {\n      this.setState({ localURLExtension: '/public-event/' + this.state.entityData.id })\n    }\n    else if (this.state.typeLabel === 'Publication') {\n      this.setState({ localURLExtension: '/publication/' + this.state.entityData.id })\n    }\n    else if (this.state.typeLabel === 'Reading') {\n      this.setState({ localURLExtension: '/reading/' + this.state.entityData.id })\n    }\n    else if (this.state.typeLabel === 'Translating') {\n      this.setState({ localURLExtension: '/translating/' + this.state.entityData.id })\n    }\n    else if (this.state.typeLabel === 'Work Of Art') {\n      this.setState({ localURLExtension: '/work-of-art/' + this.state.entityData.id })\n    }\n    else if (this.state.typeLabel === 'Writing') {\n      this.setState({ localURLExtension: '/writing/' + this.state.entityData.id })\n    }\n    else {\n      this.setState({ localURLExtension: '/people/' + this.state.entityData.id })\n    }\n  }\n\n  render() {\n    const { error, isLoaded } = this.state;\n    // if there is an error\n    if (error) {\n      return <div>Error: {error.message}</div>;\n      // if not loaded show loading\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n      // return now that component has value\n    } else {\n      if (this.props.type === 'nolink') {\n        return (\n          <p className=\"listLink\">\n            <span dangerouslySetInnerHTML={{ __html: this.state.entityData.attributes.label }} />\n            {this.state.typeLabel === 'Person' ? this.getLifeDates() : null}\n            {this.state.typeLabel === 'Production' ?\n              <span dangerouslySetInnerHTML={{\n                __html:\n                  // dir, theater, city, date\n                  `${this.state.entityData.attributes.properties['city'] || this.state.entityData.attributes.properties['date'] || this.state.entityData.attributes.properties['director'] || this.state.entityData.attributes.properties['theatre'] ? ' [' : ''}`\n                  + `${this.state.entityData.attributes.properties['city'] ? `${this.state.entityData.attributes.properties['city']}` : ``}`\n                  + `${this.state.entityData.attributes.properties['city'] ? `${this.state.entityData.attributes.properties['date'] || this.state.entityData.attributes.properties['director'] || this.state.entityData.attributes.properties['theatre'] ? `, ` : ``}` : ``}`\n                  + `${this.state.entityData.attributes.properties['date'] ? `${this.state.entityData.attributes.properties['date']}` : ``}`\n                  + `${this.state.entityData.attributes.properties['date'] ? `${this.state.entityData.attributes.properties['director'] || this.state.entityData.attributes.properties['theatre'] ? `, ` : ``}` : ``}`\n                  + `${this.state.entityData.attributes.properties['director'] ? `dir. ${this.state.entityData.attributes.properties['director']}` : ``}`\n                  + `${this.state.entityData.attributes.properties['director'] && this.state.entityData.attributes.properties['theatre'] ? ', ' : ``}`\n                  + `${this.state.entityData.attributes.properties['theatre'] ? `${this.state.entityData.attributes.properties['theatre']}` : ``}`\n                  + `${this.state.entityData.attributes.properties['city'] || this.state.entityData.attributes.properties['date'] || this.state.entityData.attributes.properties['director'] || this.state.entityData.attributes.properties['theatre'] ? ']' : ''}`\n              }} />\n              : null}\n          </p>\n        )\n      }\n      else {\n        return (\n          <Link to={this.state.localURLExtension} className=\"listLink\">\n            <span dangerouslySetInnerHTML={{ __html: this.state.entityData.attributes.label }} />\n            {this.state.typeLabel === 'Person' ? this.getLifeDates() : null}\n            {this.state.typeLabel === 'Production' ?\n              <span dangerouslySetInnerHTML={{\n                __html:\n                  // dir, theater, city, date\n                  `${this.state.entityData.attributes.properties['city'] || this.state.entityData.attributes.properties['date'] || this.state.entityData.attributes.properties['director'] || this.state.entityData.attributes.properties['theatre'] ? ' [' : ''}`\n                  + `${this.state.entityData.attributes.properties['city'] ? `${this.state.entityData.attributes.properties['city']}` : ``}`\n                  + `${this.state.entityData.attributes.properties['city'] ? `${this.state.entityData.attributes.properties['date'] || this.state.entityData.attributes.properties['director'] || this.state.entityData.attributes.properties['theatre'] ? `, ` : ``}` : ``}`\n                  + `${this.state.entityData.attributes.properties['date'] ? `${this.state.entityData.attributes.properties['date']}` : ``}`\n                  + `${this.state.entityData.attributes.properties['date'] ? `${this.state.entityData.attributes.properties['director'] || this.state.entityData.attributes.properties['theatre'] ? `, ` : ``}` : ``}`\n                  + `${this.state.entityData.attributes.properties['director'] ? `dir. ${this.state.entityData.attributes.properties['director']}` : ``}`\n                  + `${this.state.entityData.attributes.properties['director'] && this.state.entityData.attributes.properties['theatre'] ? ', ' : ``}`\n                  + `${this.state.entityData.attributes.properties['theatre'] ? `${this.state.entityData.attributes.properties['theatre']}` : ``}`\n                  + `${this.state.entityData.attributes.properties['city'] || this.state.entityData.attributes.properties['date'] || this.state.entityData.attributes.properties['director'] || this.state.entityData.attributes.properties['theatre'] ? ']' : ''}`\n              }} />\n              : null}\n          </Link>\n        )\n      }\n    }\n  }\n}\n\nexport default QuickGlance;\n","import axios from \"axios\";\nimport DocMetaBuilder from './utilities/DocMetaBuilder';\nimport React, { Component } from \"react\";\nimport RepositoryQuickGlance from './RepositoryQuickGlance';\nimport QuickGlance from './QuickGlance';\n\n\nexport class LetterDetails extends Component {\n\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      letter: [],\n      letterRecipients: [],\n      entitiesMentioned: []\n    };\n  }\n\n  getData() {\n    axios.all([\n      axios.get(this.props.apiUrl + '/letters/' + this.props.match.params.id)])\n      .then(axios.spread((getEntityList) => {\n        const letter = getEntityList.data.data;\n        console.log(letter)\n        const placesWritten = getEntityList.data.data.relationships['places-written'].data\n        const letterRecipients = getEntityList.data.data.attributes.recipients\n        const entitiesMentioned = getEntityList.data.data.attributes['entities-mentioned-list']\n        const attributes = getEntityList.data.data.attributes\n        this.setState({ letter, placesWritten, attributes, letterRecipients, entitiesMentioned });\n        this.setState({ isLoaded: true })\n      }))\n      .catch((err) => {\n        this.setState({ isLoaded: false });\n        this.setState({ error: err.message });\n      });\n  }\n\n\n\n  componentDidMount() {\n    this.getData()\n  }\n\n  getPhysicalDescription() {\n    var physicalDescription = '';\n    if (this.state.letter.attributes['typed']) {\n      physicalDescription += 'T'\n    }\n    else {\n      physicalDescription += 'A'\n    }\n    physicalDescription += this.state.letter.attributes['physical-desc'];\n    if (this.state.letter.attributes['signed']) {\n      physicalDescription += 'S'\n    }\n    else {\n      physicalDescription += 'I'\n    }\n    physicalDescription += '; '\n    if (this.state.letter.attributes['leaves']) {\n      physicalDescription += this.state.letter.attributes['leaves'] + ' leaf,'\n    }\n    if (this.state.letter.attributes['sides']) {\n      physicalDescription += this.state.letter.attributes['sides'] + ' side'\n    }\n\n    return physicalDescription;\n  }\n\n  render() {\n    const { error, isLoaded } = this.state;\n    // if there is an error\n    if (!error & isLoaded) {\n      let metaBuild = {\n        title: this.state.letter.attributes['formatted-date'],\n        desc: `letter to ${this.state.letter.attributes['recipient-list']}`\n      }\n      return (\n        <div className=\"details\">\n          <DocMetaBuilder {...metaBuild} />\n          <h1>Letter To: {this.state.letter.attributes['recipient-list']} ({this.state.letter.attributes['formatted-date']})</h1>\n          <div className=\"panel\">\n            <h2>Information About This Letter</h2>\n            <table className=\"table table-striped\">\n              <tbody>\n                {this.state.letter.attributes['addressed-from'] ? <tr><td>Addressed From:</td><td> <span className=\"value\">{this.state.letter.attributes['addressed-from']}</span></td></tr> : null}\n                {this.state.letter.attributes['addressed-to'] ? <tr><td>Addressed To:</td><td><span dangerouslySetInnerHTML={{ __html: this.state.letter.attributes['addressed-to'] }} /></td></tr> : null}\n                <tr><td>Envelope: </td>{this.state.letter.attributes['envelope'] ? <td>E</td> : <td></td>}</tr>\n                {this.state.letter.attributes['letter-publisher'] ? <tr><td>Letter Publisher:</td><td> {this.state.letter.attributes['letter-publisher']}</td></tr> : null}\n                {this.state.letter.attributes['notes'] ? <tr><td>Notes:</td><td> {this.state.letter.attributes['notes']}</td></tr> : null}\n                <tr><td>Physical Description:</td>\n                  <td>{this.getPhysicalDescription()} </td></tr>\n                {this.state.letter.attributes['physical-detail'] ? <tr><td>Physical Detail: </td><td>{this.state.letter.attributes['physical-detail']}</td></tr> : null}\n                {this.state.letter.attributes['physical-notes'] ? <tr><td>Physical Notes:</td><td> {this.state.letter.attributes['physical-notes']}</td></tr> : null}\n                {this.state.letter.attributes['postcard-image'] ? <tr><td>Postcard Image: </td><td>{this.state.letter.attributes['postcard-image']}</td></tr> : null}\n                {this.state.letter.attributes['postmark'] ? <tr><td>Postmark: </td><td>{this.state.letter.attributes['postmark']}</td></tr> : null}\n                <tr>\n                  <td>Recipient{this.state.letter.attributes.recipients.length > 1 ? 's' : null}:</td>\n                  <td>\n                    {this.state.letter.attributes.recipients.map((entity) =>\n                      <QuickGlance apiUrl={this.props.apiUrl} id={entity.id} apiUrlExtender='entities' key={entity.id} type='nolink' />\n                    )}\n                  </td>\n                </tr>\n                <tr>\n                  <td>Repository:</td>\n                  <td>\n                    {this.state.letter.relationships.repositories.data.map((respository) =>\n                      <RepositoryQuickGlance apiUrl={this.props.apiUrl} id={respository.id} key={respository.id} type='nolink' />\n                    )}\n                  </td>\n                </tr>\n                <tr>\n                  <td>Place Written:</td>\n                  <td>\n                    {this.state.letter.relationships['places-written'].data.map((entity) =>\n                      <QuickGlance apiUrl={this.props.apiUrl} id={entity.id} apiUrlExtender='entities' key={entity.id} type='nolink' />\n                    )}\n                  </td>\n                </tr>\n                <tr>\n                  <td>Production{this.state.entitiesMentioned['production'].length > 1 ? 's' : null} Mentioned:</td>\n                  <td>\n                    {this.state.entitiesMentioned['production'].map((entity) =>\n                      <QuickGlance apiUrl={this.props.apiUrl} id={entity.id} apiUrlExtender='entities' key={entity.id} />\n                    )}\n                  </td>\n                </tr>\n                <tr>\n                  <td>Attendance Mentioned:</td>\n                  <td>\n                    {this.state.entitiesMentioned['attendance'].map((entity) =>\n                      <QuickGlance apiUrl={this.props.apiUrl} id={entity.id} apiUrlExtender='entities' key={entity.id} />\n                    )}\n                  </td>\n                </tr>\n                <tr>\n                  <td>Music Mentioned:</td>\n                  <td>\n                    {this.state.entitiesMentioned['music'].map((entity) =>\n                      <QuickGlance apiUrl={this.props.apiUrl} id={entity.id} apiUrlExtender='entities' key={entity.id} />\n                    )}\n                  </td>\n                </tr>\n                <tr>\n                  <td>Organization{this.state.entitiesMentioned['organization'].length > 1 ? 's' : null} Mentioned:</td>\n                  <td>\n                    {this.state.entitiesMentioned['organization'].map((entity) =>\n                      <QuickGlance apiUrl={this.props.apiUrl} id={entity.id} apiUrlExtender='entities' key={entity.id} />\n                    )}\n                  </td>\n                </tr>\n                <tr>\n                  <td>People Mentioned:</td>\n                  <td>\n                    {this.state.entitiesMentioned['person'].map((entity) =>\n                      <QuickGlance apiUrl={this.props.apiUrl} id={entity.id} apiUrlExtender='entities' key={entity.id} />\n                    )}\n                  </td>\n                </tr>\n                <tr>\n                  <td>Place{this.state.entitiesMentioned['place'].length > 1 ? 's' : null} Mentioned:</td>\n                  <td>\n                    {this.state.entitiesMentioned['place'].map((entity) =>\n                      <QuickGlance apiUrl={this.props.apiUrl} id={entity.id} apiUrlExtender='entities' key={entity.id} />\n                    )}\n                  </td>\n                </tr>\n                <tr>\n                  <td>Event{this.state.entitiesMentioned['public-event'].length > 1 ? 's' : null} Mentioned:</td>\n                  <td>\n                    {this.state.entitiesMentioned['public-event'].map((entity) =>\n                      <QuickGlance apiUrl={this.props.apiUrl} id={entity.id} apiUrlExtender='entities' key={entity.id} />\n                    )}\n                  </td>\n                </tr>\n                <tr>\n                  <td>Publication{this.state.entitiesMentioned['public-event'].length > 1 ? 's' : null} Mentioned:</td>\n                  <td>\n                    {this.state.entitiesMentioned['publication'].map((entity) =>\n                      <QuickGlance apiUrl={this.props.apiUrl} id={entity.id} apiUrlExtender='entities' key={entity.id} />\n                    )}\n                  </td>\n                </tr>\n                <tr>\n                  <td>Reading Mentioned:</td>\n                  <td>\n                    {this.state.entitiesMentioned['reading'].map((entity) =>\n                      <QuickGlance apiUrl={this.props.apiUrl} id={entity.id} apiUrlExtender='entities' key={entity.id} />\n                    )}\n                  </td>\n                </tr>\n                <tr>\n                  <td>Translating Mentioned:</td>\n                  <td>\n                    {this.state.entitiesMentioned['translating'].map((entity) =>\n                      <QuickGlance apiUrl={this.props.apiUrl} id={entity.id} apiUrlExtender='entities' key={entity.id} />\n                    )}\n                  </td>\n                </tr>\n                <tr>\n                  <td>Work{this.state.entitiesMentioned['work-of-art'].length > 1 ? 's' : null} of Art Mentioned:</td>\n                  <td>\n                    {this.state.entitiesMentioned['work-of-art'].map((entity) =>\n                      <QuickGlance apiUrl={this.props.apiUrl} id={entity.id} apiUrlExtender='entities' key={entity.id} />\n                    )}\n                  </td>\n                </tr>\n                <tr>\n                  <td>Writing Mentioned:</td>\n                  <td>\n                    {this.state.entitiesMentioned['writing'].map((entity) =>\n                      <QuickGlance apiUrl={this.props.apiUrl} id={entity.id} apiUrlExtender='entities' key={entity.id} />\n                    )}\n                  </td>\n                </tr>\n\n              </tbody>\n            </table>\n          </div>\n        </div>\n      )\n    }\n    else {\n      return null\n    }\n  }\n}\n\nexport default LetterDetails;\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nclass LoadingSpinner extends Component {\n  render() {\n    return(\n          <div className=\"text-center\">\n            <FontAwesomeIcon icon=\"spinner\" spin size=\"6x\" />\n          </div>\n    )\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from \"react\";\nimport { Button, Dropdown } from 'react-bootstrap';\n\nclass Pagination extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      page: '1'\n    };\n  }\n\n  componentDidMount() {\n    // this.createPagination();\n  }\n\n  changePageNumber = (e) => {\n    var page = e.target.id\n    this.props.action(page)\n    this.setState(() => {\n      return { page: page }\n    })\n  }\n\n  createPrevBtn = () => {\n    var page = parseInt(this.state.page)\n    if (page === 1) {\n      return null\n    }\n    else {\n      return <Button onClick={this.changePageNumber} id={page-1} className='paginate-prev paginate-btn'>Previous</Button>\n    }\n  }\n\n  createNextBtn = () => {\n    var page = parseInt(this.state.page)\n    if (page === this.props.pagination['total-pages']) {\n      return null\n    }\n    else {\n      return <Button onClick={this.changePageNumber} id={page+1} className='paginate-btn'>Next</Button>\n    }\n  }\n\n  createPagination = () => {\n    let pageBtns = []\n    if (this.props.pagination['total-pages'] > 1) {\n      for (let i = 0; i < this.props.pagination['total-pages']; i++) {\n        pageBtns.push(<Dropdown.Item key={i} className=\"page-item pagination-link\" onClick={this.changePageNumber} id={i + 1} alt={\"Page\" + i + 1}>{i + 1}</Dropdown.Item>)\n      }\n      return ([\n        <div key=\"pagination-row\">\n          <Dropdown>\n            <Dropdown.Toggle className='pagination-toggle'>\n              Page {this.state.page} of {this.props.pagination['total-pages']}\n            </Dropdown.Toggle>\n            <Dropdown.Menu className='pagination-dropdown'>\n              {pageBtns}\n            </Dropdown.Menu>\n          </Dropdown>\n          {this.createPrevBtn()}\n          {this.createNextBtn()}\n        </div>\n      ])\n    }\n  }\n\n\n  render() {\n    return (\n      <nav aria-label=\"pagination\">\n        {this.createPagination()}\n      </nav >\n    )\n  }\n}\n\nexport default Pagination;\n","import BrowseLetters from './BrowseLetters';\nimport DocMetaBuilder from './utilities/DocMetaBuilder';\nimport LoadingSpinner from './utilities/LoadingSpinner';\nimport Pagination from './utilities/Pagination';\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Container, Table, Form, Button, Col, Row } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Link } from 'react-router-dom';\n\nclass LettersBy extends Component {\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            data: [],\n            page: '1',\n            pagination: [],\n            isSearching: false,\n            entityType: ''\n        };\n        this.getData = this.getData.bind(this);\n        this.intiateSearch = this.intiateSearch.bind(this);\n        this.searchData = this.searchData.bind(this);\n        this.resetPage = this.resetPage.bind(this);\n    }\n\n    componentDidMount() {\n        this.getData();\n    }\n\n    handler = (pageValue) => {\n        const page = pageValue\n        this.setState({ page }, () => {\n            this.getData();\n        });\n    }\n\n    entityChange = (entityType) => {\n        this.setState({ entityType, page: 1 }, () => {\n            this.getData();\n        });\n    }\n\n    intiateSearch(event) {\n        event.preventDefault()\n        const searchTerms = event.target.elements.query.value;\n        this.searchData(searchTerms)\n    }\n\n    resetPage(event) {\n        event.preventDefault()\n        this.refs.form[\"query\"].value = ''\n        this.setState({ isSearching: false, isLoaded: false })\n        this.getData();\n    }\n\n    searchData = (searchTerms) => {\n        if (this.props.entityType === 'repositories') {\n            // Declare variables\n            var input, filter, table, tr, td, i, txtValue;\n            input = document.getElementById(\"query\");\n            filter = input.value.toUpperCase();\n            table = document.getElementById(\"browse-by\");\n            tr = table.getElementsByTagName(\"tr\");\n            // Loop through all table rows, and hide those who don't match the search query\n            for (i = 0; i < tr.length; i++) {\n                td = tr[i].getElementsByTagName(\"td\")[0];\n                if (td) {\n                    txtValue = td.textContent || td.innerText;\n                    if (txtValue.toUpperCase().indexOf(filter) > -1) {\n                        table.classList.remove('table-striped')\n                        tr[i].style.display = \"\";\n                    } else {\n                        tr[i].style.display = \"none\";\n                    }\n                }\n            }\n        }\n        else {\n            this.setState({ isSearching: true })\n            axios.all([\n                axios.get(this.props.apiUrl + '/search-entities?query=' + searchTerms + '&type=' + this.props.entityType)])\n                .then(axios.spread((getAllData) => {\n                    const data = getAllData.data.data;\n                    const pagination = getAllData.data.meta.pagination;\n                    this.setState({ pagination, data, isLoaded: true });\n                }))\n                .catch((err) => {\n                    this.setState({ isLoaded: false, error: err.message });\n                });\n        }\n    }\n\n    getData = () => {\n        this.setState({ isLoaded: false })\n        console.log(this.props.entityType)\n        if (this.props.entityType === 'repositories') {\n            axios.all([\n                axios.get(this.props.apiUrl + '/repositories')])\n                .then(axios.spread((getAllData) => {\n                    const data = getAllData.data.data;\n                    console.log(data)\n                    this.setState({ data, isLoaded: true });\n                }))\n                .catch((err) => {\n                    this.setState({ isLoaded: false, error: err.message });\n                });\n        }\n        else {\n            axios.all([\n                axios.get(this.props.apiUrl + '/entities?entity_type=' + this.props.entityType + '&items=50&page=' + this.state.page)\n            ])\n                .then(axios.spread((getAllData) => {\n                    const data = getAllData.data.data;\n                    const pagination = getAllData.data.meta.pagination;\n                    this.setState({ pagination, data, isLoaded: true });\n\n                    console.log(data)\n                }))\n                .catch((err) => {\n                    this.setState({ isLoaded: false, error: err.message });\n                });\n        }\n    }\n\n\n\n    render() {\n        var EntityList = this.state.data.map((entity) => {\n            if (entity.attributes.label !== null) {\n                let entityLabel\n                if (entity.attributes['type-label'] === 'Music') {\n                    if (entity.attributes.properties && entity.attributes.properties.composer) {\n                        entityLabel = <span dangerouslySetInnerHTML={{ __html: entity.attributes.label + \" composed by \" + entity.attributes.properties.composer }} />\n                    }\n                    else {\n                        entityLabel = <span dangerouslySetInnerHTML={{ __html: entity.attributes.label }} />\n                    }\n                }\n                else if (entity.attributes['type-label'] === 'Publication') {\n                    if (entity.attributes.properties && entity.attributes.properties.author) {\n                        entityLabel = <span dangerouslySetInnerHTML={{ __html: entity.attributes.label + \" by \" + entity.attributes.properties.author }} />\n                    }\n                    else {\n                        entityLabel = <span dangerouslySetInnerHTML={{ __html: entity.attributes.label }} />\n                    }\n                }\n                else if (entity.attributes['type-label'] === 'Production') {\n                    entityLabel = <span dangerouslySetInnerHTML={{\n                        __html:\n                            `${entity.attributes.label}`\n                            + `${entity.attributes.properties['director'] || entity.attributes.properties['theatre'] || entity.attributes.properties['city'] || entity.attributes.properties['date'] ? ', ' : ''}`\n                            + `${entity.attributes.properties['director'] ? `dir. ${entity.attributes.properties['director']}` : ``}`\n                            + `${entity.attributes.properties['director'] ? `${entity.attributes.properties['theatre'] || entity.attributes.properties['city'] || entity.attributes.properties['date'] ? `, ` : ``}` : ``}`\n                            + `${entity.attributes.properties['theatre'] ? `${entity.attributes.properties['theatre']}` : ``}`\n                            + `${entity.attributes.properties['theatre'] ? `${entity.attributes.properties['city'] || entity.attributes.properties['date'] ? `, ` : ``}` : ``}`\n                            + `${entity.attributes.properties['city'] ? `${entity.attributes.properties['city']}` : ``}`\n                            + `${entity.attributes.properties['city'] && entity.attributes.properties['date'] ? ', ' : ``}`\n                            + `${entity.attributes.properties['date'] ? `${entity.attributes.properties['date']}` : ``}`\n                            + `${entity.attributes.properties['director'] || entity.attributes.properties['theatre'] || entity.attributes.properties['city'] || entity.attributes.properties['date'] ? '' : ''}`\n                            + `.`\n                    }} />\n                }\n                else if (entity.attributes['type-label'] === 'Reading') {\n                    let currentLabel\n                    if (entity.attributes.label.slice(-1) === '.') {\n                        currentLabel = entity.attributes.label.substring(0, entity.attributes.label.length - 1)\n                    }\n                    else {\n                        currentLabel = entity.attributes.label\n                    }\n                    if (entity.attributes.properties && entity.attributes.properties.authors) {\n                        entityLabel = <span dangerouslySetInnerHTML={{ __html: currentLabel + \" by \" + entity.attributes.properties.authors[0] }} />\n                    }\n                    else {\n                        entityLabel = <span dangerouslySetInnerHTML={{ __html: currentLabel }} />\n                    }\n                }\n                else if (entity.attributes['type-label'] === 'Translating') {\n                    if (entity.attributes.properties && entity.attributes.properties.author) {\n                        entityLabel = <span dangerouslySetInnerHTML={{ __html: entity.attributes.label + \" by \" + entity.attributes.properties.author }} />\n                    }\n                    else {\n                        entityLabel = <span dangerouslySetInnerHTML={{ __html: entity.attributes.label }} />\n                    }\n                }\n                else if (entity.attributes['type-label'] === 'Work Of Art') {\n                    if (entity.attributes.properties && entity.attributes.properties.author) {\n                        entityLabel = <span dangerouslySetInnerHTML={{ __html: entity.attributes.label + \" by \" + entity.attributes.properties.author }} />\n                    }\n                    else {\n                        entityLabel = <span dangerouslySetInnerHTML={{ __html: entity.attributes.label }} />\n                    }\n                }\n                else {\n                    entityLabel = <span dangerouslySetInnerHTML={{ __html: entity.attributes.label }} />\n                }\n                return entity.attributes.label === ' ' || entity.attributes.label === null ? null : <tr key={entity.id}>\n                    <td>\n                        {this.props.entityType === 'person' ?\n                            <Link\n                                to={{\n                                    pathname: `/people/${entity.id}`,\n                                    state: {\n                                        id: entity.id,\n                                        name: entity.attributes.label\n                                    }\n                                }}>\n                                <span dangerouslySetInnerHTML={{ __html: entity.attributes.label }} />\n                                {entity.attributes.properties && entity.attributes.properties['life-dates'] ? ' (' + entity.attributes.properties['life-dates'] + ')' : null}\n                            </Link>\n                            :\n                            <Link\n                                to={{\n                                    pathname: `/${this.props.entityType}/${entity.id}`,\n                                    state: {\n                                        id: entity.id\n                                    }\n                                }}>\n                                {entityLabel}\n                            </Link>\n                        }\n                    </td>\n                </tr>\n            }\n            else {\n                return null\n            }\n        }\n        );\n\n        const metaBuild = {\n            title: this.props.metaTitle,\n            description: `Browse all letters on this page`,\n        };\n\n        return (\n            <Container fluid>\n                <DocMetaBuilder {...metaBuild} />\n                <BrowseLetters active={'by-' + this.props.entityType} action={this.entityChange} />\n                <Row className=\"no-gutters pt-3\">\n                    <Col className=\"no-gutters\">\n                        <Form className=\"tab-search\" onSubmit={this.intiateSearch} ref=\"form\">\n                            <Form.Group>\n                                <div className=\"input-group mb-3\">\n                                    <div className=\"input-group-prepend\">\n                                        <Button aria-label='submit button' variant=\"primary\" type=\"submit\">\n                                            <FontAwesomeIcon icon=\"search\" />\n                                        </Button>\n                                    </div>\n                                    <Form.Control id=\"query\" name=\"query\" type=\"query\" aria-label='query' placeholder={this.props.placeholder} />\n                                </div>\n                            </Form.Group>\n                        </Form>\n                    </Col>\n                    {this.state.isSearching ? <Col md={1} className=\"no-gutters\">\n                        <Form onSubmit={this.resetPage}><Button variant=\"secondary\" type=\"submit\" className=\"full-width\">Clear</Button></Form>\n                    </Col> : null}\n                </Row>\n                {this.state.isLoaded && this.props.entityType !== 'repositories' ? <Pagination action={this.handler} pagination={this.state.pagination} /> : null}\n                <Table striped bordered className=\"browse-by\" id='browse-by' >\n                    <thead>\n                        <tr>\n                            <th>{this.props.tableHeader}</th>\n                        </tr>\n                    </thead>\n                    {!this.state.isLoaded ? <LoadingSpinner /> : <tbody>\n                        {EntityList}\n                    </tbody>}\n                </Table>\n            </Container>\n        )\n    }\n}\n\nexport default LettersBy;\n","import React, { Component } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport DocMetaBuilder from './utilities/DocMetaBuilder';\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\nimport SearchRecipientOnPage from './utilities/SearchRecipientOnPage';\nimport MentionedLetters from './utilities/MentionedLettersTable';\n\nclass PersonDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoaded: false,\n      error: '',\n      entityData: [],\n      receivedLetters: [],\n      lettersList: []\n    }\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  getData = () => {\n    axios.all([\n      axios.get(this.props.apiUrl +'/entities/' +  this.props.match.params.id)])\n      .then(axios.spread((getEntityData) => {\n        const entityData = getEntityData.data.data;\n        console.log(entityData)\n\n        const lettersList = getEntityData.data.data.attributes['public-letters-hash'];\n        this.getReceivedLetters(getEntityData.data.data.attributes.label)\n        this.setState({ entityData, lettersList });\n        this.setState({ isLoaded: true })\n      }))\n      .catch((err) => {\n        this.setState({ isLoaded: false });\n        this.setState({ error: err.message });\n      });\n  }\n\n  getReceivedLetters = (name) => {\n    if (name !== \" \") {\n      axios.all([\n        axios.get(this.props.apiUrl +'/letters?recipients=' +  name)])\n        .then(axios.spread((getReceivedLetters) => {\n          const receivedLetters = getReceivedLetters.data.data;\n          this.setState({ receivedLetters });\n          this.setState({ isLoaded: true })\n        }))\n        .catch((err) => {\n          this.setState({ isLoaded: false });\n          this.setState({ error: err.message });\n        });\n    }\n\n  }\n\n\n  render() {\n\n    const ReceivedLettersList = this.state.receivedLetters.map((letter, index) =>\n      <tr key={index}>\n        <td>{letter.attributes['formatted-date']}</td>\n        <td><Link to={'/letters/letterdetails/'+letter.id}>Explore Letter</Link></td>\n      </tr>\n    );\n\n    const { error, isLoaded } = this.state;\n    // if there is an error\n    if (error) {\n      return <div>Error: {error.message}</div>;\n      // if not loaded show loading\n    } else if (!isLoaded) {\n      return <Container>Loading...</Container>;\n      // return now that component has value\n    } else {\n      const metaBuild = {\n        title: this.state.entityData.attributes.label,\n        description: `View details for ${this.state.entityData.attributes.label}`,\n        id: this.state.entityData.id\n      };\n      return (\n        <div className=\"details\">\n        <DocMetaBuilder {...metaBuild} />\n        <h1>\n          <span dangerouslySetInnerHTML={{__html: this.state.entityData.attributes.properties ? this.state.entityData.attributes.properties['last-name'] : null}} />\n          <span dangerouslySetInnerHTML={{__html: this.state.entityData.attributes.properties ? this.state.entityData.attributes.properties['first-name'] : null}} className={this.state.entityData.attributes.properties['first-name'] ? 'comma' : null} />\n          {this.state.entityData.attributes.properties && this.state.entityData.attributes.properties['alternate-names-spellings'].length > 0 ? <span className='spellings'>{this.state.entityData.attributes.properties['alternate-names-spellings'].map((entity, key) => <span key={key}  dangerouslySetInnerHTML={{__html: entity}} className=\"list-span\"></span>)} </span> :null}\n          {this.state.entityData.attributes.properties ? <span className={this.state.entityData.attributes.properties['life-dates'] ? \"comma\" : null}>{this.state.entityData.attributes.properties['life-dates']}</span> : null}\n          {this.state.entityData.attributes.properties ? <span className={this.state.entityData.attributes.properties.description ? \"comma\" : null} dangerouslySetInnerHTML={{ __html: this.state.entityData.attributes.properties.description.charAt(this.state.entityData.attributes.properties.description.length - 1) === '.' ? this.state.entityData.attributes.properties.description.slice(0, -1) : this.state.entityData.attributes.properties.description  }} /> : null}\n        </h1>\n        {this.state.entityData.attributes.properties && this.state.entityData.attributes.properties.links && this.state.entityData.attributes.properties.links.length > 0 ?\n          <a href={this.state.entityData.attributes.properties ? this.state.entityData.attributes.properties.links[0] : null} target=\"_blank\" rel=\"noopener noreferrer\" className=\"btn btn-primary\">VIAF</a>\n           : null }\n        {this.state.entityData.attributes.properties && this.state.entityData.attributes.properties.profile ?\n            <button class=\"btn btn-primary\" type=\"button\" data-toggle=\"collapse\" data-target=\"#personProfile\" aria-expanded=\"false\" aria-controls=\"personProfile\">\n              View Profile\n            </button>\n           : null }\n        {this.state.entityData.attributes.properties && this.state.entityData.attributes.properties.profile ?\n          <div class=\"collapse\" id=\"personProfile\">\n              {this.state.entityData.attributes.properties && this.state.entityData.attributes.properties.media && this.state.entityData.attributes.properties.media.images ? this.state.entityData.attributes.properties.media.images.map((image, index) =>\n                  <Row><Col md={9}><div dangerouslySetInnerHTML={{ __html: this.state.entityData.attributes.properties.profile }}/></Col>\n                  <Col md={3}><img src={image.link} alt={'photo of ' + this.state.entityData.attributes.label} className=\"profile-photo\"/></Col></Row>\n              ) : <div dangerouslySetInnerHTML={{ __html: this.state.entityData.attributes.properties.profile }}/> }\n            </div>\n              : null }\n\n          <h2>Letters Received:</h2>\n          <SearchRecipientOnPage tableId='receivedlettersList' placeHolder='by date'/>\n          <table id=\"receivedlettersList\" className=\"table table-bordered\">\n          <thead>\n            <tr>\n              <th colSpan=\"2\">Date</th>\n            </tr>\n          </thead>\n            <tbody>\n              {this.state.receivedLetters.length === 0 ? <tr><td>No Letters</td></tr> : ReceivedLettersList}\n\n            </tbody>\n          </table>\n          <div className=\"panel\">\n          <h2>Mentioned in:</h2>\n          <MentionedLetters letters={this.state.entityData.attributes['public-letters-hash']} />\n        </div>\n\n        </div>\n      )\n    }\n  }\n}\n\nexport default PersonDetails;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport SearchRecipientOnPage from './utilities/SearchRecipientOnPage';\nimport DocMetaBuilder from './utilities/DocMetaBuilder';\nimport HeaderBuilder from './utilities/HeaderBuilder';\n\nclass RepositoryDetails extends Component {\n\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoaded: false,\n      error: '',\n      entityData: []\n    }\n  }\n\n\n  componentDidMount() {\n    this.getData()\n  }\n\n\n  getData = () => {\n    axios.all([\n      axios.get(this.props.apiUrl + '/repositories/' + this.props.match.params.id)])\n      .then(axios.spread((getData) => {\n        const entityData = getData.data.data;\n        console.log(entityData)\n        this.setState({ entityData });\n        this.setState({ isLoaded: true })\n      }))\n      .catch((err) => {\n        this.setState({ isLoaded: false });\n        this.setState({ error: err.message });\n      });\n  }\n\n  render() {\n    const { error, isLoaded } = this.state;\n    // if there is an error\n    if (error) {\n      return <div>Error: {error.message}</div>;\n      // if not loaded show loading\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n      // return now that component has value\n    } else {\n      const metaBuild = {\n        title: this.state.entityData.attributes.label,\n        description: `${this.state.entityData.attributes.label} ${this.state.entityData.attributes['letter-count']} letters`,\n        id: this.state.entityData.id\n      };\n      return (\n        <div className=\"details\">\n          <DocMetaBuilder {...metaBuild} />\n          <HeaderBuilder header={this.state.entityData} id={this.state.entityData.id} />\n          <table className='table table-striped'>\n            <tbody className='details-table'>\n            <tr>\n              <td>American</td>\n              <td>{this.state.entityData.attributes.american ? 'Yes' : 'No'}</td>\n            </tr>\n            <tr>\n              <td>Letter Count</td>\n              <td>{this.state.entityData.attributes['letter-count']}</td>\n            </tr>\n            </tbody>\n          </table>\n          <SearchRecipientOnPage tableId='repositoryLetters' placeHolder='by recipient' />\n          <table className='table table-bordered' id='repositoryLetters'>\n            <thead>\n              <tr>\n                <th>Recipient</th>\n                <th colSpan=\"2\">Date</th>\n              </tr>\n            </thead>\n            {this.state.entityData.attributes['public-letters-hash'].map((letter, index) =>\n              <tr>\n                <td>{letter['recipients'].map((this_recipient) => <a href={'/people/' + this_recipient.id + '/' + this_recipient.name}>{this_recipient.name}</a>)}</td>\n                <td>{letter['date']}</td>\n                <td className=\"actions\"><a href={'/letters/letterdetails/' + letter.id}>Explore Letter</a></td>\n              </tr>\n            )}\n            {this.state.entityData.attributes['public-letters-hash'].length === 0 ? <tr><td colspan='2'>No Letters</td></tr>:null}\n          </table>\n        </div>\n      )\n    }\n  }\n}\n\nexport default RepositoryDetails;\n","import React, { Component } from \"react\";\nimport { withRouter } from 'react-router-dom';\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap';\n\n\nclass Sidebar extends Component {\n  render() {\n    return (\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Brand href=\"/\">Samuel Beckett Letters</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav.Link href=\"/\">Home</Nav.Link>\n          <NavDropdown title=\"Browse Letters By\" id=\"basic-nav-dropdown\">\n            <NavDropdown.Item href=\"/browse-letters-attendance\">Attendance</NavDropdown.Item>\n            <NavDropdown.Item href=\"/browse-letters-music\">Music</NavDropdown.Item>\n            <NavDropdown.Item href=\"/browse-letters-organization\">Organization</NavDropdown.Item>\n            <NavDropdown.Item href=\"/browse-letters-person\">Person</NavDropdown.Item>\n            <NavDropdown.Item href=\"/browse-letters-place\">Place</NavDropdown.Item>\n            <NavDropdown.Item href=\"/browse-letters-production\">Productions</NavDropdown.Item>\n            <NavDropdown.Item href=\"/browse-letters-public-event\">Public Event</NavDropdown.Item>\n            <NavDropdown.Item href=\"/browse-letters-publication\">Publication</NavDropdown.Item>\n            <NavDropdown.Item href=\"/browse-letters-reading\">Reading</NavDropdown.Item>\n            <NavDropdown.Item href=\"/browse-letters-repositories\">Repository</NavDropdown.Item>\n            <NavDropdown.Item href=\"/browse-letters-Translating\">Translating</NavDropdown.Item>\n            <NavDropdown.Item href=\"/browse-letters-work-of-art\">Works of Art</NavDropdown.Item>\n            <NavDropdown.Item href=\"/browse-letters-writing\">Writing</NavDropdown.Item>\n          </NavDropdown>\n          <Nav.Link href=\"/timeline\">Timeline</Nav.Link>\n          <Nav.Link href='/filter-search'>Search</Nav.Link>\n        </Navbar.Collapse>\n      </Navbar>\n    )\n  }\n}\n\nexport default withRouter(Sidebar);\n","import React, { Component } from 'react';\nimport {Col, Row} from 'react-bootstrap';\n\nclass TimelineEvent extends Component {\n  render() {\n    const eventClassName = (() => {\n      if (this.props.event.type === 'global')\n        return 'event offset-md-6 right-event'\n      else\n        return 'event left-event'\n    })();\n\n    return (\n      <Row>\n        <Col md={6} className={eventClassName}>\n          <div className={this.props.event.type}>\n            <h4>{this.props.event.date}</h4>\n            <p><span dangerouslySetInnerHTML={{ __html: this.props.event.event }} /></p>\n            {this.props.event.additional && this.props.event.additional.startsWith('http') ? <img className='timeline-event-image' src={this.props.event.additional} alt='timeline event' /> : null}\n          </div>\n        </Col>\n      </Row>\n    )\n\n  }\n}\n\nexport default TimelineEvent;\n","import React, { Component } from 'react';\nimport TimelineEvent from './TimelineEvent';\n\nclass TimelineYear extends Component {\n\n  render() {\n    const events = this.props.events.map((event, key) =>\n        <TimelineEvent key={key} event={event} />\n    );\n    return (\n        <div className=\"year-container\" id={'div' + this.props.year}>\n          <h3 className=\"year-title sticky-top\">\n            {this.props.year}\n          </h3>\n          {events}\n        </div>\n    )\n  }\n}\n\nexport default TimelineYear;\n","import React, { Component } from 'react';\nimport axios from \"axios\";\nimport TimelineYear from './TimelineYear';\nimport DocumentMeta from 'react-document-meta';\nimport ScrollIntoView from 'react-scroll-into-view';\n\nexport class Timeline extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.myRef = React.createRef();\n    this.state = {\n      error: null,\n      isLoaded: false,\n      timelineEntries: []\n    };\n  }\n\n  scrollToTop() {\n    window.scrollTo({\n      top: 0,\n      left: 0,\n      behavior: 'smooth'\n    })\n  }\n\n\n\n  componentDidMount() {\n    axios.all([\n      axios.get('/beckett-timeline-ver-26-aug.json')])\n      .then(axios.spread((getLetterData) => {\n        const timelineEntries = getLetterData.data.events;\n        this.setState({ timelineEntries });\n        this.setState({ isLoaded: true })\n      }))\n      .catch((err) => {\n        this.setState({ isLoaded: false });\n        this.setState({ error: err.message });\n      });\n  }\n\n  render() {\n    const { error, isLoaded } = this.state;\n    // if there is an error\n    if (error) {\n      return <div>Error: {error.message}</div>;\n      // if not loaded show loading\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n      // return now that component has value\n    } else {\n      let allTimelineEntries = this.state.timelineEntries\n      const meta = {\n        title: 'Beckett Timeline',\n        description: \"This page displays a timeline of events in Beckett's personal life and events he mentioned in his letters.\",\n      };\n      return (\n        <div className=\"timeline-container\">\n          <DocumentMeta {...meta} id='docmeta' />\n          <div className='scrollToLinks'>\n            <h3 id='scrollLabelSm'>Jump to:</h3>\n            <ScrollIntoView selector='#div1957' ><button className='btn btn-primary'>Top</button></ScrollIntoView>\n            {Object.keys(allTimelineEntries).map(keyOuter => {\n              return (\n                <ScrollIntoView selector={\"#div\" + keyOuter}><nav className='scrollToLink'>{keyOuter}</nav></ScrollIntoView>\n              )\n            })}\n          </div>\n          {\n            Object.keys(allTimelineEntries).map(keyOuter => {\n              console.log(keyOuter)\n              return (\n                <TimelineYear year={keyOuter} events={allTimelineEntries[keyOuter]} />\n              )\n            })\n          }\n        </div>\n      )\n    }\n  }\n}\n\nexport default Timeline;\n","import DocMetaBuilder from './utilities/DocMetaBuilder';\nimport LoadingSpinner from './utilities/LoadingSpinner';\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Button, Col, Container, Form, OverlayTrigger, Row, Table, Tooltip } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Link } from 'react-router-dom';\nimport HeaderBuilder from './utilities/HeaderBuilder';\nimport DatePicker from 'react-date-picker';\n\nconst renderSearchTooltip = (props) => (\n    <Tooltip id=\"search-tooltip\" {...props}>\n        \"Endgame\" : results exact match<br />\n        Waiting +Godot : results with Waiting AND Godot<br />\n        Waiting -Godot : results with Waiting but NOT Godot<br />\n        pat* : wildcard does work but with a caveat I’ll explain<br />\n        label:pat* : only searches the label attribute\n    </Tooltip>\n);\n\nclass FilterSearch extends Component {\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            error: null,\n            isLoaded: true,\n            data: [],\n            isSearching: false,\n            firstSearched: false,\n            entityType: '',\n            checkbox: true,\n            areAttendancesHidden: false,\n            areLettersHidden: false,\n            areMusicsHidden: false,\n            areOrganizationsHidden: false,\n            arePeopleHidden: false,\n            arePlacesHidden: false,\n            areProductionsHidden: false,\n            areEventsHidden: false,\n            arePublicationsHidden: false,\n            areReadingsHidden: false,\n            areTranslatingsHidden: false,\n            areWorkOfArtsHidden: false,\n            areWritingsHidden: false,\n            hideAll: true,\n            startDate: \"January 1, 1000\",\n            endDate: \"December 31, 2000\",\n        };\n    }\n\n    search(searchTerms) {\n        this.setState({ isLoaded: false })\n        axios.all([\n            axios.get('http://ot-api.ecdsdev.org/entities?search=' + searchTerms)\n        ])\n            .then(axios.spread((getAllData) => {\n                const data = getAllData.data.data;\n                this.setState({ data, isLoaded: true });\n            }))\n            .catch((err) => {\n                this.setState({ isLoaded: false, error: err.message });\n            });\n    }\n\n    intiateSearch = (event) => {\n        this.setState({ firstSearched: true })\n        event.preventDefault()\n        const searchTerms = event.target.elements.query.value;\n        this.search(searchTerms)\n    }\n\n    filterRowsByType = (stateType) => {\n        this.setState({\n            [`${stateType}`]: !this.state[`${stateType}`],\n        })\n    }\n\n    flipAllFilters = () => {\n        let direction = !this.state.hideAll;\n        this.setState({\n            areAttendancesHidden: direction ? false : true,\n            areLettersHidden: direction ? false : true,\n            areMusicsHidden: direction ? false : true,\n            areOrganizationsHidden: direction ? false : true,\n            arePeopleHidden: direction ? false : true,\n            arePlacesHidden: direction ? false : true,\n            areProductionsHidden: direction ? false : true,\n            areEventsHidden: direction ? false : true,\n            arePublicationsHidden: direction ? false : true,\n            areReadingsHidden: direction ? false : true,\n            areTranslatingsHidden: direction ? false : true,\n            areWorkOfArtsHidden: direction ? false : true,\n            areWritingsHidden: direction ? false : true,\n            hideAll: direction ? true : false,\n        }\n        )\n    }\n\n    render() {\n        let attendancesCount = 0\n        let lettersCount = 0\n        let musicCount = 0\n        let organizationsCount = 0\n        let peopleCount = 0\n        let placesCount = 0\n        let productionsCount = 0\n        let publicEventsCount = 0\n        let publicationsCount = 0\n        let readingsCount = 0\n        let translationsCount = 0\n        let worksOfArtCount = 0\n        let writingsCount = 0\n        var EntityList = this.state.data.map((entity) => {\n            if (entity.attributes['type-label'] !== null) {\n                if (entity.attributes['type-label'] === 'Attendance') {\n                    attendancesCount++\n                }\n                if (entity.attributes['type-label'] === 'Music') {\n                    musicCount++\n                }\n                if (entity.attributes['type-label'] === 'Organization') {\n                    organizationsCount++\n                }\n                if (entity.attributes['type-label'] === 'Person') {\n                    peopleCount++\n                }\n                if (entity.attributes['type-label'] === 'Place') {\n                    placesCount++\n                }\n                if (entity.attributes['type-label'] === 'Production') {\n                    productionsCount++\n                }\n                if (entity.attributes['type-label'] === 'Public Event') {\n                    publicEventsCount++\n                }\n                if (entity.attributes['type-label'] === 'Publication') {\n                    publicationsCount++\n                }\n                if (entity.attributes['type-label'] === 'Reading') {\n                    readingsCount++\n                }\n                if (entity.attributes['type-label'] === 'Translating') {\n                    translationsCount++\n                }\n                if (entity.attributes['type-label'] === 'Work Of Art') {\n                    worksOfArtCount++\n                }\n                if (entity.attributes['type-label'] === 'Writing') {\n                    writingsCount++\n                }\n                return <React.Fragment>\n                    {/* create row for each search result */}\n                    {entity.attributes['type-label'] === 'Person' ?\n                        this.state.arePeopleHidden ? null : <tr key={entity.id} >\n                            <td>\n                                <Link\n                                    to={{\n                                        pathname: `/people/${entity.id}`,\n                                        state: {\n                                            id: entity.id,\n                                            name: entity.attributes.label\n                                        }\n                                    }}>\n                                    <span dangerouslySetInnerHTML={{ __html: entity.attributes.label }} />\n                                    {entity.attributes.properties && entity.attributes.properties['life-dates'] ? ' (' + entity.attributes.properties['life-dates'] + ')' : null}\n                                </Link>\n                            </td>\n                            <td>Person</td>\n                        </tr>\n                        :\n                        entity.attributes['type-label'] === 'Public Event' ?\n                            this.state.areEventsHidden ? null : <tr>\n                                <td>\n                                    <Link\n                                        to={{\n                                            pathname: `/public-event/${entity.id}`,\n                                            state: {\n                                                id: entity.id\n                                            }\n                                        }}>\n                                        {entity.attributes.label ? <span dangerouslySetInnerHTML={{ __html: entity.attributes.label }} /> : <span>{entity.id}</span>}\n                                    </Link>\n                                </td>\n                                <td>Public Event</td>\n                            </tr>\n                            :\n                            entity.attributes['type-label'] === \"Work Of Art\" ?\n                                this.state.areWorkOfArtsHidden ? null : <tr>\n                                    <td>\n                                        <Link\n                                            to={{\n                                                pathname: `/work-of-art/${entity.id}`,\n                                                state: {\n                                                    id: entity.id\n                                                }\n                                            }}>\n                                            {entity.attributes.label ? <span dangerouslySetInnerHTML={{ __html: entity.attributes.label }} /> : <span>{entity.id}</span>}\n                                        </Link>\n                                    </td>\n                                    <td>Work of Art</td>\n                                </tr>\n                                :\n                                entity.attributes['type-label'] === \"Production\" ?\n                                    this.state.areProductionsHidden ? null : <tr>\n                                        <td>\n                                            <Link\n                                                to={{\n                                                    pathname: `/production/${entity.id}`,\n                                                    state: {\n                                                        id: entity.id\n                                                    }\n                                                }}>\n                                                {entity.attributes.label ? <span dangerouslySetInnerHTML={{\n                                                    __html:\n                                                        `${entity.attributes.label}`\n                                                        + `${entity.attributes.properties['city'] || entity.attributes.properties['date'] || entity.attributes.properties['director'] || entity.attributes.properties['theatre'] ? ' [' : ''}`\n                                                        + `${entity.attributes.properties['city'] ? `${entity.attributes.properties['city']}` : ``}`\n                                                        + `${entity.attributes.properties['city'] ? `${entity.attributes.properties['date'] || entity.attributes.properties['director'] || entity.attributes.properties['theatre'] ? `, ` : ``}` : ``}`\n                                                        + `${entity.attributes.properties['date'] ? `${entity.attributes.properties['date']}` : ``}`\n                                                        + `${entity.attributes.properties['date'] ? `${entity.attributes.properties['director'] || entity.attributes.properties['theatre'] ? `, ` : ``}` : ``}`\n                                                        + `${entity.attributes.properties['director'] ? `dir. ${entity.attributes.properties['director']}` : ``}`\n                                                        + `${entity.attributes.properties['director'] && entity.attributes.properties['theatre'] ? ', ' : ``}`\n                                                        + `${entity.attributes.properties['theatre'] ? `${entity.attributes.properties['theatre']}` : ``}`\n                                                        + `${entity.attributes.properties['city'] || entity.attributes.properties['date'] || entity.attributes.properties['director'] || entity.attributes.properties['theatre'] ? ']' : ''}`\n                                                }} /> : <span>{entity.id}</span>}\n                                            </Link>\n                                        </td>\n                                        <td>Production</td>\n                                    </tr>\n                                    :\n\n                                    this.state[`are${entity.attributes[\"type-label\"]}sHidden`] ? null : <tr>\n                                        <td>\n                                            {entity.attributes['type-label'] === 'Translating' ? <Link\n                                                to={{\n                                                    pathname: `/translation/${entity.id}`,\n                                                    state: {\n                                                        id: entity.id\n                                                    }\n                                                }}>\n                                                {entity.attributes.label ? <span dangerouslySetInnerHTML={{ __html: entity.attributes.label }} /> : <span>{entity.id}</span>}\n                                            </Link>\n                                                :\n                                                <Link\n                                                    to={{\n                                                        pathname: `/${entity.attributes[\"type-label\"]}/${entity.id}`,\n                                                        state: {\n                                                            id: entity.id\n                                                        }\n                                                    }}>\n                                                    {entity.attributes.label ? <span dangerouslySetInnerHTML={{ __html: entity.attributes.label }} /> : <span>{entity.id}</span>}\n                                                </Link>\n                                            }\n                                        </td>\n                                        <td>{entity.attributes['type-label']}</td>\n                                    </tr>\n                    }\n                    {/* create row for each public letter of search result */}\n                    {entity.attributes['public-letters-hash'].map((letter) => {\n                        if (letter === null) {\n                            return null\n                        }\n                        else {\n                            if (this.state.areLettersHidden === true) {\n                                return null\n                            }\n                            else {\n                                let selectedStartDate = new Date(this.state.startDate + \"Z\")\n                                let selectedEndDate = new Date(this.state.endDate + \"Z\")\n                                let currentDate = new Date(letter.date.substring(letter.date.length - 4) + \"-\" + letter.date.substring(3, letter.date.length - 5) + \"-\" + parseInt(letter.date.substring(0, 2) + \"Z\"))\n                                if (selectedStartDate <= currentDate && currentDate <= selectedEndDate) {\n                                    lettersCount++\n                                    return <tr>\n                                        <td>\n                                            <Link\n                                                to={{\n                                                    pathname: `/letters/letterdetails/${letter.id}`,\n                                                    state: {\n                                                        id: letter.recipients[0].id,\n                                                        name: letter.recipients[0].name\n                                                    }\n                                                }}>\n                                                <span dangerouslySetInnerHTML={{ __html: \"Letter to \" + letter.recipients[0].name + \" on \" + letter.date }} />\n                                            </Link>\n                                        </td>\n                                        <td>\n                                            Letter\n                                        </td>\n                                    </tr>\n                                }\n                                else return null\n                            }\n                        }\n                    }\n                    )\n                    }\n                </React.Fragment>\n            }\n\n            else {\n                return null\n            }\n\n        }\n        );\n\n        const metaBuild = {\n            title: 'Search and Filter',\n            description: `Search and filter entities and letters`,\n        };\n\n        return (\n            <Container >\n                <DocMetaBuilder {...metaBuild} />\n                <div className='pt-3'>\n                    <HeaderBuilder header='Filter Search' type='string' />\n                    <Row className=\"no-gutters pt-3\">\n                        <Col md={12} className=\"no-gutters\">\n                            {/* work on search function */}\n                            <Form className=\"tab-search\" onSubmit={this.intiateSearch} ref=\"form\">\n                                <OverlayTrigger\n                                    placement=\"bottom\"\n                                    delay={{ show: 150, hide: 1000 }}\n                                    overlay={renderSearchTooltip}\n                                >\n                                    <Form.Group>\n                                        <div className=\"input-group mb-3\">\n                                            <div className=\"input-group-prepend\">\n                                                <Button aria-label='submit button' variant=\"primary\" type=\"submit\">\n                                                    <FontAwesomeIcon icon=\"search\" />\n                                                </Button>\n                                            </div>\n                                            <Form.Control id=\"query\" name=\"query\" type=\"query\" aria-label='query' placeholder={this.props.placeholder} />\n                                        </div>\n                                    </Form.Group>\n                                </OverlayTrigger>\n                            </Form>\n                        </Col>\n                        <Col md={1} className=\"no-gutters\">\n                            {this.state.isSearching ?\n                                <Form onSubmit={this.resetPage}><Button variant=\"secondary\" type=\"submit\" className=\"full-width\">Clear</Button></Form>\n                                : null\n                            }\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col md={3} className='filterCol'>\n                            <form className='filterBox filterByType' >\n                                <h2>Refine by Field</h2>\n                                <ul>\n                                    <li>\n                                        <label>\n                                            <input\n                                                type=\"checkbox\"\n                                                className=\"checkbox\"\n                                                onChange={(e) => this.filterRowsByType('areAttendancesHidden', e)}\n                                                checked={!this.state.areAttendancesHidden}\n                                            />\n                                            Attendance {attendancesCount !== 0 ? <span className='entityCountDisplay'>{attendancesCount}</span> : null}\n                                        </label>\n                                    </li>\n                                    <li>\n                                        <label>\n                                            <input\n                                                type=\"checkbox\"\n                                                className=\"checkbox\"\n                                                onChange={(e) => this.filterRowsByType('areLettersHidden', e)}\n                                                checked={!this.state.areLettersHidden}\n                                            />\n                                            Letters {lettersCount !== 0 ? <span className='entityCountDisplay'>{lettersCount}</span> : null}\n                                        </label>\n                                    </li>\n                                    <li>\n                                        <label>\n                                            <input\n                                                type=\"checkbox\"\n                                                className=\"checkbox\"\n                                                onChange={(e) => this.filterRowsByType('areMusicsHidden', e)}\n                                                checked={!this.state.areMusicsHidden}\n\n                                            />\n                                            Music {musicCount !== 0 ? <span className='entityCountDisplay'>{musicCount}</span> : null}\n                                        </label>\n                                    </li>\n                                    <li>\n                                        <label>\n                                            <input\n                                                type=\"checkbox\"\n                                                className=\"checkbox\"\n                                                onChange={(e) => this.filterRowsByType('areOrganizationsHidden', e)}\n                                                checked={!this.state.areOrganizationsHidden}\n\n                                            />\n                                            Organizations {organizationsCount !== 0 ? <span className='entityCountDisplay'>{organizationsCount}</span> : null}\n                                        </label>\n                                    </li>\n                                    <li>\n                                        <label>\n                                            <input\n                                                type=\"checkbox\"\n                                                className=\"checkbox\"\n                                                onChange={(e) => this.filterRowsByType('arePeopleHidden', e)}\n                                                checked={!this.state.arePeopleHidden}\n\n                                            />\n                                            People {peopleCount !== 0 ? <span className='entityCountDisplay'>{peopleCount}</span> : null}\n                                        </label>\n                                    </li>\n                                    <li>\n                                        <label>\n                                            <input\n                                                type=\"checkbox\"\n                                                className=\"checkbox\"\n                                                onChange={(e) => this.filterRowsByType('arePlacesHidden', e)}\n                                                checked={!this.state.arePlacesHidden}\n\n                                            />\n                                            Places {placesCount !== 0 ? <span className='entityCountDisplay'>{placesCount}</span> : null}\n                                        </label>\n                                    </li>\n                                    <li>\n                                        <label>\n                                            <input\n                                                type=\"checkbox\"\n                                                className=\"checkbox\"\n                                                onChange={(e) => this.filterRowsByType('areProductionsHidden', e)}\n                                                checked={!this.state.areProductionsHidden}\n\n                                            />\n                                            Productions {productionsCount !== 0 ? <span className='entityCountDisplay'>{productionsCount}</span> : null}\n                                        </label>\n                                    </li>\n                                    <li>\n                                        <label>\n                                            <input\n                                                type=\"checkbox\"\n                                                className=\"checkbox\"\n                                                onChange={(e) => this.filterRowsByType('areEventsHidden', e)}\n                                                checked={!this.state.areEventsHidden}\n\n                                            />\n                                            Public Events {publicEventsCount !== 0 ? <span className='entityCountDisplay'>{publicEventsCount}</span> : null}\n                                        </label>\n                                    </li>\n                                    <li>\n                                        <label>\n                                            <input\n                                                type=\"checkbox\"\n                                                className=\"checkbox\"\n                                                onChange={(e) => this.filterRowsByType('arePublicationsHidden', e)}\n                                                checked={!this.state.arePublicationsHidden}\n\n                                            />\n                                            Publications {publicationsCount !== 0 ? <span className='entityCountDisplay'>{publicationsCount}</span> : null}\n                                        </label>\n                                    </li>\n                                    <li>\n                                        <label>\n                                            <input\n                                                type=\"checkbox\"\n                                                className=\"checkbox\"\n                                                onChange={(e) => this.filterRowsByType('areReadingsHidden', e)}\n                                                checked={!this.state.areReadingsHidden}\n\n                                            />\n                                            Readings {readingsCount !== 0 ? <span className='entityCountDisplay'>{readingsCount}</span> : null}\n                                        </label>\n                                    </li>\n                                    <li>\n                                        <label>\n                                            <input\n                                                type=\"checkbox\"\n                                                className=\"checkbox\"\n                                                onChange={(e) => this.filterRowsByType('areTranslatingsHidden', e)}\n                                                checked={!this.state.areTranslatingsHidden}\n\n                                            />\n                                            Translations {translationsCount !== 0 ? <span className='entityCountDisplay'>{translationsCount}</span> : null}\n                                        </label>\n                                    </li>\n                                    <li>\n                                        <label>\n                                            <input\n                                                type=\"checkbox\"\n                                                className=\"checkbox\"\n                                                onChange={(e) => this.filterRowsByType('areWorkOfArtsHidden', e)}\n                                                checked={!this.state.areWorkOfArtsHidden}\n\n                                            />\n                                            Works of Art {worksOfArtCount !== 0 ? <span className='entityCountDisplay'>{worksOfArtCount}</span> : null}\n                                        </label>\n                                    </li>\n                                    <li>\n                                        <label>\n                                            <input\n                                                type=\"checkbox\"\n                                                className=\"checkbox\"\n                                                onChange={(e) => this.filterRowsByType('areWritingsHidden', e)}\n                                                checked={!this.state.areWritingsHidden}\n\n                                            />\n                                            Writings {writingsCount !== 0 ? <span className='entityCountDisplay'>{writingsCount}</span> : null}\n                                        </label>\n                                    </li>\n                                    <li>\n                                        <button type=\"button\" className=\"button btn btn-primary\" onClick={(e) => this.flipAllFilters(e)}>{this.state.hideAll ? \"Hide All\" : \"Show All\"}</button>\n                                    </li>\n                                </ul>\n                            </form>\n                            <form className='filterBox'>\n                                <h2>Refine by Date</h2>\n                                <ul>\n                                    <li>\n                                        <h3>Start</h3>\n                                        <DatePicker format='dd/MMM/y' disableCalendar={true} minDate={new Date('January 1957')} maxDate={new Date('December 1969')} value={this.state.date} onChange={(date) => this.setState({ startDate: date })} />\n                                    </li>\n                                    <li>\n                                        <h3>End</h3>\n                                        <DatePicker format='dd/MMM/y' disableCalendar={true} minDate={new Date('January 1957')} maxDate={new Date('December 1969')} value={this.state.date} onChange={(date) => this.setState({ endDate: date })} />\n                                    </li>\n                                </ul>\n                            </form>\n                        </Col>\n                        {!this.state.firstSearched ? null : <Col md={9}>\n                            {!this.state.isLoaded ?\n                                <LoadingSpinner className='centerIcon' />\n                                :\n                                <Table striped bordered className=\"browse-by\" id='browse-by'>\n                                    <thead>\n                                        <tr>\n                                            <th>Result</th>\n                                            <th id='typeColumn'>Type</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {EntityList}\n                                    </tbody>\n                                </Table>\n                            }\n                        </Col>\n                        }\n                    </Row>\n                </div>\n            </Container >\n        )\n    }\n}\n\nexport default FilterSearch;","import React, { Component } from 'react';\nimport './App.scss';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Container } from 'react-bootstrap';\nimport { faSpinner, faSearch } from '@fortawesome/free-solid-svg-icons';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport BrowseLetters from './components/BrowseLetters';\nimport EntityDetails from './components/EntityDetails';\nimport Landing from './components/Landing';\nimport LetterDetails from './components/LetterDetails';\nimport LettersBy from './components/LettersBy';\nimport PersonDetails from './components/PersonDetails';\nimport RepositoryDetails from './components/RepositoryDetails';\nimport Sidebar from './components/utilities/Sidebar';\nimport Timeline from './components/Timeline';\nimport FilterSearch from './components/FilterSearch';\n\nlibrary.add(faSpinner, faSearch)\n\nclass App extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      entityTypes: []\n    };\n  }\n\n  render() {\n\n    // const routes = {\n    //   '/': 'Home',\n    //   '/letters': 'Letters',\n    //   '/letters/letterdetails/:id': 'Letter Details',\n    //   '/timeline': 'Timeline',\n    //   '/people/:personId/:name': ':name',\n    //   '/places': 'Places',\n    //   '/places/:placeId': ':d',\n    //   '/search': 'Search Results',\n    //   '/search-letters': 'Search Letters',\n    //   '/browse-letters': 'Browse Letters',\n    //   '/repositories/:id': ':id',\n    //   '/productions/:id': ':id',\n    //   '/music/:id': ':id',\n    //   '/organizations/:id': ':id',\n    //   '/attendance/:id': ':id'\n    // };\n\n    return (\n      <Router buildname=\"build\">\n        <Container fluid className=\"p-0\">\n          <Sidebar />\n          <Switch>\n            <Route exact path=\"/browse-letters\" component={BrowseLetters} />\n            <Route exact path='/browse-letters-attendance' render={(props) => <LettersBy apiUrl={this.props.apiUrl} {...props}\n              entityType={'attendance'}\n              placeholder={\"ex. 'Come Back Africa'\"}\n              tableHeader={'Attendance Name'}\n              metaTitle={'Browse by Attendance'}\n            />}\n            />\n            <Route exact path='/browse-letters-music' render={(props) => <LettersBy apiUrl={this.props.apiUrl} {...props}\n              entityType={'music'}\n              placeholder={\"ex. 'Violin Sonatas'\"}\n              tableHeader={'Music Title'}\n              metaTitle={'Browse by Music'}\n            />}\n            />\n            <Route exact path='/browse-letters-organization' render={(props) => <LettersBy apiUrl={this.props.apiUrl} {...props}\n              entityType='organization'\n              placeholder={\"ex. 'University of Toronto'\"}\n              tableHeader={'Organization Name'}\n              metaTitle={'Browse by Organizations'}\n            />}\n            />\n            <Route exact path='/browse-letters-person' render={(props) => <LettersBy apiUrl={this.props.apiUrl} {...props} \n              entityType={'person'}\n              placeholder={\"ex. 'Kay Boyle'\"}\n              tableHeader={'Person Name'}\n              metaTitle={'Browse by Person'}\n            />}\n            />\n            <Route exact path='/browse-letters-place' render={(props) => <LettersBy apiUrl={this.props.apiUrl} {...props}\n              entityType={'place'}\n              placeholder={\"ex. 'Paris'\"}\n              tableHeader={'Place Name'}\n              metaTitle={'Browse by Places'}\n            />}\n            />\n            <Route exact path='/browse-letters-production' render={(props) => <LettersBy apiUrl={this.props.apiUrl} {...props}\n              entityType='production'\n              placeholder={\"ex. 'Krapp's Last Tape'\"}\n              tableHeader={'Production Name'}\n              metaTitle={'Browse by Productions'}\n            />}\n            />\n            <Route exact path='/browse-letters-public-event' render={(props) => <LettersBy apiUrl={this.props.apiUrl} {...props}\n              entityType='public-event'\n              placeholder={\"ex. 'Bastille Day'\"}\n              tableHeader={'Public Event'}\n              metaTitle={'Browse by Public Events'}\n            />}\n            />\n            <Route exact path='/browse-letters-publication' render={(props) => <LettersBy apiUrl={this.props.apiUrl} {...props}\n              entityType='publication'\n              placeholder={\"ex. 'Godot'\"}\n              tableHeader={'Publication Name'}\n              metaTitle={'Browse By Publication'}\n            />}\n            />\n            <Route exact path='/browse-letters-reading' render={(props) => <LettersBy apiUrl={this.props.apiUrl} {...props}\n              entityType='reading'\n              placeholder={\"ex. 'The Warden'\"}\n              tableHeader={'Reading Name'}\n              metaTitle={'Browse by Reading'}\n            />}\n            />\n            <Route exact path=\"/browse-letters-repositories\" render={(props) => <LettersBy apiUrl={this.props.apiUrl} {...props}\n              entityType='repositories'\n              placeholder={\"ex. 'Trinity College'\"}\n              tableHeader={'Repository'}\n              metaTitle={'Browse by Repositories'}\n            />}\n            />\n            <Route exact path='/browse-letters-Translating' render={(props) => <LettersBy apiUrl={this.props.apiUrl} {...props}\n              entityType='Translating'\n              placeholder={\"ex. 'Krapp'\"}\n              tableHeader={'Translating Title'}\n              metaTitle={'Browse by Translating'}\n            />}\n            />\n            <Route exact path='/browse-letters-work-of-art' render={(props) => <LettersBy apiUrl={this.props.apiUrl} {...props}\n              entityType='work-of-art'\n              placeholder={\"ex. 'Divine Comedy'\"}\n              tableHeader={'Work of Art Title'}\n              metaTitle={'Browse by Work of Art'}\n            />}\n            />\n            <Route exact path='/browse-letters-writing' render={(props) => <LettersBy apiUrl={this.props.apiUrl} {...props}\n              entityType='writing'\n              placeholder={\"ex. 'Molloy'\"}\n              tableHeader={'Writing Title'}\n              metaTitle={'Browse by Writing'}\n            />}\n            />\n            {/* Entity Details: */}\n            <Route exact path='/attendance/:id' render={(props) => <EntityDetails apiUrl={this.props.apiUrl} {...props} />} />\n            <Route exact path='/music/:id' render={(props) => <EntityDetails apiUrl={this.props.apiUrl} {...props} />} />\n            <Route exact path='/organization/:id' render={(props) => <EntityDetails apiUrl={this.props.apiUrl} {...props} />} />\n            <Route exact path=\"/people/:id\" render={(props) => <PersonDetails apiUrl={this.props.apiUrl} {...props} />} />\n            <Route exact path='/place/:id' render={(props) => <EntityDetails apiUrl={this.props.apiUrl} {...props} />} />\n            <Route exact path='/production/:id' render={(props) => <EntityDetails apiUrl={this.props.apiUrl} {...props} />} />\n            <Route exact path='/public-event/:id' render={(props) => <EntityDetails apiUrl={this.props.apiUrl} {...props} />} />\n            <Route exact path='/publication/:id' render={(props) => <EntityDetails apiUrl={this.props.apiUrl} {...props} />} />\n            <Route exact path='/reading/:id' render={(props) => <EntityDetails apiUrl={this.props.apiUrl} {...props} />} />\n            <Route exact path='/repositories/:id' render={(props) => <RepositoryDetails apiUrl={this.props.apiUrl} {...props} />} />\n            <Route exact path='/translating/:id' render={(props) => <EntityDetails apiUrl={this.props.apiUrl} {...props} />} />\n            <Route exact path='/work-of-art/:id' render={(props) => <EntityDetails apiUrl={this.props.apiUrl} {...props} />} />\n            <Route exact path='/writing/:id' render={(props) => <EntityDetails apiUrl={this.props.apiUrl} {...props} />} />\n            {/* etc: */}\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/letters/letterdetails/:id\" render={(props) => <LetterDetails apiUrl={this.props.apiUrl} {...props} />} />\n            <Route exact path='/timeline' component={Timeline} />\n            <Route exact path='/filter-search' component={FilterSearch} />\n          </Switch>\n        </Container>\n      </Router>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport 'react-bootstrap-table2-filter/dist/react-bootstrap-table2-filter.min.css';\n\n\nReactDOM.render(<App apiUrl='http://ot-api.ecdsdev.org' />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}