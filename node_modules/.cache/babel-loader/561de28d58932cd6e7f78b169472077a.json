{"ast":null,"code":"var _jsxFileName = \"/Users/sbarre5/Development/beckett-letters/src/components/timeline.js\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nimport { Col, Row } from 'react-bootstrap';\nimport TimelineYear from './TimelineYear';\nexport class Timeline extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      timelineEntries: []\n    };\n  }\n\n  componentDidMount() {\n    axios.all([axios.get('beckett-timeline-year.json')]).then(axios.spread(getLetterData => {\n      console.log(getLetterData);\n      const timelineEntries = getLetterData.data.events;\n      console.log(timelineEntries);\n      this.setState({\n        timelineEntries\n      });\n      this.setState({\n        isLoaded: true\n      });\n    })).catch(err => {\n      this.setState({\n        isLoaded: false\n      });\n      this.setState({\n        error: err.message\n      });\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded; // if there is an error\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Error: \", error.message); // if not loaded show loading\n    } else if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Loading...\"); // return now that component has value\n    } else {\n      let allTimelineEntries = this.state.timelineEntries;\n      console.log(allTimelineEntries);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, Object.keys(allTimelineEntries).map(keyOuter => {\n        console.log(allTimelineEntries[keyOuter]);\n        return Object.keys(allTimelineEntries[keyOuter]).map(keyInner => {\n          console.log(\"im here\");\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52\n            },\n            __self: this\n          }, React.createElement(TimelineYear, {\n            events: allTimelineEntries[keyOuter],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52\n            },\n            __self: this\n          }), React.createElement(\"li\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53\n            },\n            __self: this\n          }, allTimelineEntries[keyOuter][\"date\"]));\n        });\n      })); // console.log(allTimelineEntries)\n      // allTimelineEntries.map(function(event) {\n      //     return <TimelineEvent/>\n      // })\n      // allTimelineEntries.map(function(year) {\n      //     var timelineEvent = year.map(function(event) {\n      //         return (\n      //             <div>Event</div>\n      //         )\n      //     });\n      //     return (\n      //         {timelineEvent}\n      //     )\n      // })\n      // const entries = this.state.timelineEntries;\n      // let entryArr = [];\n      // Object.keys(entries).forEach(function (key) {\n      //     entryArr.push(entries[key])\n      // });\n      // console.log(entryArr)\n      // const timeline = Object.keys(entry).forEach(function (key) {\n      //     entries.push(entry[key])\n      //     entry[key].map(function(timelineData) {\n      //         console.log('w')\n      //         return <Row>{timelineData}</Row>\n      //     });\n      // old .map()\n      // const timeline = entry[key].map(function (timelineData) {\n      //     return <Row>{timelineData}</Row>\n      // const timelineBlock = entry[key].map(function(timelineData) {\n      //     return <Row>{timelineData}</Row>\n      // });\n      // console.log(entry[key])\n      // return \"<div>he</div>\"\n      // timelineBlock()\n      // })\n      // return (\n      //     <div>\n      //\n      //         <Row>\n      //             <h1>Timeline</h1>\n      //         </Row>\n      //         <Row>\n      //             <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Accusantium mollitia, laborum blanditiis, natus rerum distinctio architecto rem atque, aut necessitatibus illum eum veritatis. Mollitia qui similique sit corrupti, atque amet?</p>\n      //         </Row>\n      //         <Row className='timelineTitleRow'>\n      //             <Col md={6} >\n      //                 <Row></Row>\n      //                 <h5>Personal events are in <span className=\"timelineHeaderBlue\">blue</span></h5>\n      //             </Col>\n      //             <Col md={6} >\n      //                 <h5>Global events are in <span className=\"timelineHeaderYellow\">gold</span></h5>\n      //             </Col>\n      //         </Row>\n      //\n      //         <div>hey</div>\n      //     </div>\n      // )\n    }\n  }\n\n}\nexport default Timeline;","map":{"version":3,"sources":["/Users/sbarre5/Development/beckett-letters/src/components/timeline.js"],"names":["React","Component","axios","Col","Row","TimelineYear","Timeline","constructor","props","context","state","error","isLoaded","timelineEntries","componentDidMount","all","get","then","spread","getLetterData","console","log","data","events","setState","catch","err","message","render","allTimelineEntries","Object","keys","map","keyOuter","keyInner"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,iBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,OAAO,MAAMC,QAAN,SAAuBL,SAAvB,CAAiC;AACpCM,EAAAA,WAAW,CAACC,KAAD,EAAQC,OAAR,EAAiB;AACxB,UAAMD,KAAN,EAAaC,OAAb;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,IADE;AAETC,MAAAA,QAAQ,EAAE,KAFD;AAGTC,MAAAA,eAAe,EAAE;AAHR,KAAb;AAKH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBZ,IAAAA,KAAK,CAACa,GAAN,CAAU,CACNb,KAAK,CAACc,GAAN,CAAU,4BAAV,CADM,CAAV,EAEKC,IAFL,CAEUf,KAAK,CAACgB,MAAN,CAAcC,aAAD,IAAmB;AAClCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,aAAZ;AACA,YAAMN,eAAe,GAAGM,aAAa,CAACG,IAAd,CAAmBC,MAA3C;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYR,eAAZ;AACA,WAAKW,QAAL,CAAc;AAAEX,QAAAA;AAAF,OAAd;AACA,WAAKW,QAAL,CAAc;AAAEZ,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACH,KANK,CAFV,EASKa,KATL,CASYC,GAAD,IAAS;AACZ,WAAKF,QAAL,CAAc;AAAEZ,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACA,WAAKY,QAAL,CAAc;AAAEb,QAAAA,KAAK,EAAEe,GAAG,CAACC;AAAb,OAAd;AACH,KAZL;AAaH;;AAEDC,EAAAA,MAAM,GAAG;AAAA,wBAEuB,KAAKlB,KAF5B;AAAA,UAEGC,KAFH,eAEGA,KAFH;AAAA,UAEUC,QAFV,eAEUA,QAFV,EAGL;;AACA,QAAID,KAAJ,EAAW;AACP,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAaA,KAAK,CAACgB,OAAnB,CAAP,CADO,CAEP;AACH,KAHD,MAGO,IAAI,CAACf,QAAL,EAAe;AAClB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP,CADkB,CAElB;AACH,KAHM,MAGA;AACH,UAAIiB,kBAAkB,GAAG,KAAKnB,KAAL,CAAWG,eAApC;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAYQ,kBAAZ;AACF,aACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACIC,MAAM,CAACC,IAAP,CAAYF,kBAAZ,EAAgCG,GAAhC,CAAoCC,QAAQ,IAAI;AAChDb,QAAAA,OAAO,CAACC,GAAR,CAAYQ,kBAAkB,CAACI,QAAD,CAA9B;AACA,eAAOH,MAAM,CAACC,IAAP,CAAYF,kBAAkB,CAACI,QAAD,CAA9B,EAA0CD,GAA1C,CAA8CE,QAAQ,IAAI;AAC/Dd,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,iBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAK,oBAAC,YAAD;AAAc,YAAA,MAAM,EAAEQ,kBAAkB,CAACI,QAAD,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAL,EACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAKJ,kBAAkB,CAACI,QAAD,CAAlB,CAA6B,MAA7B,CAAL,CADA,CADF;AAKD,SAPM,CAAP;AAQD,OAVC,CADJ,CADA,CAHK,CAkBH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACJ;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;AACJ;;AApHmC;AAuHxC,eAAe3B,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from \"axios\";\nimport { Col, Row } from 'react-bootstrap';\nimport TimelineYear from './TimelineYear';\n\nexport class Timeline extends Component {\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            timelineEntries: []\n        };\n    }\n\n    componentDidMount() {\n        axios.all([\n            axios.get('beckett-timeline-year.json')])\n            .then(axios.spread((getLetterData) => {\n                console.log(getLetterData);\n                const timelineEntries = getLetterData.data.events;\n                console.log(timelineEntries);\n                this.setState({ timelineEntries });\n                this.setState({ isLoaded: true })\n            }))\n            .catch((err) => {\n                this.setState({ isLoaded: false });\n                this.setState({ error: err.message });\n            });\n    }\n\n    render() {\n\n        const { error, isLoaded } = this.state;\n        // if there is an error\n        if (error) {\n            return <div>Error: {error.message}</div>;\n            // if not loaded show loading\n        } else if (!isLoaded) {\n            return <div>Loading...</div>;\n            // return now that component has value\n        } else {\n            let allTimelineEntries = this.state.timelineEntries\n            console.log(allTimelineEntries)\n          return (\n          <div>\n            { Object.keys(allTimelineEntries).map(keyOuter => {\n              console.log(allTimelineEntries[keyOuter])\n              return Object.keys(allTimelineEntries[keyOuter]).map(keyInner => {\n                console.log(\"im here\")\n                return (\n                  <div><TimelineYear events={allTimelineEntries[keyOuter]}/>\n                  <li>{allTimelineEntries[keyOuter][\"date\"]}</li>\n                  </div>\n                );\n              });\n            })}\n          </div>\n          )\n            // console.log(allTimelineEntries)\n            // allTimelineEntries.map(function(event) {\n            //     return <TimelineEvent/>\n            // })\n            // allTimelineEntries.map(function(year) {\n            //     var timelineEvent = year.map(function(event) {\n            //         return (\n            //             <div>Event</div>\n            //         )\n            //     });\n            //     return (\n            //         {timelineEvent}\n            //     )\n            // })\n            // const entries = this.state.timelineEntries;\n            // let entryArr = [];\n            // Object.keys(entries).forEach(function (key) {\n            //     entryArr.push(entries[key])\n            // });\n            // console.log(entryArr)\n\n\n            // const timeline = Object.keys(entry).forEach(function (key) {\n            //     entries.push(entry[key])\n            //     entry[key].map(function(timelineData) {\n            //         console.log('w')\n            //         return <Row>{timelineData}</Row>\n            //     });\n                // old .map()\n                // const timeline = entry[key].map(function (timelineData) {\n                //     return <Row>{timelineData}</Row>\n                // const timelineBlock = entry[key].map(function(timelineData) {\n                //     return <Row>{timelineData}</Row>\n                // });\n                // console.log(entry[key])\n                // return \"<div>he</div>\"\n                // timelineBlock()\n            // })\n\n            // return (\n            //     <div>\n            //\n            //         <Row>\n            //             <h1>Timeline</h1>\n            //         </Row>\n            //         <Row>\n            //             <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Accusantium mollitia, laborum blanditiis, natus rerum distinctio architecto rem atque, aut necessitatibus illum eum veritatis. Mollitia qui similique sit corrupti, atque amet?</p>\n            //         </Row>\n            //         <Row className='timelineTitleRow'>\n            //             <Col md={6} >\n            //                 <Row></Row>\n            //                 <h5>Personal events are in <span className=\"timelineHeaderBlue\">blue</span></h5>\n            //             </Col>\n            //             <Col md={6} >\n            //                 <h5>Global events are in <span className=\"timelineHeaderYellow\">gold</span></h5>\n            //             </Col>\n            //         </Row>\n            //\n            //         <div>hey</div>\n            //     </div>\n            // )\n        }\n    }\n}\n\nexport default Timeline;\n"]},"metadata":{},"sourceType":"module"}