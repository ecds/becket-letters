{"ast":null,"code":"var _jsxFileName = \"/Users/mtherri/Documents/Code/beckett-letters/src/components/letters.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport filterFactory, { textFilter, numberFilter } from 'react-bootstrap-table2-filter';\nimport Header from './header';\nconst columns = [{\n  dataField: 'Addressed from (Actual)',\n  text: 'Addressed from (Actual)',\n  sort: true,\n  filter: textFilter({\n    delay: 333\n  })\n}, {\n  dataField: 'Addressed to (Actual)',\n  text: 'Addressed to (Actual)',\n  sort: true,\n  filter: textFilter({\n    delay: 333\n  })\n}, {\n  dataField: 'Day',\n  text: 'Day',\n  sort: true,\n  filter: numberFilter({\n    delay: 333\n  })\n}, {\n  dataField: 'Month',\n  text: 'Month',\n  sort: true,\n  filter: numberFilter({\n    delay: 333\n  })\n}, {\n  dataField: 'Year',\n  text: 'Year',\n  sort: true,\n  filter: numberFilter({\n    delay: 333\n  })\n}, {\n  dataField: 'Reg place sent',\n  text: 'Reg place sent',\n  sort: true,\n  filter: textFilter({\n    delay: 333\n  })\n}, {\n  dataField: 'First Repository',\n  text: 'First Repository',\n  sort: true,\n  filter: textFilter({\n    delay: 333\n  })\n}, {\n  dataField: 'PrimaryLang',\n  text: 'PrimaryLang',\n  sort: true,\n  filter: textFilter({\n    delay: 333\n  })\n}];\nexport class Letters extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      letters: []\n    };\n  }\n\n  componentDidMount() {\n    axios.all([axios.get('letters_json.json')]).then(axios.spread(getLetters => {\n      const letters = getLetters.data;\n      this.setState({\n        letters\n      });\n      console.log(letters);\n    })).catch(err => {\n      this.setState({\n        isLoaded: false\n      });\n      this.setState({\n        error: err.message\n      });\n    });\n  }\n\n  render() {\n    // const allLetters = this.state.letters.map((letter) => <li>{letter.ID}, {letter.Additional} </li>)\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Letters\"), React.createElement(BootstrapTable, {\n      keyField: \"id\",\n      data: this.state.letters,\n      columns: columns,\n      filter: filterFactory(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })));\n  }\n\n}\nexport default Letters;","map":{"version":3,"sources":["/Users/mtherri/Documents/Code/beckett-letters/src/components/letters.js"],"names":["React","Component","axios","BootstrapTable","filterFactory","textFilter","numberFilter","Header","columns","dataField","text","sort","filter","delay","Letters","constructor","props","context","state","error","isLoaded","letters","componentDidMount","all","get","then","spread","getLetters","data","setState","console","log","catch","err","message","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport filterFactory, { textFilter, numberFilter } from 'react-bootstrap-table2-filter';\nimport Header from './header';\n\nconst columns = [{\n  dataField: 'Addressed from (Actual)',\n  text: 'Addressed from (Actual)',\n  sort: true,\n  filter: textFilter({ delay: 333 })\n}, {\n  dataField: 'Addressed to (Actual)',\n  text: 'Addressed to (Actual)',\n  sort: true,\n  filter: textFilter({ delay: 333 })\n}, {\n  dataField: 'Day',\n  text: 'Day',\n  sort: true,\n  filter: numberFilter({ delay: 333 })\n}, {\n  dataField: 'Month',\n  text: 'Month',\n  sort: true,\n  filter: numberFilter({ delay: 333 })\n}, {\n  dataField: 'Year',\n  text: 'Year',\n  sort: true,\n  filter: numberFilter({ delay: 333 })\n}, {\n  dataField: 'Reg place sent',\n  text: 'Reg place sent',\n  sort: true,\n  filter: textFilter({ delay: 333 })\n}, {\n  dataField: 'First Repository',\n  text: 'First Repository',\n  sort: true,\n  filter: textFilter({ delay: 333 })\n}, {\n  dataField: 'PrimaryLang',\n  text: 'PrimaryLang',\n  sort: true,\n  filter: textFilter({ delay: 333 })\n}];\n\nexport class Letters extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      letters: []\n    };\n  }\n\n  componentDidMount() {\n    axios.all([\n      axios.get('letters_json.json')])\n      .then(axios.spread((getLetters) => {\n        const letters = getLetters.data;\n        this.setState({ letters });\n        console.log(letters)\n      }))\n      .catch((err) => {\n        this.setState({ isLoaded: false });\n        this.setState({ error: err.message });\n      });\n  }\n\n  render() {\n    // const allLetters = this.state.letters.map((letter) => <li>{letter.ID}, {letter.Additional} </li>)\n    return (\n      <div>\n        <Header />\n        <Container>\n          <h1>Letters</h1>\n          <BootstrapTable keyField='id' data={this.state.letters} columns={columns} filter={filterFactory()} />\n          {/* {allLetters} */}\n        </Container>\n\n      </div>\n    )\n  }\n}\n\nexport default Letters;"]},"metadata":{},"sourceType":"module"}