{"ast":null,"code":"var _jsxFileName = \"/Users/mtherri/Documents/Code/beckett-letters/src/components/LettersBy.js\";\nimport BrowseLetters from './BrowseLetters';\nimport DocMetaBuilder from './utilities/DocMetaBuilder';\nimport LoadingSpinner from './utilities/LoadingSpinner';\nimport Pagination from './utilities/Pagination';\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Container, Table, Form, Button, Col, Row } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Link } from 'react-router-dom';\n\nclass LettersBy extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.handler = pageValue => {\n      const page = pageValue;\n      this.setState({\n        page\n      }, () => {\n        this.getData();\n      });\n    };\n\n    this.entityChange = entityType => {\n      this.setState({\n        entityType,\n        page: 1\n      }, () => {\n        this.getData();\n      });\n    };\n\n    this.searchData = searchTerms => {\n      if (this.props.entityType === 'repositories') {\n        // Declare variables\n        var input, filter, table, tr, td, i, txtValue;\n        input = document.getElementById(\"query\");\n        filter = input.value.toUpperCase();\n        table = document.getElementById(\"browse-by\");\n        tr = table.getElementsByTagName(\"tr\"); // Loop through all table rows, and hide those who don't match the search query\n\n        for (i = 0; i < tr.length; i++) {\n          td = tr[i].getElementsByTagName(\"td\")[0];\n\n          if (td) {\n            txtValue = td.textContent || td.innerText;\n\n            if (txtValue.toUpperCase().indexOf(filter) > -1) {\n              table.classList.remove('table-striped');\n              tr[i].style.display = \"\";\n            } else {\n              tr[i].style.display = \"none\";\n            }\n          }\n        }\n      } else {\n        this.setState({\n          isSearching: true\n        });\n        axios.all([axios.get(this.props.apiUrl + '/search-entities?query=' + searchTerms + '&type=' + this.props.entityType)]).then(axios.spread(getAllData => {\n          const data = getAllData.data.data;\n          const pagination = getAllData.data.meta.pagination;\n          this.setState({\n            pagination,\n            data,\n            isLoaded: true\n          });\n        })).catch(err => {\n          this.setState({\n            isLoaded: false,\n            error: err.message\n          });\n        });\n      }\n    };\n\n    this.getData = () => {\n      this.setState({\n        isLoaded: false\n      });\n      console.log(this.props.entityType);\n\n      if (this.props.entityType === 'repositories') {\n        axios.all([axios.get(this.props.apiUrl + '/repositories')]).then(axios.spread(getAllData => {\n          const data = getAllData.data.data;\n          console.log(data);\n          this.setState({\n            data,\n            isLoaded: true\n          });\n        })).catch(err => {\n          this.setState({\n            isLoaded: false,\n            error: err.message\n          });\n        });\n      } else {\n        axios.all([axios.get(this.props.apiUrl + '/entities?entity_type=' + this.props.entityType + '&items=50&page=' + this.state.page)]).then(axios.spread(getAllData => {\n          const data = getAllData.data.data;\n          const pagination = getAllData.data.meta.pagination;\n          this.setState({\n            pagination,\n            data,\n            isLoaded: true\n          });\n          console.log(data);\n        })).catch(err => {\n          this.setState({\n            isLoaded: false,\n            error: err.message\n          });\n        });\n      }\n    };\n\n    this.state = {\n      error: null,\n      isLoaded: false,\n      data: [],\n      page: '1',\n      pagination: [],\n      isSearching: false,\n      entityType: ''\n    };\n    this.getData = this.getData.bind(this);\n    this.intiateSearch = this.intiateSearch.bind(this);\n    this.searchData = this.searchData.bind(this);\n    this.resetPage = this.resetPage.bind(this);\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  intiateSearch(event) {\n    event.preventDefault();\n    const searchTerms = event.target.elements.query.value;\n    this.searchData(searchTerms);\n  }\n\n  resetPage(event) {\n    event.preventDefault();\n    this.refs.form[\"query\"].value = '';\n    this.setState({\n      isSearching: false,\n      isLoaded: false\n    });\n    this.getData();\n  }\n\n  render() {\n    var EntityList = this.state.data.map(entity => {\n      if (entity.attributes.label !== null) {\n        let entityLabel;\n\n        if (entity.attributes['type-label'] === 'Music') {\n          if (entity.attributes.properties && entity.attributes.properties.composer) {\n            entityLabel = /*#__PURE__*/React.createElement(\"span\", {\n              dangerouslySetInnerHTML: {\n                __html: entity.attributes.label + \" composed by \" + entity.attributes.properties.composer\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 39\n              }\n            });\n          } else {\n            entityLabel = /*#__PURE__*/React.createElement(\"span\", {\n              dangerouslySetInnerHTML: {\n                __html: entity.attributes.label\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 39\n              }\n            });\n          }\n        } else if (entity.attributes['type-label'] === 'Publication') {\n          if (entity.attributes.properties && entity.attributes.properties.author) {\n            entityLabel = /*#__PURE__*/React.createElement(\"span\", {\n              dangerouslySetInnerHTML: {\n                __html: entity.attributes.label + \" by \" + entity.attributes.properties.author\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 39\n              }\n            });\n          } else {\n            entityLabel = /*#__PURE__*/React.createElement(\"span\", {\n              dangerouslySetInnerHTML: {\n                __html: entity.attributes.label\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 39\n              }\n            });\n          }\n        } else if (entity.attributes['type-label'] === 'Production') {\n          if (entity.attributes.properties && entity.attributes.properties.director) {\n            entityLabel = /*#__PURE__*/React.createElement(\"span\", {\n              dangerouslySetInnerHTML: {\n                __html: entity.attributes.label + \" directed by \" + entity.attributes.properties.director\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 39\n              }\n            });\n          } else {\n            entityLabel = /*#__PURE__*/React.createElement(\"span\", {\n              dangerouslySetInnerHTML: {\n                __html: entity.attributes.label\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 39\n              }\n            });\n          }\n        } else if (entity.attributes['type-label'] === 'Reading') {\n          let currentLabel;\n\n          if (entity.attributes.label.slice(-1) === '.') {\n            currentLabel = entity.attributes.label.substring(0, entity.attributes.label.length - 1);\n          } // else if (entity.attributes.label.slice(-1) === '.</i>'){\n          // currentLabel = entity.attributes.label.substring(0, entity.attributes.label.length - 10) + \"</i>\"\n          // }\n          else {\n              currentLabel = entity.attributes.label;\n            }\n\n          if (entity.attributes.properties && entity.attributes.properties.authors) {\n            entityLabel = /*#__PURE__*/React.createElement(\"span\", {\n              dangerouslySetInnerHTML: {\n                __html: currentLabel + \" by \" + entity.attributes.properties.authors[0]\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 39\n              }\n            });\n          } else {\n            entityLabel = /*#__PURE__*/React.createElement(\"span\", {\n              dangerouslySetInnerHTML: {\n                __html: currentLabel\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 39\n              }\n            });\n          }\n        } else if (entity.attributes['type-label'] === 'Translating') {\n          if (entity.attributes.properties && entity.attributes.properties.author) {\n            entityLabel = /*#__PURE__*/React.createElement(\"span\", {\n              dangerouslySetInnerHTML: {\n                __html: entity.attributes.label + \" by \" + entity.attributes.properties.author\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 39\n              }\n            });\n          } else {\n            entityLabel = /*#__PURE__*/React.createElement(\"span\", {\n              dangerouslySetInnerHTML: {\n                __html: entity.attributes.label\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 39\n              }\n            });\n          }\n        } else {\n          entityLabel = /*#__PURE__*/React.createElement(\"span\", {\n            dangerouslySetInnerHTML: {\n              __html: entity.attributes.label\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 35\n            }\n          });\n        }\n\n        return entity.attributes.label === ' ' || entity.attributes.label === null ? null : /*#__PURE__*/React.createElement(\"tr\", {\n          key: entity.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 101\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 21\n          }\n        }, this.props.entityType === 'person' ? /*#__PURE__*/React.createElement(Link, {\n          to: {\n            pathname: `/people/${entity.id}`,\n            state: {\n              id: entity.id,\n              name: entity.attributes.label\n            }\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          dangerouslySetInnerHTML: {\n            __html: entity.attributes.label\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 33\n          }\n        }), entity.attributes.properties && entity.attributes.properties['life-dates'] ? ' (' + entity.attributes.properties['life-dates'] + ')' : null) : /*#__PURE__*/React.createElement(Link, {\n          to: {\n            pathname: `/${this.props.entityType}s/${entity.id}`,\n            state: {\n              id: entity.id\n            }\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 29\n          }\n        }, entityLabel)));\n      } else {\n        return null;\n      }\n    });\n    const metaBuild = {\n      title: this.props.metaTitle,\n      description: `Browse all letters on this page`\n    };\n    return /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(DocMetaBuilder, Object.assign({}, metaBuild, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(BrowseLetters, {\n      active: 'by-' + this.props.entityType,\n      action: this.entityChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      className: \"no-gutters pt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      className: \"no-gutters\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      className: \"tab-search\",\n      onSubmit: this.intiateSearch,\n      ref: \"form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group-prepend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      \"aria-label\": \"submit button\",\n      variant: \"primary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: \"search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 45\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Control, {\n      id: \"query\",\n      name: \"query\",\n      type: \"query\",\n      \"aria-label\": \"query\",\n      placeholder: this.props.placeholder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 37\n      }\n    }))))), this.state.isSearching ? /*#__PURE__*/React.createElement(Col, {\n      md: 1,\n      className: \"no-gutters\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 47\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.resetPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"secondary\",\n      type: \"submit\",\n      className: \"full-width\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 57\n      }\n    }, \"Clear\"))) : null), this.state.isLoaded && this.props.entityType !== 'repositories' ? /*#__PURE__*/React.createElement(Pagination, {\n      action: this.handler,\n      pagination: this.state.pagination,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 84\n      }\n    }) : null, /*#__PURE__*/React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      className: \"browse-by\",\n      id: \"browse-by\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 29\n      }\n    }, this.props.tableHeader))), !this.state.isLoaded ? /*#__PURE__*/React.createElement(LoadingSpinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 45\n      }\n    }) : /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 66\n      }\n    }, EntityList)));\n  }\n\n}\n\nexport default LettersBy;","map":{"version":3,"sources":["/Users/mtherri/Documents/Code/beckett-letters/src/components/LettersBy.js"],"names":["BrowseLetters","DocMetaBuilder","LoadingSpinner","Pagination","React","Component","axios","Container","Table","Form","Button","Col","Row","FontAwesomeIcon","Link","LettersBy","constructor","props","context","handler","pageValue","page","setState","getData","entityChange","entityType","searchData","searchTerms","input","filter","table","tr","td","i","txtValue","document","getElementById","value","toUpperCase","getElementsByTagName","length","textContent","innerText","indexOf","classList","remove","style","display","isSearching","all","get","apiUrl","then","spread","getAllData","data","pagination","meta","isLoaded","catch","err","error","message","console","log","state","bind","intiateSearch","resetPage","componentDidMount","event","preventDefault","target","elements","query","refs","form","render","EntityList","map","entity","attributes","label","entityLabel","properties","composer","__html","author","director","currentLabel","slice","substring","authors","id","pathname","name","metaBuild","title","metaTitle","description","placeholder","tableHeader"],"mappings":"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","sourcesContent":["import BrowseLetters from './BrowseLetters';\nimport DocMetaBuilder from './utilities/DocMetaBuilder';\nimport LoadingSpinner from './utilities/LoadingSpinner';\nimport Pagination from './utilities/Pagination';\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Container, Table, Form, Button, Col, Row } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Link } from 'react-router-dom';\n\nclass LettersBy extends Component {\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            data: [],\n            page: '1',\n            pagination: [],\n            isSearching: false,\n            entityType: ''\n        };\n        this.getData = this.getData.bind(this);\n        this.intiateSearch = this.intiateSearch.bind(this);\n        this.searchData = this.searchData.bind(this);\n        this.resetPage = this.resetPage.bind(this);\n    }\n\n    componentDidMount() {\n        this.getData();\n    }\n\n    handler = (pageValue) => {\n        const page = pageValue\n        this.setState({ page }, () => {\n            this.getData();\n        });\n    }\n\n    entityChange = (entityType) => {\n        this.setState({ entityType, page: 1 }, () => {\n            this.getData();\n        });\n    }\n\n    intiateSearch(event) {\n        event.preventDefault()\n        const searchTerms = event.target.elements.query.value;\n        this.searchData(searchTerms)\n    }\n\n    resetPage(event) {\n        event.preventDefault()\n        this.refs.form[\"query\"].value = ''\n        this.setState({ isSearching: false, isLoaded: false })\n        this.getData();\n    }\n\n    searchData = (searchTerms) => {\n        if (this.props.entityType === 'repositories') {\n            // Declare variables\n            var input, filter, table, tr, td, i, txtValue;\n            input = document.getElementById(\"query\");\n            filter = input.value.toUpperCase();\n            table = document.getElementById(\"browse-by\");\n            tr = table.getElementsByTagName(\"tr\");\n            // Loop through all table rows, and hide those who don't match the search query\n            for (i = 0; i < tr.length; i++) {\n                td = tr[i].getElementsByTagName(\"td\")[0];\n                if (td) {\n                    txtValue = td.textContent || td.innerText;\n                    if (txtValue.toUpperCase().indexOf(filter) > -1) {\n                        table.classList.remove('table-striped')\n                        tr[i].style.display = \"\";\n                    } else {\n                        tr[i].style.display = \"none\";\n                    }\n                }\n            }\n        }\n        else {\n            this.setState({ isSearching: true })\n            axios.all([\n                axios.get(this.props.apiUrl + '/search-entities?query=' + searchTerms + '&type=' + this.props.entityType)])\n                .then(axios.spread((getAllData) => {\n                    const data = getAllData.data.data;\n                    const pagination = getAllData.data.meta.pagination;\n                    this.setState({ pagination, data, isLoaded: true });\n                }))\n                .catch((err) => {\n                    this.setState({ isLoaded: false, error: err.message });\n                });\n        }\n    }\n\n    getData = () => {\n        this.setState({ isLoaded: false })\n        console.log(this.props.entityType)\n        if (this.props.entityType === 'repositories') {\n            axios.all([\n                axios.get(this.props.apiUrl + '/repositories')])\n                .then(axios.spread((getAllData) => {\n                    const data = getAllData.data.data;\n                    console.log(data)\n                    this.setState({ data, isLoaded: true });\n                }))\n                .catch((err) => {\n                    this.setState({ isLoaded: false, error: err.message });\n                });\n        }\n        else {\n            axios.all([\n                axios.get(this.props.apiUrl + '/entities?entity_type=' + this.props.entityType + '&items=50&page=' + this.state.page)\n            ])\n                .then(axios.spread((getAllData) => {\n                    const data = getAllData.data.data;\n                    const pagination = getAllData.data.meta.pagination;\n                    this.setState({ pagination, data, isLoaded: true });\n\n                    console.log(data)\n                }))\n                .catch((err) => {\n                    this.setState({ isLoaded: false, error: err.message });\n                });\n        }\n    }\n\n\n\n    render() {\n        var EntityList = this.state.data.map((entity) => {\n            if (entity.attributes.label !== null) {\n                let entityLabel\n                if (entity.attributes['type-label'] === 'Music') {\n                    if (entity.attributes.properties && entity.attributes.properties.composer) {\n                        entityLabel = <span dangerouslySetInnerHTML={{ __html: entity.attributes.label + \" composed by \" + entity.attributes.properties.composer }} />\n                    }\n                    else {\n                        entityLabel = <span dangerouslySetInnerHTML={{ __html: entity.attributes.label }} />\n                    }\n                }\n                else if (entity.attributes['type-label'] === 'Publication') {\n                    if (entity.attributes.properties && entity.attributes.properties.author) {\n                        entityLabel = <span dangerouslySetInnerHTML={{ __html: entity.attributes.label + \" by \" + entity.attributes.properties.author }} />\n                    }\n                    else {\n                        entityLabel = <span dangerouslySetInnerHTML={{ __html: entity.attributes.label }} />\n                    }\n                }\n                else if (entity.attributes['type-label'] === 'Production') {\n                    if (entity.attributes.properties && entity.attributes.properties.director) {\n                        entityLabel = <span dangerouslySetInnerHTML={{ __html: entity.attributes.label + \" directed by \" + entity.attributes.properties.director }} />\n                    }\n                    else {\n                        entityLabel = <span dangerouslySetInnerHTML={{ __html: entity.attributes.label }} />\n                    }\n                }\n                else if (entity.attributes['type-label'] === 'Reading') {\n                    let currentLabel\n                    if (entity.attributes.label.slice(-1) === '.') {\n                        currentLabel = entity.attributes.label.substring(0, entity.attributes.label.length - 1)\n                    }\n                    // else if (entity.attributes.label.slice(-1) === '.</i>'){\n                    // currentLabel = entity.attributes.label.substring(0, entity.attributes.label.length - 10) + \"</i>\"\n                    // }\n                    else {\n                        currentLabel = entity.attributes.label\n                    }\n                    if (entity.attributes.properties && entity.attributes.properties.authors) {\n                        entityLabel = <span dangerouslySetInnerHTML={{ __html: currentLabel + \" by \" + entity.attributes.properties.authors[0] }} />\n                    }\n                    else {\n                        entityLabel = <span dangerouslySetInnerHTML={{ __html: currentLabel }} />\n                    }\n                }\n                else if (entity.attributes['type-label'] === 'Translating') {\n                    if (entity.attributes.properties && entity.attributes.properties.author) {\n                        entityLabel = <span dangerouslySetInnerHTML={{ __html: entity.attributes.label + \" by \" + entity.attributes.properties.author }} />\n                    }\n                    else {\n                        entityLabel = <span dangerouslySetInnerHTML={{ __html: entity.attributes.label }} />\n                    }\n                }\n                else {\n                    entityLabel = <span dangerouslySetInnerHTML={{ __html: entity.attributes.label }} />\n                }\n                return entity.attributes.label === ' ' || entity.attributes.label === null ? null : <tr key={entity.id}>\n                    <td>\n                        {this.props.entityType === 'person' ?\n                            <Link\n                                to={{\n                                    pathname: `/people/${entity.id}`,\n                                    state: {\n                                        id: entity.id,\n                                        name: entity.attributes.label\n                                    }\n                                }}>\n                                <span dangerouslySetInnerHTML={{ __html: entity.attributes.label }} />\n                                {entity.attributes.properties && entity.attributes.properties['life-dates'] ? ' (' + entity.attributes.properties['life-dates'] + ')' : null}\n                            </Link>\n                            :\n                            <Link\n                                to={{\n                                    pathname: `/${this.props.entityType}s/${entity.id}`,\n                                    state: {\n                                        id: entity.id\n                                    }\n                                }}>\n                                {entityLabel}\n                            </Link>\n                        }\n                    </td>\n                </tr>\n            }\n            else {\n                return null\n            }\n        }\n        );\n\n        const metaBuild = {\n            title: this.props.metaTitle,\n            description: `Browse all letters on this page`,\n        };\n\n        return (\n            <Container fluid>\n                <DocMetaBuilder {...metaBuild} />\n                <BrowseLetters active={'by-' + this.props.entityType} action={this.entityChange} />\n                <Row className=\"no-gutters pt-3\">\n                    <Col className=\"no-gutters\">\n                        <Form className=\"tab-search\" onSubmit={this.intiateSearch} ref=\"form\">\n                            <Form.Group>\n                                <div className=\"input-group mb-3\">\n                                    <div className=\"input-group-prepend\">\n                                        <Button aria-label='submit button' variant=\"primary\" type=\"submit\">\n                                            <FontAwesomeIcon icon=\"search\" />\n                                        </Button>\n                                    </div>\n                                    <Form.Control id=\"query\" name=\"query\" type=\"query\" aria-label='query' placeholder={this.props.placeholder} />\n                                </div>\n                            </Form.Group>\n                        </Form>\n                    </Col>\n                    {this.state.isSearching ? <Col md={1} className=\"no-gutters\">\n                        <Form onSubmit={this.resetPage}><Button variant=\"secondary\" type=\"submit\" className=\"full-width\">Clear</Button></Form>\n                    </Col> : null}\n                </Row>\n                {this.state.isLoaded && this.props.entityType !== 'repositories' ? <Pagination action={this.handler} pagination={this.state.pagination} /> : null}\n                <Table striped bordered className=\"browse-by\" id='browse-by' >\n                    <thead>\n                        <tr>\n                            <th>{this.props.tableHeader}</th>\n                        </tr>\n                    </thead>\n                    {!this.state.isLoaded ? <LoadingSpinner /> : <tbody>\n                        {EntityList}\n                    </tbody>}\n                </Table>\n            </Container>\n        )\n    }\n}\n\nexport default LettersBy;\n"]},"metadata":{},"sourceType":"module"}