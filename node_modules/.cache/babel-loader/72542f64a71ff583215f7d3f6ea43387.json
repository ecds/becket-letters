{"ast":null,"code":"var _jsxFileName = \"/Users/mtherri/Documents/Code/beckett-letters/src/components/utilities/SearchRecipientOnPage.js\";\nimport React, { Component } from \"react\";\n\nclass SearchRecipientOnPage extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.filterLettersList = this.filterLettersList.bind(this);\n  }\n\n  filterLettersList() {\n    // Declare variables\n    var input, filter, table, tr, td, i, txtValue;\n    input = document.getElementById(this.props.tableId + '_input');\n    filter = input.value.toUpperCase();\n    table = document.getElementById(this.props.tableId);\n    tr = table.getElementsByTagName(\"tr\"); // Loop through all table rows, and hide those who don't match the search query\n\n    for (i = 0; i < tr.length; i++) {\n      td = tr[i].getElementsByTagName(\"td\")[0];\n\n      if (td) {\n        txtValue = td.textContent || td.innerText;\n\n        if (txtValue.toUpperCase().indexOf(filter) > -1) {\n          tr[i].style.display = \"\";\n        } else {\n          tr[i].style.display = \"none\";\n        }\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: this.props.tableId + '_input',\n      onKeyUp: this.filterLettersList,\n      placeholder: \"Search \" + this.props.placeHolder + '...',\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nexport default SearchRecipientOnPage;","map":{"version":3,"sources":["/Users/mtherri/Documents/Code/beckett-letters/src/components/utilities/SearchRecipientOnPage.js"],"names":["React","Component","SearchRecipientOnPage","constructor","props","context","filterLettersList","bind","input","filter","table","tr","td","i","txtValue","document","getElementById","tableId","value","toUpperCase","getElementsByTagName","length","textContent","innerText","indexOf","style","display","render","placeHolder"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,qBAAN,SAAoCD,SAApC,CAA8C;AAC5CE,EAAAA,WAAW,CAACC,KAAD,EAAQC,OAAR,EAAiB;AACxB,UAAMD,KAAN,EAAaC,OAAb;AACA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;AACH;;AAEDD,EAAAA,iBAAiB,GAAG;AACpB;AACA,QAAIE,KAAJ,EAAWC,MAAX,EAAmBC,KAAnB,EAA0BC,EAA1B,EAA8BC,EAA9B,EAAkCC,CAAlC,EAAqCC,QAArC;AACAN,IAAAA,KAAK,GAAGO,QAAQ,CAACC,cAAT,CAAwB,KAAKZ,KAAL,CAAWa,OAAX,GAAmB,QAA3C,CAAR;AACAR,IAAAA,MAAM,GAAGD,KAAK,CAACU,KAAN,CAAYC,WAAZ,EAAT;AACAT,IAAAA,KAAK,GAAGK,QAAQ,CAACC,cAAT,CAAwB,KAAKZ,KAAL,CAAWa,OAAnC,CAAR;AACAN,IAAAA,EAAE,GAAGD,KAAK,CAACU,oBAAN,CAA2B,IAA3B,CAAL,CANoB,CAQpB;;AACA,SAAKP,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGF,EAAE,CAACU,MAAnB,EAA2BR,CAAC,EAA5B,EAAgC;AAC9BD,MAAAA,EAAE,GAAGD,EAAE,CAACE,CAAD,CAAF,CAAMO,oBAAN,CAA2B,IAA3B,EAAiC,CAAjC,CAAL;;AACA,UAAIR,EAAJ,EAAQ;AACNE,QAAAA,QAAQ,GAAGF,EAAE,CAACU,WAAH,IAAkBV,EAAE,CAACW,SAAhC;;AACA,YAAIT,QAAQ,CAACK,WAAT,GAAuBK,OAAvB,CAA+Bf,MAA/B,IAAyC,CAAC,CAA9C,EAAiD;AAC/CE,UAAAA,EAAE,CAACE,CAAD,CAAF,CAAMY,KAAN,CAAYC,OAAZ,GAAsB,EAAtB;AACD,SAFD,MAEO;AACLf,UAAAA,EAAE,CAACE,CAAD,CAAF,CAAMY,KAAN,CAAYC,OAAZ,GAAsB,MAAtB;AACD;AACF;AACF;AACF;;AAECC,EAAAA,MAAM,GAAG;AACL,wBACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAE,KAAKvB,KAAL,CAAWa,OAAX,GAAmB,QAA1C;AAAoD,MAAA,OAAO,EAAE,KAAKX,iBAAlE;AAAqF,MAAA,WAAW,EAAE,YAAU,KAAKF,KAAL,CAAWwB,WAArB,GAAiC,KAAnI;AAA0I,MAAA,SAAS,EAAC,cAApJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AAnCyC;;AAsC9C,eAAe1B,qBAAf","sourcesContent":["import React, { Component } from \"react\";\n\nclass SearchRecipientOnPage extends Component {\n  constructor(props, context) {\n      super(props, context);\n      this.filterLettersList = this.filterLettersList.bind(this);\n  }\n\n  filterLettersList() {\n  // Declare variables\n  var input, filter, table, tr, td, i, txtValue;\n  input = document.getElementById(this.props.tableId+'_input');\n  filter = input.value.toUpperCase();\n  table = document.getElementById(this.props.tableId);\n  tr = table.getElementsByTagName(\"tr\");\n\n  // Loop through all table rows, and hide those who don't match the search query\n  for (i = 0; i < tr.length; i++) {\n    td = tr[i].getElementsByTagName(\"td\")[0];\n    if (td) {\n      txtValue = td.textContent || td.innerText;\n      if (txtValue.toUpperCase().indexOf(filter) > -1) {\n        tr[i].style.display = \"\";\n      } else {\n        tr[i].style.display = \"none\";\n      }\n    }\n  }\n}\n\n  render() {\n      return (\n        <div className=\"table-search\">\n          {/* <label htmlFor={this.props.tableId+'_input'} >Search Letters by Recipient:</label> */}\n          <input type=\"text\" id={this.props.tableId+'_input'} onKeyUp={this.filterLettersList} placeholder={\"Search \"+this.props.placeHolder+'...'} className=\"form-control\"/>\n        </div>\n      )\n    }\n  }\n\nexport default SearchRecipientOnPage;\n"]},"metadata":{},"sourceType":"module"}