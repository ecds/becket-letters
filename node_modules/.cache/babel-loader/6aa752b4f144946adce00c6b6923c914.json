{"ast":null,"code":"var _jsxFileName = \"/Users/sbarre5/Development/beckett-letters/src/components/letters.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport filterFactory, { textFilter, numberFilter } from 'react-bootstrap-table2-filter';\nconst columns = [{\n  dataField: 'Addressed from (Actual)',\n  text: 'Addressed from (Actual)',\n  sort: true,\n  filter: textFilter({\n    delay: 333\n  })\n}, {\n  dataField: 'Addressed to (Actual)',\n  text: 'Addressed to (Actual)',\n  sort: true,\n  filter: textFilter({\n    delay: 333\n  })\n}, {\n  dataField: 'Day',\n  text: 'Day',\n  sort: true,\n  filter: numberFilter({\n    delay: 333\n  })\n}, {\n  dataField: 'Month',\n  text: 'Month',\n  sort: true,\n  filter: numberFilter({\n    delay: 333\n  })\n}, {\n  dataField: 'Year',\n  text: 'Year',\n  sort: true,\n  filter: numberFilter({\n    delay: 333\n  })\n}, {\n  dataField: 'Reg place sent',\n  text: 'Reg place sent',\n  sort: true,\n  filter: textFilter({\n    delay: 333\n  })\n}, {\n  dataField: 'First Repository',\n  text: 'First Repository',\n  sort: true,\n  filter: textFilter({\n    delay: 333\n  })\n}, {\n  dataField: 'PrimaryLang',\n  text: 'PrimaryLang',\n  sort: true,\n  filter: textFilter({\n    delay: 333\n  })\n}];\nconst rowEvents = {\n  onClick: (e, row, rowIndex) => {\n    console.log(row);\n    this.props.history.push({\n      pathname: '/template',\n      search: '?query=abc'\n    });\n  }\n};\nexport class Letters extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      letters: []\n    };\n  }\n\n  componentDidMount() {\n    axios.all([axios.get('letters_json.json')]).then(axios.spread(getLetters => {\n      const letters = getLetters.data;\n      this.setState({\n        letters\n      });\n      console.log(letters);\n    })).catch(err => {\n      this.setState({\n        isLoaded: false\n      });\n      this.setState({\n        error: err.message\n      });\n    });\n  }\n\n  render() {\n    // const allLetters = this.state.letters.map((letter) => <li>{letter.ID}, {letter.Additional} </li>)\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Letters\"), React.createElement(BootstrapTable, {\n      keyField: \"id\",\n      data: this.state.letters,\n      columns: columns,\n      filter: filterFactory(),\n      rowEvents: rowEvents,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }));\n  }\n\n}\nexport default Letters;","map":{"version":3,"sources":["/Users/sbarre5/Development/beckett-letters/src/components/letters.js"],"names":["React","Component","axios","BootstrapTable","filterFactory","textFilter","numberFilter","columns","dataField","text","sort","filter","delay","rowEvents","onClick","e","row","rowIndex","console","log","props","history","push","pathname","search","Letters","constructor","context","state","error","isLoaded","letters","componentDidMount","all","get","then","spread","getLetters","data","setState","catch","err","message","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,aAAP,IAAwBC,UAAxB,EAAoCC,YAApC,QAAwD,+BAAxD;AAEA,MAAMC,OAAO,GAAG,CAAC;AACfC,EAAAA,SAAS,EAAE,yBADI;AAEfC,EAAAA,IAAI,EAAE,yBAFS;AAGfC,EAAAA,IAAI,EAAE,IAHS;AAIfC,EAAAA,MAAM,EAAEN,UAAU,CAAC;AAAEO,IAAAA,KAAK,EAAE;AAAT,GAAD;AAJH,CAAD,EAKb;AACDJ,EAAAA,SAAS,EAAE,uBADV;AAEDC,EAAAA,IAAI,EAAE,uBAFL;AAGDC,EAAAA,IAAI,EAAE,IAHL;AAIDC,EAAAA,MAAM,EAAEN,UAAU,CAAC;AAAEO,IAAAA,KAAK,EAAE;AAAT,GAAD;AAJjB,CALa,EAUb;AACDJ,EAAAA,SAAS,EAAE,KADV;AAEDC,EAAAA,IAAI,EAAE,KAFL;AAGDC,EAAAA,IAAI,EAAE,IAHL;AAIDC,EAAAA,MAAM,EAAEL,YAAY,CAAC;AAAEM,IAAAA,KAAK,EAAE;AAAT,GAAD;AAJnB,CAVa,EAeb;AACDJ,EAAAA,SAAS,EAAE,OADV;AAEDC,EAAAA,IAAI,EAAE,OAFL;AAGDC,EAAAA,IAAI,EAAE,IAHL;AAIDC,EAAAA,MAAM,EAAEL,YAAY,CAAC;AAAEM,IAAAA,KAAK,EAAE;AAAT,GAAD;AAJnB,CAfa,EAoBb;AACDJ,EAAAA,SAAS,EAAE,MADV;AAEDC,EAAAA,IAAI,EAAE,MAFL;AAGDC,EAAAA,IAAI,EAAE,IAHL;AAIDC,EAAAA,MAAM,EAAEL,YAAY,CAAC;AAAEM,IAAAA,KAAK,EAAE;AAAT,GAAD;AAJnB,CApBa,EAyBb;AACDJ,EAAAA,SAAS,EAAE,gBADV;AAEDC,EAAAA,IAAI,EAAE,gBAFL;AAGDC,EAAAA,IAAI,EAAE,IAHL;AAIDC,EAAAA,MAAM,EAAEN,UAAU,CAAC;AAAEO,IAAAA,KAAK,EAAE;AAAT,GAAD;AAJjB,CAzBa,EA8Bb;AACDJ,EAAAA,SAAS,EAAE,kBADV;AAEDC,EAAAA,IAAI,EAAE,kBAFL;AAGDC,EAAAA,IAAI,EAAE,IAHL;AAIDC,EAAAA,MAAM,EAAEN,UAAU,CAAC;AAAEO,IAAAA,KAAK,EAAE;AAAT,GAAD;AAJjB,CA9Ba,EAmCb;AACDJ,EAAAA,SAAS,EAAE,aADV;AAEDC,EAAAA,IAAI,EAAE,aAFL;AAGDC,EAAAA,IAAI,EAAE,IAHL;AAIDC,EAAAA,MAAM,EAAEN,UAAU,CAAC;AAAEO,IAAAA,KAAK,EAAE;AAAT,GAAD;AAJjB,CAnCa,CAAhB;AA0CA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,OAAO,EAAE,CAACC,CAAD,EAAIC,GAAJ,EAASC,QAAT,KAAsB;AAC7BC,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACA,SAAKI,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB;AACtBC,MAAAA,QAAQ,EAAE,WADY;AAEtBC,MAAAA,MAAM,EAAE;AAFc,KAAxB;AAID;AAPe,CAAlB;AAUA,OAAO,MAAMC,OAAN,SAAsBxB,SAAtB,CAAgC;AACrCyB,EAAAA,WAAW,CAACN,KAAD,EAAQO,OAAR,EAAiB;AAC1B,UAAMP,KAAN,EAAaO,OAAb;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,IADI;AAEXC,MAAAA,QAAQ,EAAE,KAFC;AAGXC,MAAAA,OAAO,EAAE;AAHE,KAAb;AAKD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB9B,IAAAA,KAAK,CAAC+B,GAAN,CAAU,CACR/B,KAAK,CAACgC,GAAN,CAAU,mBAAV,CADQ,CAAV,EAEGC,IAFH,CAEQjC,KAAK,CAACkC,MAAN,CAAcC,UAAD,IAAgB;AACjC,YAAMN,OAAO,GAAGM,UAAU,CAACC,IAA3B;AACA,WAAKC,QAAL,CAAc;AAAER,QAAAA;AAAF,OAAd;AACAb,MAAAA,OAAO,CAACC,GAAR,CAAYY,OAAZ;AACD,KAJK,CAFR,EAOGS,KAPH,CAOUC,GAAD,IAAS;AACd,WAAKF,QAAL,CAAc;AAAET,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACA,WAAKS,QAAL,CAAc;AAAEV,QAAAA,KAAK,EAAEY,GAAG,CAACC;AAAb,OAAd;AACD,KAVH;AAWD;;AAIDC,EAAAA,MAAM,GAAG;AACP;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI,oBAAC,cAAD;AAAgB,MAAA,QAAQ,EAAC,IAAzB;AAA8B,MAAA,IAAI,EAAE,KAAKf,KAAL,CAAWG,OAA/C;AAAwD,MAAA,OAAO,EAAExB,OAAjE;AAA0E,MAAA,MAAM,EAAEH,aAAa,EAA/F;AAAmG,MAAA,SAAS,EAAES,SAA9G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADF;AAOD;;AAnCoC;AAsCvC,eAAeY,OAAf","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport filterFactory, { textFilter, numberFilter } from 'react-bootstrap-table2-filter';\n\nconst columns = [{\n  dataField: 'Addressed from (Actual)',\n  text: 'Addressed from (Actual)',\n  sort: true,\n  filter: textFilter({ delay: 333 })\n}, {\n  dataField: 'Addressed to (Actual)',\n  text: 'Addressed to (Actual)',\n  sort: true,\n  filter: textFilter({ delay: 333 })\n}, {\n  dataField: 'Day',\n  text: 'Day',\n  sort: true,\n  filter: numberFilter({ delay: 333 })\n}, {\n  dataField: 'Month',\n  text: 'Month',\n  sort: true,\n  filter: numberFilter({ delay: 333 })\n}, {\n  dataField: 'Year',\n  text: 'Year',\n  sort: true,\n  filter: numberFilter({ delay: 333 })\n}, {\n  dataField: 'Reg place sent',\n  text: 'Reg place sent',\n  sort: true,\n  filter: textFilter({ delay: 333 })\n}, {\n  dataField: 'First Repository',\n  text: 'First Repository',\n  sort: true,\n  filter: textFilter({ delay: 333 })\n}, {\n  dataField: 'PrimaryLang',\n  text: 'PrimaryLang',\n  sort: true,\n  filter: textFilter({ delay: 333 })\n}];\n\nconst rowEvents = {\n  onClick: (e, row, rowIndex) => {\n    console.log(row);\n    this.props.history.push({\n      pathname: '/template',\n      search: '?query=abc'\n    })\n  }\n};\n\nexport class Letters extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      letters: []\n    };\n  }\n\n  componentDidMount() {\n    axios.all([\n      axios.get('letters_json.json')])\n      .then(axios.spread((getLetters) => {\n        const letters = getLetters.data;\n        this.setState({ letters });\n        console.log(letters)\n      }))\n      .catch((err) => {\n        this.setState({ isLoaded: false });\n        this.setState({ error: err.message });\n      });\n  }\n\n\n\n  render() {\n    // const allLetters = this.state.letters.map((letter) => <li>{letter.ID}, {letter.Additional} </li>)\n    return (\n      <div>\n          <h1>Letters</h1>\n          <BootstrapTable keyField='id' data={this.state.letters} columns={columns} filter={filterFactory()} rowEvents={rowEvents} />\n          {/* {allLetters} */}\n      </div>\n    )\n  }\n}\n\nexport default Letters;\n"]},"metadata":{},"sourceType":"module"}