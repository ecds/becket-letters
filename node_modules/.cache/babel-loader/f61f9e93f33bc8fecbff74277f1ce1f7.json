{"ast":null,"code":"var _jsxFileName = \"/Users/mtherri/Documents/Code/beckett-letters/src/components/LetterDetails.js\";\nimport axios from \"axios\";\nimport DocMetaBuilder from './utilities/DocMetaBuilder';\nimport React, { Component } from \"react\";\nimport RepositoryQuickGlance from './RepositoryQuickGlance';\nimport QuickGlance from './QuickGlance';\nexport class LetterDetails extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      letter: [],\n      letterRecipients: [],\n      entitiesMentioned: []\n    };\n  }\n\n  getData() {\n    axios.all([axios.get(this.props.apiUrl + '/letters/' + this.props.match.params.id)]).then(axios.spread(getEntityList => {\n      const letter = getEntityList.data.data;\n      console.log(letter);\n      const placesWritten = getEntityList.data.data.relationships['places-written'].data;\n      const letterRecipients = getEntityList.data.data.attributes.recipients;\n      const entitiesMentioned = getEntityList.data.data.attributes['entities-mentioned-list'];\n      const attributes = getEntityList.data.data.attributes;\n      this.setState({\n        letter,\n        placesWritten,\n        attributes,\n        letterRecipients,\n        entitiesMentioned\n      });\n      this.setState({\n        isLoaded: true\n      });\n    })).catch(err => {\n      this.setState({\n        isLoaded: false\n      });\n      this.setState({\n        error: err.message\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  getPhysicalDescription() {\n    var physicalDescription = '';\n\n    if (this.state.letter.attributes['typed']) {\n      physicalDescription += 'T';\n    } else {\n      physicalDescription += 'A';\n    }\n\n    physicalDescription += this.state.letter.attributes['physical-desc'];\n\n    if (this.state.letter.attributes['signed']) {\n      physicalDescription += 'S';\n    } else {\n      physicalDescription += 'I';\n    }\n\n    physicalDescription += '; ';\n\n    if (this.state.letter.attributes['leaves']) {\n      physicalDescription += this.state.letter.attributes['leaves'] + ' leaf,';\n    }\n\n    if (this.state.letter.attributes['sides']) {\n      physicalDescription += this.state.letter.attributes['sides'] + ' side';\n    }\n\n    return physicalDescription;\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded\n    } = this.state; // if there is an error\n\n    if (!error & isLoaded) {\n      let metaBuild = {\n        title: this.state.letter.attributes['formatted-date'],\n        desc: `letter to ${this.state.letter.attributes['recipient-list']}`\n      };\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"details\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(DocMetaBuilder, Object.assign({}, metaBuild, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }\n      }, \"Letter To: \", this.state.letter.attributes['recipient-list'], \" (\", this.state.letter.attributes['formatted-date'], \")\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"panel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }\n      }, \"Information About This Letter\"), /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-striped\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }\n      }, this.state.letter.attributes['addressed-from'] ? /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 67\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 71\n        }\n      }, \"Addressed From:\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 95\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"value\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 100\n        }\n      }, this.state.letter.attributes['addressed-from']))) : null, this.state.letter.attributes['addressed-to'] ? /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 69\n        }\n      }, \"Addressed To:\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 91\n        }\n      }, \" \", this.state.letter.attributes['addressed-to'])) : null, this.state.letter.attributes['envelope'] ? /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 65\n        }\n      }, \"Envelope: \"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 84\n        }\n      }, this.state.letter.attributes['envelope'])) : null, this.state.letter.attributes['letter-publisher'] ? /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 73\n        }\n      }, \"Letter Publisher:\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 99\n        }\n      }, \" \", this.state.letter.attributes['letter-publisher'])) : null, this.state.letter.attributes['notes'] ? /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 58\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 62\n        }\n      }, \"Notes:\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 77\n        }\n      }, \" \", this.state.letter.attributes['notes'])) : null, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }\n      }, \"Physical Description:\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 19\n        }\n      }, this.getPhysicalDescription(), \" \")), this.state.letter.attributes['physical-detail'] ? /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 68\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 72\n        }\n      }, \"Physical Detail: \"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 98\n        }\n      }, this.state.letter.attributes['physical-detail'])) : null, this.state.letter.attributes['physical-notes'] ? /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 67\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 71\n        }\n      }, \"Physical Notes:\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 95\n        }\n      }, \" \", this.state.letter.attributes['physical-notes'])) : null, this.state.letter.attributes['postcard-image'] ? /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 67\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 71\n        }\n      }, \"Postcard Image: \"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 96\n        }\n      }, this.state.letter.attributes['postcard-image'])) : null, this.state.letter.attributes['postmark'] ? /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 65\n        }\n      }, \"Postmark: \"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 84\n        }\n      }, this.state.letter.attributes['postmark'])) : null, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 19\n        }\n      }, \"Recipient\", this.state.letter.attributes.recipients.length > 1 ? 's' : null, \":\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 19\n        }\n      }, this.state.letter.attributes.recipients.map(entity => /*#__PURE__*/React.createElement(QuickGlance, {\n        apiUrl: this.props.apiUrl,\n        id: entity.id,\n        apiUrlExtender: \"entities\",\n        key: entity.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 23\n        }\n      })))), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 19\n        }\n      }, \"Repositories\", this.state.letter.relationships.repositories.data.length > 1 ? 'ies' : 'y', \":\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 19\n        }\n      }, this.state.letter.relationships.repositories.data.map(respository => /*#__PURE__*/React.createElement(RepositoryQuickGlance, {\n        apiUrl: this.props.apiUrl,\n        id: respository.id,\n        key: respository.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 23\n        }\n      })))), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 19\n        }\n      }, \"Place\", this.state.letter.relationships['places-written'].data.length > 1 ? 's' : null, \" Written:\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 19\n        }\n      }, this.state.letter.relationships['places-written'].data.map(entity => /*#__PURE__*/React.createElement(QuickGlance, {\n        apiUrl: this.props.apiUrl,\n        id: entity.id,\n        apiUrlExtender: \"entities\",\n        key: entity.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 23\n        }\n      })))), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 19\n        }\n      }, \"Production\", this.state.entitiesMentioned['production'].length > 1 ? 's' : null, \" Mentioned:\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 19\n        }\n      }, this.state.entitiesMentioned['production'].map(entity => /*#__PURE__*/React.createElement(QuickGlance, {\n        apiUrl: this.props.apiUrl,\n        id: entity.id,\n        apiUrlExtender: \"entities\",\n        key: entity.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 23\n        }\n      })))), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 19\n        }\n      }, \"Attendance\", this.state.entitiesMentioned['attendance'].length > 1 ? 's' : null, \" Mentioned:\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 19\n        }\n      }, this.state.entitiesMentioned['attendance'].map(entity => /*#__PURE__*/React.createElement(QuickGlance, {\n        apiUrl: this.props.apiUrl,\n        id: entity.id,\n        apiUrlExtender: \"entities\",\n        key: entity.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 23\n        }\n      })))), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 19\n        }\n      }, \"Music Mentioned:\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 19\n        }\n      }, this.state.entitiesMentioned['music'].map(entity => /*#__PURE__*/React.createElement(QuickGlance, {\n        apiUrl: this.props.apiUrl,\n        id: entity.id,\n        apiUrlExtender: \"entities\",\n        key: entity.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 23\n        }\n      })))), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 19\n        }\n      }, \"Organization\", this.state.entitiesMentioned['organization'].length > 1 ? 's' : null, \" Mentioned:\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 19\n        }\n      }, this.state.entitiesMentioned['organization'].map(entity => /*#__PURE__*/React.createElement(QuickGlance, {\n        apiUrl: this.props.apiUrl,\n        id: entity.id,\n        apiUrlExtender: \"entities\",\n        key: entity.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 23\n        }\n      })))), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 19\n        }\n      }, \"People Mentioned:\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 19\n        }\n      }, this.state.entitiesMentioned['person'].map(entity => /*#__PURE__*/React.createElement(QuickGlance, {\n        apiUrl: this.props.apiUrl,\n        id: entity.id,\n        apiUrlExtender: \"entities\",\n        key: entity.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 23\n        }\n      })))), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 19\n        }\n      }, \"Place\", this.state.entitiesMentioned['place'].length > 1 ? 's' : null, \" Mentioned:\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 19\n        }\n      }, this.state.entitiesMentioned['place'].map(entity => /*#__PURE__*/React.createElement(QuickGlance, {\n        apiUrl: this.props.apiUrl,\n        id: entity.id,\n        apiUrlExtender: \"entities\",\n        key: entity.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 23\n        }\n      })))), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 19\n        }\n      }, \"Event\", this.state.entitiesMentioned['public-event'].length > 1 ? 's' : null, \" Mentioned:\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 19\n        }\n      }, this.state.entitiesMentioned['public-event'].map(entity => /*#__PURE__*/React.createElement(QuickGlance, {\n        apiUrl: this.props.apiUrl,\n        id: entity.id,\n        apiUrlExtender: \"entities\",\n        key: entity.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 23\n        }\n      })))), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 19\n        }\n      }, \"Reading\", this.state.entitiesMentioned['reading'].length > 1 ? 's' : null, \" Mentioned:\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 19\n        }\n      }, this.state.entitiesMentioned['reading'].map(entity => /*#__PURE__*/React.createElement(QuickGlance, {\n        apiUrl: this.props.apiUrl,\n        id: entity.id,\n        apiUrlExtender: \"entities\",\n        key: entity.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 23\n        }\n      })))), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 19\n        }\n      }, \"Translating\", this.state.entitiesMentioned['translating'].length > 1 ? 's' : null, \" Mentioned:\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 19\n        }\n      }, this.state.entitiesMentioned['translating'].map(entity => /*#__PURE__*/React.createElement(QuickGlance, {\n        apiUrl: this.props.apiUrl,\n        id: entity.id,\n        apiUrlExtender: \"entities\",\n        key: entity.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 23\n        }\n      })))), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 19\n        }\n      }, \"Work\", this.state.entitiesMentioned['work-of-art'].length > 1 ? 's' : null, \" of Art Mentioned:\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 19\n        }\n      }, this.state.entitiesMentioned['work-of-art'].map(entity => /*#__PURE__*/React.createElement(QuickGlance, {\n        apiUrl: this.props.apiUrl,\n        id: entity.id,\n        apiUrlExtender: \"entities\",\n        key: entity.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 23\n        }\n      })))), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 19\n        }\n      }, \"Writing\", this.state.entitiesMentioned['writing'].length > 1 ? 's' : null, \" Mentioned:\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 19\n        }\n      }, this.state.entitiesMentioned['writing'].map(entity => /*#__PURE__*/React.createElement(QuickGlance, {\n        apiUrl: this.props.apiUrl,\n        id: entity.id,\n        apiUrlExtender: \"entities\",\n        key: entity.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 23\n        }\n      }))))))));\n    } else {\n      return null;\n    }\n  }\n\n}\nexport default LetterDetails;","map":{"version":3,"sources":["/Users/mtherri/Documents/Code/beckett-letters/src/components/LetterDetails.js"],"names":["axios","DocMetaBuilder","React","Component","RepositoryQuickGlance","QuickGlance","LetterDetails","constructor","props","context","state","error","isLoaded","letter","letterRecipients","entitiesMentioned","getData","all","get","apiUrl","match","params","id","then","spread","getEntityList","data","console","log","placesWritten","relationships","attributes","recipients","setState","catch","err","message","componentDidMount","getPhysicalDescription","physicalDescription","render","metaBuild","title","desc","length","map","entity","repositories","respository"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport DocMetaBuilder from './utilities/DocMetaBuilder';\nimport React, { Component } from \"react\";\nimport RepositoryQuickGlance from './RepositoryQuickGlance';\nimport QuickGlance from './QuickGlance';\n\n\nexport class LetterDetails extends Component {\n\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      letter: [],\n      letterRecipients: [],\n      entitiesMentioned: []\n    };\n  }\n\n  getData() {\n    axios.all([\n      axios.get(this.props.apiUrl + '/letters/' + this.props.match.params.id)])\n      .then(axios.spread((getEntityList) => {\n        const letter = getEntityList.data.data;\n        console.log(letter)\n        const placesWritten = getEntityList.data.data.relationships['places-written'].data\n        const letterRecipients = getEntityList.data.data.attributes.recipients\n        const entitiesMentioned = getEntityList.data.data.attributes['entities-mentioned-list']\n        const attributes = getEntityList.data.data.attributes\n        this.setState({ letter, placesWritten, attributes, letterRecipients, entitiesMentioned });\n        this.setState({ isLoaded: true })\n      }))\n      .catch((err) => {\n        this.setState({ isLoaded: false });\n        this.setState({ error: err.message });\n      });\n  }\n\n\n\n  componentDidMount() {\n    this.getData()\n  }\n\n  getPhysicalDescription() {\n    var physicalDescription = '';\n    if (this.state.letter.attributes['typed']) {\n      physicalDescription += 'T'\n    }\n    else {\n      physicalDescription += 'A'\n    }\n    physicalDescription += this.state.letter.attributes['physical-desc'];\n    if (this.state.letter.attributes['signed']) {\n      physicalDescription += 'S'\n    }\n    else {\n      physicalDescription += 'I'\n    }\n    physicalDescription += '; '\n    if (this.state.letter.attributes['leaves']) {\n      physicalDescription += this.state.letter.attributes['leaves'] + ' leaf,'\n    }\n    if (this.state.letter.attributes['sides']) {\n      physicalDescription += this.state.letter.attributes['sides'] + ' side'\n    }\n\n    return physicalDescription;\n  }\n\n  render() {\n    const { error, isLoaded } = this.state;\n    // if there is an error\n    if (!error & isLoaded) {\n      let metaBuild = {\n        title: this.state.letter.attributes['formatted-date'],\n        desc: `letter to ${this.state.letter.attributes['recipient-list']}`\n      }\n      return (\n        <div className=\"details\">\n          <DocMetaBuilder {...metaBuild} />\n          <h1>Letter To: {this.state.letter.attributes['recipient-list']} ({this.state.letter.attributes['formatted-date']})</h1>\n          <div className=\"panel\">\n            <h2>Information About This Letter</h2>\n            <table className=\"table table-striped\">\n              <tbody>\n                {this.state.letter.attributes['addressed-from'] ? <tr><td>Addressed From:</td><td> <span className=\"value\">{this.state.letter.attributes['addressed-from']}</span></td></tr> : null}\n                {this.state.letter.attributes['addressed-to'] ? <tr><td>Addressed To:</td><td> {this.state.letter.attributes['addressed-to']}</td></tr> : null}\n                {this.state.letter.attributes['envelope'] ? <tr><td>Envelope: </td><td>{this.state.letter.attributes['envelope']}</td></tr> : null}\n                {this.state.letter.attributes['letter-publisher'] ? <tr><td>Letter Publisher:</td><td> {this.state.letter.attributes['letter-publisher']}</td></tr> : null}\n                {this.state.letter.attributes['notes'] ? <tr><td>Notes:</td><td> {this.state.letter.attributes['notes']}</td></tr> : null}\n                <tr><td>Physical Description:</td>\n                  <td>{this.getPhysicalDescription()} </td></tr>\n                {this.state.letter.attributes['physical-detail'] ? <tr><td>Physical Detail: </td><td>{this.state.letter.attributes['physical-detail']}</td></tr> : null}\n                {this.state.letter.attributes['physical-notes'] ? <tr><td>Physical Notes:</td><td> {this.state.letter.attributes['physical-notes']}</td></tr> : null}\n                {this.state.letter.attributes['postcard-image'] ? <tr><td>Postcard Image: </td><td>{this.state.letter.attributes['postcard-image']}</td></tr> : null}\n                {this.state.letter.attributes['postmark'] ? <tr><td>Postmark: </td><td>{this.state.letter.attributes['postmark']}</td></tr> : null}\n                <tr>\n                  <td>Recipient{this.state.letter.attributes.recipients.length > 1 ? 's' : null}:</td>\n                  <td>\n                    {this.state.letter.attributes.recipients.map((entity) =>\n                      <QuickGlance apiUrl={this.props.apiUrl} id={entity.id} apiUrlExtender='entities' key={entity.id} />\n                    )}\n                  </td>\n                </tr>\n                <tr>\n                  <td>Repositories{this.state.letter.relationships.repositories.data.length > 1 ? 'ies' : 'y'}:</td>\n                  <td>\n                    {this.state.letter.relationships.repositories.data.map((respository) =>\n                      <RepositoryQuickGlance apiUrl={this.props.apiUrl} id={respository.id} key={respository.id} />\n                    )}\n                  </td>\n                </tr>\n                <tr>\n                  <td>Place{this.state.letter.relationships['places-written'].data.length > 1 ? 's' : null} Written:</td>\n                  <td>\n                    {this.state.letter.relationships['places-written'].data.map((entity) =>\n                      <QuickGlance apiUrl={this.props.apiUrl} id={entity.id} apiUrlExtender='entities' key={entity.id} />\n                    )}\n                  </td>\n                </tr>\n                <tr>\n                  <td>Production{this.state.entitiesMentioned['production'].length > 1 ? 's' : null} Mentioned:</td>\n                  <td>\n                    {this.state.entitiesMentioned['production'].map((entity) =>\n                      <QuickGlance apiUrl={this.props.apiUrl} id={entity.id} apiUrlExtender='entities' key={entity.id} />\n                    )}\n                  </td>\n                </tr>\n                <tr>\n                  <td>Attendance{this.state.entitiesMentioned['attendance'].length > 1 ? 's' : null} Mentioned:</td>\n                  <td>\n                    {this.state.entitiesMentioned['attendance'].map((entity) =>\n                      <QuickGlance apiUrl={this.props.apiUrl} id={entity.id} apiUrlExtender='entities' key={entity.id} />\n                    )}\n                  </td>\n                </tr>\n                <tr>\n                  <td>Music Mentioned:</td>\n                  <td>\n                    {this.state.entitiesMentioned['music'].map((entity) =>\n                      <QuickGlance apiUrl={this.props.apiUrl} id={entity.id} apiUrlExtender='entities' key={entity.id} />\n                    )}\n                  </td>\n                </tr>\n                <tr>\n                  <td>Organization{this.state.entitiesMentioned['organization'].length > 1 ? 's' : null} Mentioned:</td>\n                  <td>\n                    {this.state.entitiesMentioned['organization'].map((entity) =>\n                      <QuickGlance apiUrl={this.props.apiUrl} id={entity.id} apiUrlExtender='entities' key={entity.id} />\n                    )}\n                  </td>\n                </tr>\n                <tr>\n                  <td>People Mentioned:</td>\n                  <td>\n                    {this.state.entitiesMentioned['person'].map((entity) =>\n                      <QuickGlance apiUrl={this.props.apiUrl} id={entity.id} apiUrlExtender='entities' key={entity.id} />\n                    )}\n                  </td>\n                </tr>\n                <tr>\n                  <td>Place{this.state.entitiesMentioned['place'].length > 1 ? 's' : null} Mentioned:</td>\n                  <td>\n                    {this.state.entitiesMentioned['place'].map((entity) =>\n                      <QuickGlance apiUrl={this.props.apiUrl} id={entity.id} apiUrlExtender='entities' key={entity.id} />\n                    )}\n                  </td>\n                </tr>\n                <tr>\n                  <td>Event{this.state.entitiesMentioned['public-event'].length > 1 ? 's' : null} Mentioned:</td>\n                  <td>\n                    {this.state.entitiesMentioned['public-event'].map((entity) =>\n                      <QuickGlance apiUrl={this.props.apiUrl} id={entity.id} apiUrlExtender='entities' key={entity.id} />\n                    )}\n                  </td>\n                </tr>\n                <tr>\n                  <td>Reading{this.state.entitiesMentioned['reading'].length > 1 ? 's' : null} Mentioned:</td>\n                  <td>\n                    {this.state.entitiesMentioned['reading'].map((entity) =>\n                      <QuickGlance apiUrl={this.props.apiUrl} id={entity.id} apiUrlExtender='entities' key={entity.id} />\n                    )}\n                  </td>\n                </tr>\n                <tr>\n                  <td>Translating{this.state.entitiesMentioned['translating'].length > 1 ? 's' : null} Mentioned:</td>\n                  <td>\n                    {this.state.entitiesMentioned['translating'].map((entity) =>\n                      <QuickGlance apiUrl={this.props.apiUrl} id={entity.id} apiUrlExtender='entities' key={entity.id} />\n                    )}\n                  </td>\n                </tr>\n                <tr>\n                  <td>Work{this.state.entitiesMentioned['work-of-art'].length > 1 ? 's' : null} of Art Mentioned:</td>\n                  <td>\n                    {this.state.entitiesMentioned['work-of-art'].map((entity) =>\n                      <QuickGlance apiUrl={this.props.apiUrl} id={entity.id} apiUrlExtender='entities' key={entity.id} />\n                    )}\n                  </td>\n                </tr>\n                <tr>\n                  <td>Writing{this.state.entitiesMentioned['writing'].length > 1 ? 's' : null} Mentioned:</td>\n                  <td>\n                    {this.state.entitiesMentioned['writing'].map((entity) =>\n                      <QuickGlance apiUrl={this.props.apiUrl} id={entity.id} apiUrlExtender='entities' key={entity.id} />\n                    )}\n                  </td>\n                </tr>\n\n              </tbody>\n            </table>\n          </div>\n        </div>\n      )\n    }\n    else {\n      return null\n    }\n  }\n}\n\nexport default LetterDetails;\n"]},"metadata":{},"sourceType":"module"}