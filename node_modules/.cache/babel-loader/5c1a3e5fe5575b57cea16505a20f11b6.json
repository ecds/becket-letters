{"ast":null,"code":"var _jsxFileName = \"/Users/mtherri/Documents/Code/beckett-letters/src/components/timeline.js\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nimport { Col, Row } from 'react-bootstrap';\nexport class Timeline extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      timelineEntries: []\n    };\n  }\n\n  componentDidMount() {\n    axios.all([axios.get('beckett-timeline-year.json')]).then(axios.spread(getLetterData => {\n      console.log(getLetterData);\n      const timelineEntries = getLetterData.data['1960'];\n      console.log(timelineEntries);\n      this.setState({\n        timelineEntries\n      });\n      this.setState({\n        isLoaded: true\n      });\n    })).catch(err => {\n      this.setState({\n        isLoaded: false\n      });\n      this.setState({\n        error: err.message\n      });\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded; // if there is an error\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Error: \", error.message); // if not loaded show loading\n    } else if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Loading...\"); // return now that component has value\n    } else {\n      const timeline = this.state.timelineEntries.map(function (timelineData) {\n        if (timelineData.type === \"\") {\n          return null;\n        }\n\n        if (timelineData.type === 'personal') {\n          return React.createElement(Row, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46\n            },\n            __self: this\n          }, React.createElement(Col, {\n            md: 6,\n            className: \"leftEvent\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \" \".concat(timelineData.type),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48\n            },\n            __self: this\n          }, React.createElement(\"h4\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49\n            },\n            __self: this\n          }, timelineData.date), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50\n            },\n            __self: this\n          }, timelineData.event))));\n        } else {\n          return React.createElement(Row, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56\n            },\n            __self: this\n          }, React.createElement(Col, {\n            md: 6,\n            className: \"offset-md-6 rightEvent\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \" \".concat(timelineData.type),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58\n            },\n            __self: this\n          }, React.createElement(\"h4\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59\n            },\n            __self: this\n          }, timelineData.date), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60\n            },\n            __self: this\n          }, timelineData.event))));\n        }\n\n        ;\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Timeline\")), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Accusantium mollitia, laborum blanditiis, natus rerum distinctio architecto rem atque, aut necessitatibus illum eum veritatis. Mollitia qui similique sit corrupti, atque amet?\")), React.createElement(Row, {\n        className: \"timelineTitleRow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Personal events are in \", React.createElement(\"span\", {\n        className: \"timelineHeaderBlue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"blue\"))), React.createElement(Col, {\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Global events are in \", React.createElement(\"span\", {\n        className: \"timelineHeaderYellow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"gold\")))), timeline);\n    }\n  }\n\n}\nexport default Timeline;","map":{"version":3,"sources":["/Users/mtherri/Documents/Code/beckett-letters/src/components/timeline.js"],"names":["React","Component","axios","Col","Row","Timeline","constructor","props","context","state","error","isLoaded","timelineEntries","componentDidMount","all","get","then","spread","getLetterData","console","log","data","setState","catch","err","message","render","timeline","map","timelineData","type","date","event"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from \"axios\";\nimport { Col, Row } from 'react-bootstrap';\n\nexport class Timeline extends Component {\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            timelineEntries: []\n        };\n    }\n\n    componentDidMount() {\n        axios.all([\n            axios.get('beckett-timeline-year.json')])\n            .then(axios.spread((getLetterData) => {\n                console.log(getLetterData);\n                const timelineEntries = getLetterData.data['1960'];\n                console.log(timelineEntries);\n                this.setState({ timelineEntries });\n                this.setState({ isLoaded: true })\n            }))\n            .catch((err) => {\n                this.setState({ isLoaded: false });\n                this.setState({ error: err.message });\n            });\n    }\n\n    render() {\n        const { error, isLoaded } = this.state;\n        // if there is an error\n        if (error) {\n            return <div>Error: {error.message}</div>;\n            // if not loaded show loading\n        } else if (!isLoaded) {\n            return <div>Loading...</div>;\n            // return now that component has value\n        } else {\n            const timeline = this.state.timelineEntries.map(function (timelineData) {\n                if (timelineData.type === \"\") {\n                    return null\n                }\n                if (timelineData.type === 'personal') {\n                    return <Row>\n                        <Col md={6} className='leftEvent'>\n                            <div className={` ${timelineData.type}`}>\n                                <h4>{timelineData.date}</h4>\n                                <p>{timelineData.event}</p>\n                            </div>\n                        </Col>\n                    </Row>;\n                }\n                else {\n                    return <Row>\n                        <Col md={6} className='offset-md-6 rightEvent'>\n                            <div className={` ${timelineData.type}`}>\n                                <h4>{timelineData.date}</h4>\n                                <p>{timelineData.event}</p>\n                            </div>\n                        </Col>\n                    </Row>;\n                };\n            })\n            return (\n                <div>\n                    <Row>\n                        <h1>Timeline</h1>\n                    </Row>\n                    <Row>\n                        <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Accusantium mollitia, laborum blanditiis, natus rerum distinctio architecto rem atque, aut necessitatibus illum eum veritatis. Mollitia qui similique sit corrupti, atque amet?</p>\n                    </Row>\n                    <Row className='timelineTitleRow'>\n                        <Col md={6} >\n                            <Row></Row>\n                            <h5>Personal events are in <span className=\"timelineHeaderBlue\">blue</span></h5>\n                        </Col>\n                        <Col md={6} >\n                            <h5>Global events are in <span className=\"timelineHeaderYellow\">gold</span></h5>\n                        </Col>\n                    </Row>\n                    {timeline}\n                </div>\n            )\n        }\n    }\n}\n\nexport default Timeline;"]},"metadata":{},"sourceType":"module"}