{"ast":null,"code":"var _jsxFileName = \"/Users/sbarre5/Development/beckett-letters/src/components/letters.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nexport class Letters extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      letters: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:3000/letters.json\").then(res => {\n      const letters = res.data.data;\n      this.setState({\n        isLoaded: true,\n        letters: letters\n      });\n    }).catch(err => {\n      this.setState({\n        error: err.message\n      });\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded; // if there is an error\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Error: \", error.message); // if not loaded show loading\n    } else if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Loading...\"); // return now that component has value\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, this.state.letters));\n    }\n  }\n\n}\nexport default Letters;","map":{"version":3,"sources":["/Users/sbarre5/Development/beckett-letters/src/components/letters.js"],"names":["React","Component","axios","Letters","constructor","props","context","state","error","isLoaded","letters","componentDidMount","get","then","res","data","setState","catch","err","message","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,OAAN,SAAsBF,SAAtB,CAAgC;AACrCG,EAAAA,WAAW,CAACC,KAAD,EAAQC,OAAR,EAAiB;AAC1B,UAAMD,KAAN,EAAaC,OAAb;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,IADI;AAEXC,MAAAA,QAAQ,EAAE,KAFC;AAGXC,MAAAA,OAAO,EAAE;AAHE,KAAb;AAKD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBT,IAAAA,KAAK,CAACU,GAAN,uCACGC,IADH,CACQC,GAAG,IAAI;AACX,YAAMJ,OAAO,GAAGI,GAAG,CAACC,IAAJ,CAASA,IAAzB;AACA,WAAKC,QAAL,CAAc;AACZP,QAAAA,QAAQ,EAAE,IADE;AAEZC,QAAAA,OAAO,EAAEA;AAFG,OAAd;AAID,KAPH,EAQGO,KARH,CAQUC,GAAD,IAAS;AACd,WAAKF,QAAL,CAAc;AACZR,QAAAA,KAAK,EAAEU,GAAG,CAACC;AADC,OAAd;AAGD,KAZH;AAaD;;AAEDC,EAAAA,MAAM,GAAG;AAAA,wBACqB,KAAKb,KAD1B;AAAA,UACCC,KADD,eACCA,KADD;AAAA,UACQC,QADR,eACQA,QADR,EAEP;;AACA,QAAID,KAAJ,EAAW;AACT,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAaA,KAAK,CAACW,OAAnB,CAAP,CADS,CAEX;AACC,KAHD,MAGO,IAAI,CAACV,QAAL,EAAe;AACpB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP,CADoB,CAEtB;AACC,KAHM,MAGA;AACL,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKF,KAAL,CAAWG,OAAf,CADF,CADF;AAKD;AACF;;AA1CoC;AA6CvC,eAAeP,OAAf","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nexport class Letters extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      letters: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`http://localhost:3000/letters.json`)\n      .then(res => {\n        const letters = res.data.data;\n        this.setState({\n          isLoaded: true,\n          letters: letters\n        });\n      })\n      .catch((err) => {\n        this.setState({\n          error: err.message\n        });\n      });\n  }\n\n  render() {\n    const { error, isLoaded } = this.state;\n    // if there is an error\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    // if not loaded show loading\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    // return now that component has value\n    } else {\n      return (\n        <div>\n          <p>{this.state.letters}</p>\n        </div>\n      )\n    }\n  }\n}\n\nexport default Letters;"]},"metadata":{},"sourceType":"module"}