{"ast":null,"code":"var _jsxFileName = \"/Users/mtherri/Documents/Code/beckett-letters/src/components/RepositoryDetails.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport SearchRecipientOnPage from './utilities/SearchRecipientOnPage';\nimport DocMetaBuilder from './utilities/DocMetaBuilder';\nimport HeaderBuilder from './utilities/HeaderBuilder';\n\nclass RepositoryDetails extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getData = () => {\n      axios.all([axios.get(this.props.apiUrl + '/repositories/' + this.props.match.params.id)]).then(axios.spread(getData => {\n        const entityData = getData.data.data;\n        console.log(entityData);\n        this.setState({\n          entityData\n        });\n        this.setState({\n          isLoaded: true\n        });\n      })).catch(err => {\n        this.setState({\n          isLoaded: false\n        });\n        this.setState({\n          error: err.message\n        });\n      });\n    };\n\n    this.state = {\n      isLoaded: false,\n      error: '',\n      entityData: []\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded\n    } = this.state; // if there is an error\n\n    if (error) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 14\n        }\n      }, \"Error: \", error.message); // if not loaded show loading\n    } else if (!isLoaded) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 14\n        }\n      }, \"Loading...\"); // return now that component has value\n    } else {\n      const metaBuild = {\n        title: this.state.entityData.attributes.label,\n        description: `${this.state.entityData.attributes.label} ${this.state.entityData.attributes['letter-count']} letters`,\n        id: this.state.entityData.id\n      };\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"details\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(DocMetaBuilder, Object.assign({}, metaBuild, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(HeaderBuilder, {\n        header: this.state.entityData.attributes.label,\n        id: this.state.entityData.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-striped\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"tbody\", {\n        className: \"details-table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }\n      }, \"American\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }\n      }, this.state.entityData.attributes.american ? 'Yes' : 'No')), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }\n      }, \"Letter Count\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }\n      }, this.state.entityData.attributes['letter-count'])))), /*#__PURE__*/React.createElement(SearchRecipientOnPage, {\n        tableId: \"repositoryLetters\",\n        placeHolder: \"by recipient\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-bordered\",\n        id: \"repositoryLetters\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }\n      }, \"Recipient\"), /*#__PURE__*/React.createElement(\"th\", {\n        colSpan: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }\n      }, \"Date\"))), this.state.entityData.attributes['public-letters-hash'].map((letter, index) => /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }\n      }, letter['recipients'].map(this_recipient => /*#__PURE__*/React.createElement(\"a\", {\n        href: '/people/' + this_recipient.id + '/' + this_recipient.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 67\n        }\n      }, this_recipient.name))), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }\n      }, letter['date']), /*#__PURE__*/React.createElement(\"td\", {\n        className: \"actions\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: '/letters/letterdetails/' + letter.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 41\n        }\n      }, \"Explore Letter\")))), this.state.entityData.attributes['public-letters-hash'].length === 0 ? /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 85\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        colspan: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 89\n        }\n      }, \"No Letters\")) : null));\n    }\n  }\n\n}\n\nexport default RepositoryDetails;","map":{"version":3,"sources":["/Users/mtherri/Documents/Code/beckett-letters/src/components/RepositoryDetails.js"],"names":["React","Component","axios","SearchRecipientOnPage","DocMetaBuilder","HeaderBuilder","RepositoryDetails","constructor","props","getData","all","get","apiUrl","match","params","id","then","spread","entityData","data","console","log","setState","isLoaded","catch","err","error","message","state","componentDidMount","render","metaBuild","title","attributes","label","description","american","map","letter","index","this_recipient","name","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport SearchRecipientOnPage from './utilities/SearchRecipientOnPage';\nimport DocMetaBuilder from './utilities/DocMetaBuilder';\nimport HeaderBuilder from './utilities/HeaderBuilder';\n\nclass RepositoryDetails extends Component {\n\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoaded: false,\n      error: '',\n      entityData: []\n    }\n  }\n\n\n  componentDidMount() {\n    this.getData()\n  }\n\n\n  getData = () => {\n    axios.all([\n      axios.get(this.props.apiUrl + '/repositories/' + this.props.match.params.id)])\n      .then(axios.spread((getData) => {\n        const entityData = getData.data.data;\n        console.log(entityData)\n        this.setState({ entityData });\n        this.setState({ isLoaded: true })\n      }))\n      .catch((err) => {\n        this.setState({ isLoaded: false });\n        this.setState({ error: err.message });\n      });\n  }\n\n  render() {\n    const { error, isLoaded } = this.state;\n    // if there is an error\n    if (error) {\n      return <div>Error: {error.message}</div>;\n      // if not loaded show loading\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n      // return now that component has value\n    } else {\n      const metaBuild = {\n        title: this.state.entityData.attributes.label,\n        description: `${this.state.entityData.attributes.label} ${this.state.entityData.attributes['letter-count']} letters`,\n        id: this.state.entityData.id\n      };\n      return (\n        <div className=\"details\">\n          <DocMetaBuilder {...metaBuild} />\n          <HeaderBuilder header={this.state.entityData.attributes.label} id={this.state.entityData.id} />\n          <table className='table table-striped'>\n            <tbody className='details-table'>\n            <tr>\n              <td>American</td>\n              <td>{this.state.entityData.attributes.american ? 'Yes' : 'No'}</td>\n            </tr>\n            <tr>\n              <td>Letter Count</td>\n              <td>{this.state.entityData.attributes['letter-count']}</td>\n            </tr>\n            </tbody>\n          </table>\n          <SearchRecipientOnPage tableId='repositoryLetters' placeHolder='by recipient' />\n          <table className='table table-bordered' id='repositoryLetters'>\n            <thead>\n              <tr>\n                <th>Recipient</th>\n                <th colSpan=\"2\">Date</th>\n              </tr>\n            </thead>\n            {this.state.entityData.attributes['public-letters-hash'].map((letter, index) =>\n              <tr>\n                <td>{letter['recipients'].map((this_recipient) => <a href={'/people/' + this_recipient.id + '/' + this_recipient.name}>{this_recipient.name}</a>)}</td>\n                <td>{letter['date']}</td>\n                <td className=\"actions\"><a href={'/letters/letterdetails/' + letter.id}>Explore Letter</a></td>\n              </tr>\n            )}\n            {this.state.entityData.attributes['public-letters-hash'].length === 0 ? <tr><td colspan='2'>No Letters</td></tr>:null}\n          </table>\n        </div>\n      )\n    }\n  }\n}\n\nexport default RepositoryDetails;\n"]},"metadata":{},"sourceType":"module"}