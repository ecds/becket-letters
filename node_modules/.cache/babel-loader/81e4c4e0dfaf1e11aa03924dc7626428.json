{"ast":null,"code":"var _jsxFileName = \"/Users/mtherri/Documents/Code/beckett-letters/src/components/RepositoryQuickGlance.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nclass RepositoryQuickGlance extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoaded: false,\n      error: '',\n      entityData: []\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  getData() {\n    axios.all([axios.get(this.props.apiUrl + '/repositories/' + this.props.id)]).then(axios.spread(getData => {\n      const entityData = getData.data.data;\n      this.setState({\n        entityData\n      });\n      this.setState({\n        isLoaded: true\n      });\n    })).catch(err => {\n      this.setState({\n        isLoaded: false\n      });\n      this.setState({\n        error: err.message\n      });\n    });\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded\n    } = this.state; // if there is an error\n\n    if (error) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 14\n        }\n      }, \"Error: \", error.message); // if not loaded show loading\n    } else if (!isLoaded) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 14\n        }\n      }, \"Loading...\"); // return now that component has value\n    } else {\n      return /*#__PURE__*/React.createElement(\"a\", {\n        href: '/repositories/' + this.state.entityData.id,\n        className: \"listLink\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }\n      }, this.state.entityData.attributes.label, \" \");\n    }\n  }\n\n}\n\nexport default RepositoryQuickGlance;","map":{"version":3,"sources":["/Users/mtherri/Documents/Code/beckett-letters/src/components/RepositoryQuickGlance.js"],"names":["React","Component","axios","RepositoryQuickGlance","constructor","props","state","isLoaded","error","entityData","componentDidMount","getData","all","get","apiUrl","id","then","spread","data","setState","catch","err","message","render","attributes","label"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,qBAAN,SAAoCF,SAApC,CAA8C;AAC5CG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAY;AACVC,MAAAA,QAAQ,EAAE,KADA;AAEVC,MAAAA,KAAK,EAAE,EAFG;AAGVC,MAAAA,UAAU,EAAE;AAHF,KAAZ;AAKH;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,OAAL;AACD;;AAEDA,EAAAA,OAAO,GAAG;AACRT,IAAAA,KAAK,CAACU,GAAN,CAAU,CACNV,KAAK,CAACW,GAAN,CAAU,KAAKR,KAAL,CAAWS,MAAX,GAAkB,gBAAlB,GAAmC,KAAKT,KAAL,CAAWU,EAAxD,CADM,CAAV,EAEKC,IAFL,CAEUd,KAAK,CAACe,MAAN,CAAcN,OAAD,IAAa;AAC5B,YAAMF,UAAU,GAAGE,OAAO,CAACO,IAAR,CAAaA,IAAhC;AACA,WAAKC,QAAL,CAAc;AAAEV,QAAAA;AAAF,OAAd;AACA,WAAKU,QAAL,CAAc;AAAEZ,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACH,KAJK,CAFV,EAOKa,KAPL,CAOYC,GAAD,IAAS;AACZ,WAAKF,QAAL,CAAc;AAAEZ,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACA,WAAKY,QAAL,CAAc;AAAEX,QAAAA,KAAK,EAAEa,GAAG,CAACC;AAAb,OAAd;AACH,KAVL;AAWD;;AAGDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEf,MAAAA,KAAF;AAASD,MAAAA;AAAT,QAAsB,KAAKD,KAAjC,CADO,CAEP;;AACA,QAAIE,KAAJ,EAAW;AACT,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAaA,KAAK,CAACc,OAAnB,CAAP,CADS,CAET;AACD,KAHD,MAGO,IAAI,CAACf,QAAL,EAAe;AACpB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP,CADoB,CAEpB;AACD,KAHM,MAGA;AACL,0BACE;AAAG,QAAA,IAAI,EAAE,mBAAmB,KAAKD,KAAL,CAAWG,UAAX,CAAsBM,EAAlD;AAAsD,QAAA,SAAS,EAAC,UAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4E,KAAKT,KAAL,CAAWG,UAAX,CAAsBe,UAAtB,CAAiCC,KAA7G,MADF;AAGD;AACF;;AA3C2C;;AA8C9C,eAAetB,qBAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass RepositoryQuickGlance extends Component {\n  constructor(props) {\n      super(props);\n      this.state= {\n        isLoaded: false,\n        error: '',\n        entityData: []\n      }\n  }\n\n  componentDidMount() {\n    this.getData()\n  }\n\n  getData() {\n    axios.all([\n        axios.get(this.props.apiUrl+'/repositories/'+this.props.id)])\n        .then(axios.spread((getData) => {\n            const entityData = getData.data.data;\n            this.setState({ entityData });\n            this.setState({ isLoaded: true })\n        }))\n        .catch((err) => {\n            this.setState({ isLoaded: false });\n            this.setState({ error: err.message });\n        });\n  }\n\n\n  render() {\n    const { error, isLoaded } = this.state;\n    // if there is an error\n    if (error) {\n      return <div>Error: {error.message}</div>;\n      // if not loaded show loading\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n      // return now that component has value\n    } else {\n      return (\n        <a href={'/repositories/' + this.state.entityData.id} className=\"listLink\">{this.state.entityData.attributes.label} </a>\n      )\n    }\n  }\n}\n\nexport default RepositoryQuickGlance;\n"]},"metadata":{},"sourceType":"module"}