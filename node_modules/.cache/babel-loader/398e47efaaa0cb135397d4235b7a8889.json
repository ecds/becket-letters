{"ast":null,"code":"var _jsxFileName = \"/Users/mtherri/Documents/Code/beckett-letters/src/components/TimelineEvent.js\";\nimport React, { Component } from 'react';\nimport { Col, Row } from 'react-bootstrap';\n\nclass TimelineEvent extends Component {\n  render() {\n    const eventClassName = (() => {\n      if (this.props.event.type === 'global') return 'event offset-md-6 right-event';else return 'event left-event';\n    })();\n\n    return /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      className: eventClassName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: this.props.event.type,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }\n    }, this.props.event.date), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }\n    }, this.props.event.event), this.props.event.additional && this.props.event.additional.startsWith('http') ? /*#__PURE__*/React.createElement(\"img\", {\n      className: \"timeline-event-image\",\n      src: this.props.event.additional,\n      alt: \"timeline event\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 94\n      }\n    }) : null)));\n  }\n\n}\n\nexport default TimelineEvent;","map":{"version":3,"sources":["/Users/mtherri/Documents/Code/beckett-letters/src/components/TimelineEvent.js"],"names":["React","Component","Col","Row","TimelineEvent","render","eventClassName","props","event","type","date","additional","startsWith"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,GAAR,EAAaC,GAAb,QAAuB,iBAAvB;;AAEA,MAAMC,aAAN,SAA4BH,SAA5B,CAAsC;AACpCI,EAAAA,MAAM,GAAG;AACP,UAAMC,cAAc,GAAG,CAAC,MAAM;AAC5B,UAAI,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,IAAjB,KAA0B,QAA9B,EACE,OAAO,+BAAP,CADF,KAGE,OAAO,kBAAP;AACH,KALsB,GAAvB;;AAOA,wBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAY,MAAA,SAAS,EAAEH,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAE,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKF,KAAL,CAAWC,KAAX,CAAiBE,IAAtB,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKH,KAAL,CAAWC,KAAX,CAAiBA,KAArB,CAFF,EAGG,KAAKD,KAAL,CAAWC,KAAX,CAAiBG,UAAjB,IAA+B,KAAKJ,KAAL,CAAWC,KAAX,CAAiBG,UAAjB,CAA4BC,UAA5B,CAAuC,MAAvC,CAA/B,gBAAgF;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAsC,MAAA,GAAG,EAAE,KAAKL,KAAL,CAAWC,KAAX,CAAiBG,UAA5D;AAAwE,MAAA,GAAG,EAAC,gBAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAhF,GAAkL,IAHrL,CADF,CADF,CADF;AAYD;;AArBmC;;AAwBtC,eAAeP,aAAf","sourcesContent":["import React, { Component } from 'react';\nimport {Col, Row} from 'react-bootstrap';\n\nclass TimelineEvent extends Component {\n  render() {\n    const eventClassName = (() => {\n      if (this.props.event.type === 'global')\n        return 'event offset-md-6 right-event'\n      else\n        return 'event left-event'\n    })();\n\n    return (\n      <Row>\n        <Col md={6} className={eventClassName}>\n          <div className={this.props.event.type}>\n            <h4>{this.props.event.date}</h4>\n            <p>{this.props.event.event}</p>\n            {this.props.event.additional && this.props.event.additional.startsWith('http') ? <img className='timeline-event-image' src={this.props.event.additional} alt='timeline event' /> : null}\n          </div>\n        </Col>\n      </Row>\n    )\n\n  }\n}\n\nexport default TimelineEvent;\n"]},"metadata":{},"sourceType":"module"}