{"ast":null,"code":"var _jsxFileName = \"/Users/sbarre5/Development/beckett-letters/src/components/people.js\";\nimport React, { Component } from \"./node_modules/react\";\nexport class People extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      people: []\n    };\n  }\n\n  componentDidMount() {// axios.get(`http://localhost:3000/people.json`)\n    //   .then(res => {\n    //     const people = res.data.data;\n    //     this.setState({\n    //       isLoaded: true,\n    //       people: people\n    //     });\n    //   })\n    //   .catch((err) => {\n    //     this.setState({\n    //       error: err.message\n    //     });\n    //   });\n  }\n\n  render() {\n    const _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded; // if there is an error\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Error: \", error.message); // if not loaded show loading\n    } else if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Loading...\"); // return now that component has value\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"People\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, this.state.people));\n    }\n  }\n\n}\nexport default People;","map":{"version":3,"sources":["/Users/sbarre5/Development/beckett-letters/src/components/people.js"],"names":["React","Component","People","constructor","props","context","state","error","isLoaded","people","componentDidMount","render","message"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,sBAAjC;AAEA,OAAO,MAAMC,MAAN,SAAqBD,SAArB,CAA+B;AACpCE,EAAAA,WAAW,CAACC,KAAD,EAAQC,OAAR,EAAiB;AAC1B,UAAMD,KAAN,EAAaC,OAAb;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,IADI;AAEXC,MAAAA,QAAQ,EAAE,KAFC;AAGXC,MAAAA,MAAM,EAAE;AAHG,KAAb;AAKD;;AAEDC,EAAAA,iBAAiB,GAAG,CAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AAEDC,EAAAA,MAAM,GAAG;AAAA,wBACqB,KAAKL,KAD1B;AAAA,UACCC,KADD,eACCA,KADD;AAAA,UACQC,QADR,eACQA,QADR,EAEP;;AACA,QAAID,KAAJ,EAAW;AACT,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAaA,KAAK,CAACK,OAAnB,CAAP,CADS,CAEX;AACC,KAHD,MAGO,IAAI,CAACJ,QAAL,EAAe;AACpB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP,CADoB,CAEtB;AACC,KAHM,MAGA;AACL,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKF,KAAL,CAAWG,MAAf,CAFF,CADF;AAMD;AACF;;AA3CmC;AA8CtC,eAAeP,MAAf","sourcesContent":["import React, { Component } from \"./node_modules/react\";\n\nexport class People extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      people: []\n    };\n  }\n\n  componentDidMount() {\n    // axios.get(`http://localhost:3000/people.json`)\n    //   .then(res => {\n    //     const people = res.data.data;\n    //     this.setState({\n    //       isLoaded: true,\n    //       people: people\n    //     });\n    //   })\n    //   .catch((err) => {\n    //     this.setState({\n    //       error: err.message\n    //     });\n    //   });\n  }\n\n  render() {\n    const { error, isLoaded } = this.state;\n    // if there is an error\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    // if not loaded show loading\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    // return now that component has value\n    } else {\n      return (\n        <div>\n          <h1>People</h1>\n          <p>{this.state.people}</p>\n        </div>\n      )\n    }\n  }\n}\n\nexport default People;"]},"metadata":{},"sourceType":"module"}