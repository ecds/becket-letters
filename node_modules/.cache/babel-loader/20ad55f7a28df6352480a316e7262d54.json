{"ast":null,"code":"var _jsxFileName = \"/Users/mtherri/Documents/Code/beckett-letters/src/components/utilities/HeaderBuilder.js\";\nimport React, { Component } from \"react\";\n\nclass HeaderBuilder extends Component {\n  render() {\n    if (this.props.type === 'string') {\n      return /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 7,\n          columnNumber: 17\n        }\n      }, this.props.header);\n    } else if (this.props.entityData.attributes['type-label'] === 'Attendance') {\n      return /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        dangerouslySetInnerHTML: {\n          __html: this.props.entityData.attributes.label\n        },\n        className: \"label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }\n      }), this.props.entityData.attributes.properties ? /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 25\n        }\n      }, this.props.entityData.attributes.properties['alternative-spellings'].length > 0 ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"spellings\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 112\n        }\n      }, this.props.entityData.attributes.properties['alternative-spellings'].map((entity, key) => /*#__PURE__*/React.createElement(\"span\", {\n        key: key,\n        dangerouslySetInnerHTML: {\n          __html: entity\n        },\n        className: \"list-span\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 231\n        }\n      })), \" \") : null, this.props.entityData.attributes.properties && this.props.entityData.attributes.properties['place-date'] ? /*#__PURE__*/React.createElement(\"span\", {\n        dangerouslySetInnerHTML: {\n          __html: this.props.entityData.attributes.properties['place-date']\n        },\n        className: \"comma\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 137\n        }\n      }) : null, this.props.entityData.attributes.properties && this.props.entityData.attributes.properties['attended-with'] ? /*#__PURE__*/React.createElement(\"span\", {\n        dangerouslySetInnerHTML: {\n          __html: this.props.entityData.attributes.properties['attended-with']\n        },\n        className: \"attended-with\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 140\n        }\n      }) : null, this.props.entityData.attributes.properties && this.props.entityData.attributes.properties['performed-by'] ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"performed-by\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 139\n        }\n      }, this.props.entityData.attributes.properties['performed-by'].map((entity, key) => /*#__PURE__*/React.createElement(\"span\", {\n        className: \"list-span\",\n        key: key,\n        dangerouslySetInnerHTML: {\n          __html: entity\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 252\n        }\n      }))) : null) : null);\n    } else if (this.props.entityData.attributes['type-label'] === 'Music') {\n      return /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }\n      }, this.props.entityData.attributes.properties !== null ? this.props.entityData.attributes.properties.composer : null), /*#__PURE__*/React.createElement(\"span\", {\n        dangerouslySetInnerHTML: {\n          __html: this.props.entityData.attributes.label\n        },\n        className: \"comma\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }\n      }), this.props.entityData.attributes.properties['alternative-titles'].length > 0 ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"spellings\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 101\n        }\n      }, this.props.entityData.attributes.properties['alternative-titles'].map((entity, key) => /*#__PURE__*/React.createElement(\"span\", {\n        key: key,\n        dangerouslySetInnerHTML: {\n          __html: entity\n        },\n        className: \"list-span\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 217\n        }\n      })), \" \") : ', ', this.props.entityData.attributes.properties['description'] ? /*#__PURE__*/React.createElement(\"span\", {\n        dangerouslySetInnerHTML: {\n          __html: this.props.entityData.attributes.properties['description']\n        },\n        className: \"notes\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 83\n        }\n      }) : null, \"]            \", this.props.entityData.attributes.properties['performed-by'] ? /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 97\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        dangerouslySetInnerHTML: {\n          __html: this.props.entityData.attributes.properties['performed-by']\n        },\n        className: \"new-line performed-by\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 100\n        }\n      })) : null, this.props.entityData.attributes.properties['notes'] ? /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 77\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        dangerouslySetInnerHTML: {\n          __html: this.props.entityData.attributes.properties['notes']\n        },\n        className: \"notes\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 80\n        }\n      })) : null);\n    } else if (this.props.entityData.attributes['type-label'] === 'Organization') {\n      return /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        dangerouslySetInnerHTML: {\n          __html: this.props.entityData.attributes.label\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }\n      }), this.props.entityData.attributes.properties ? /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }\n      }, this.props.entityData.attributes.properties['alternate-spellings'].length > 0 ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"spellings\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 110\n        }\n      }, this.props.entityData.attributes.properties['alternate-spellings'].map((entity, key) => /*#__PURE__*/React.createElement(\"span\", {\n        key: key,\n        dangerouslySetInnerHTML: {\n          __html: entity\n        },\n        className: \"list-span\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 227\n        }\n      })), \" \") : '', this.props.entityData.attributes.properties.description ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"comma\",\n        dangerouslySetInnerHTML: {\n          __html: this.props.entityData.attributes.properties.description\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 88\n        }\n      }) : null) : null);\n    } else if (this.props.entityData.attributes['type-label'] === 'Place') {\n      return /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        dangerouslySetInnerHTML: {\n          __html: this.props.entityData.attributes.label\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }\n      }), this.props.entityData.attributes.properties ? /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }\n      }, this.props.entityData.attributes.properties['alternate-spellings'].length > 0 ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"spellings\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 112\n        }\n      }, this.props.entityData.attributes.properties['alternate-spellings'].map((entity, key) => /*#__PURE__*/React.createElement(\"span\", {\n        key: key,\n        dangerouslySetInnerHTML: {\n          __html: entity\n        },\n        className: \"list-span\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 229\n        }\n      })), \" \") : null, this.props.entityData.attributes.properties.description && this.props.entityData.attributes.properties.description !== \"\" ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"comma\",\n        dangerouslySetInnerHTML: {\n          __html: this.props.entityData.attributes.properties.description\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 154\n        }\n      }) : null, this.props.entityData.attributes.properties['links'].length > 0 ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"comma\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 96\n        }\n      }, this.props.entityData.attributes.properties['links'].map((entity, key) => /*#__PURE__*/React.createElement(\"a\", {\n        target: \"_new\",\n        key: key,\n        href: entity,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 195\n        }\n      }, entity)), \" \") : null) : null);\n    } else if (this.props.entityData.attributes['type-label'] === 'Production') {\n      return /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        dangerouslySetInnerHTML: {\n          __html: this.props.entityData.attributes.label\n        },\n        className: \"label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }\n      }), this.props.entityData.attributes.properties['proposal'] && this.props.entityData.attributes.properties['response'] === 'no' ? /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }\n      }, this.props.entityData.attributes.properties['proposal'] ? /*#__PURE__*/React.createElement(\"span\", {\n        dangerouslySetInnerHTML: {\n          __html: this.props.entityData.attributes.properties['proposal']\n        },\n        className: \"proposed-by\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 88\n        }\n      }) : null, this.props.entityData.attributes.properties.response ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"comma\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 85\n        }\n      }, this.props.entityData.attributes.properties.response) : null, this.props.entityData.attributes.properties.reason ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"comma\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 83\n        }\n      }, this.props.entityData.attributes.properties.reason) : null, this.props.entityData.attributes.properties['notes'] ? /*#__PURE__*/React.createElement(\"span\", {\n        dangerouslySetInnerHTML: {\n          __html: this.props.entityData.attributes.properties['notes']\n        },\n        className: \"notes\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 85\n        }\n      }) : null) : /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"detailGroup\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 29\n        }\n      }, this.props.entityData.attributes.properties.director ? /*#__PURE__*/React.createElement(\"span\", {\n        dangerouslySetInnerHTML: {\n          __html: this.props.entityData.attributes.properties.director\n        },\n        className: \"comma director\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 89\n        }\n      }) : null, this.props.entityData.attributes.properties.theatre ? /*#__PURE__*/React.createElement(\"span\", {\n        dangerouslySetInnerHTML: {\n          __html: this.props.entityData.attributes.properties.theatre\n        },\n        className: \"comma\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 88\n        }\n      }) : null, this.props.entityData.attributes.properties.city ? /*#__PURE__*/React.createElement(\"span\", {\n        dangerouslySetInnerHTML: {\n          __html: this.props.entityData.attributes.properties.city\n        },\n        className: \"comma\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 85\n        }\n      }) : null, this.props.entityData.attributes.properties.date ? /*#__PURE__*/React.createElement(\"span\", {\n        dangerouslySetInnerHTML: {\n          __html: this.props.entityData.attributes.properties.date\n        },\n        className: \"comma\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 85\n        }\n      }) : null), this.props.entityData.attributes.properties['cast'] ? /*#__PURE__*/React.createElement(\"span\", {\n        dangerouslySetInnerHTML: {\n          __html: this.props.entityData.attributes.properties['cast']\n        },\n        className: \"cast\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 84\n        }\n      }) : null, this.props.entityData.attributes.properties['notes'] ? /*#__PURE__*/React.createElement(\"span\", {\n        dangerouslySetInnerHTML: {\n          __html: this.props.entityData.attributes.properties['notes']\n        },\n        className: \"notes\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 85\n        }\n      }) : null, /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 29\n        }\n      }), this.props.entityData.attributes.properties['staging-beckett'] ? /*#__PURE__*/React.createElement(\"a\", {\n        href: this.props.entityData.attributes.properties['staging-beckett'],\n        className: \"btn btn-primary\",\n        target: \"_new\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 95\n        }\n      }, \"Staging Beckett\") : null));\n    } else if (this.props.entityData.attributes['type-label'] === 'Public Event') {\n      return /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        dangerouslySetInnerHTML: {\n          __html: this.props.entityData.attributes.label\n        },\n        className: \"label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }\n      }), this.props.entityData.attributes.properties.date ? /*#__PURE__*/React.createElement(\"span\", {\n        dangerouslySetInnerHTML: {\n          __html: this.props.entityData.attributes.properties.date\n        },\n        className: \"comma\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 73\n        }\n      }) : null);\n    } else if (this.props.entityData.attributes['type-label'] === 'Publication') {\n      return /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        dangerouslySetInnerHTML: {\n          __html: this.props.entityData.attributes.label\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }\n      }), this.props.entityData.attributes.properties.author ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"comma\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 75\n        }\n      }, this.props.entityData.attributes.properties.author) : null, this.props.entityData.attributes.properties.translator ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"comma\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 79\n        }\n      }, this.props.entityData.attributes.properties.translator) : null, this.props.entityData.attributes.properties['publication-information'] ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"comma\",\n        dangerouslySetInnerHTML: {\n          __html: this.props.entityData.attributes.properties['publication-information']\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 95\n        }\n      }) : null, this.props.entityData.attributes.properties['notes'] ? /*#__PURE__*/React.createElement(\"span\", {\n        dangerouslySetInnerHTML: {\n          __html: this.props.entityData.attributes.properties['notes']\n        },\n        className: \"notes\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 77\n        }\n      }) : null);\n    } else if (this.props.entityData.attributes['type-label'] === 'Reading') {\n      return /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }\n      }, this.props.entityData.attributes.properties.authors ? /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 76\n        }\n      }, this.props.entityData.attributes.properties.authors) : null, /*#__PURE__*/React.createElement(\"span\", {\n        dangerouslySetInnerHTML: {\n          __html: this.props.entityData.attributes.label\n        },\n        className: \"comma\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }\n      }), this.props.entityData.attributes.properties.publication ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"comma\",\n        dangerouslySetInnerHTML: {\n          __html: this.props.entityData.attributes.properties.publication\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 80\n        }\n      }) : null);\n    } else if (this.props.entityData.attributes['type-label'] === 'Translating') {\n      return /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        dangerouslySetInnerHTML: {\n          __html: this.props.entityData.attributes.label\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }\n      }), this.props.entityData.attributes.properties.author ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"comma\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 75\n        }\n      }, this.props.entityData.attributes.properties.author) : null, this.props.entityData.attributes.properties['translated-into'] ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"comma\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 87\n        }\n      }, this.props.entityData.attributes.properties['translated-into']) : null, this.props.entityData.attributes.properties.translator ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"translated-by\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 79\n        }\n      }, this.props.entityData.attributes.properties.translator) : null, this.props.entityData.attributes.properties['translated-title'] ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"comma\",\n        dangerouslySetInnerHTML: {\n          __html: this.props.entityData.attributes.properties['translated-title']\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 88\n        }\n      }) : null, this.props.entityData.attributes.properties['comments'] ? /*#__PURE__*/React.createElement(\"span\", {\n        dangerouslySetInnerHTML: {\n          __html: this.props.entityData.attributes.properties['comments']\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 80\n        }\n      }) : null);\n    } else if (this.props.entityData.attributes['type-label'] === 'Work Of Art') {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }\n      }, this.props.entityData.attributes.properties.artist ? /*#__PURE__*/React.createElement(\"span\", {\n        dangerouslySetInnerHTML: {\n          __html: this.props.entityData.attributes.properties.artist\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 79\n        }\n      }) : null, this.props.entityData.attributes.label ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"comma\",\n        dangerouslySetInnerHTML: {\n          __html: this.props.entityData.attributes.label\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 67\n        }\n      }) : null, this.props.entityData.attributes.properties['alternative-spellings'].length > 0 ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"spellings\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 108\n        }\n      }, this.props.entityData.attributes.properties['alternative-spellings'].map((entity, key) => /*#__PURE__*/React.createElement(\"span\", {\n        key: key,\n        dangerouslySetInnerHTML: {\n          __html: entity\n        },\n        className: \"list-span\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 227\n        }\n      })), \" \") : ', '), this.props.entityData.attributes.properties.description ? /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 80\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        dangerouslySetInnerHTML: {\n          __html: this.props.entityData.attributes.properties.description\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 84\n        }\n      })) : null, this.props.entityData.attributes.properties['owner-location-accession-number-contemporaneous'] ? /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 32\n        }\n      }, \"Contemporaneous:  \"), \" \", this.props.entityData.attributes.properties['owner-location-accession-number-contemporaneous'])) : null, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 28\n        }\n      }, \"Current: \"), \" \", this.props.entityData.attributes.properties['owner-location-accession-number-current'] ? /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 135\n        }\n      }, this.props.entityData.attributes.properties['owner-location-accession-number-current']) : 'Unknown')));\n    } else if (this.props.entityData.attributes['type-label'] === 'Writing') {\n      return /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        dangerouslySetInnerHTML: {\n          __html: this.props.entityData.attributes.label\n        },\n        className: \"label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"comma\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }\n      }, this.props.entityData.attributes.properties.date), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"comma\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }\n      }, this.props.entityData.attributes.properties.proposal), this.props.entityData.attributes.properties['notes'] ? /*#__PURE__*/React.createElement(\"span\", {\n        dangerouslySetInnerHTML: {\n          __html: this.props.entityData.attributes.properties['notes']\n        },\n        className: \"notes\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 77\n        }\n      }) : null);\n    } else {\n      return /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 17\n        }\n      }, \"error\");\n    }\n  }\n\n}\n\nexport default HeaderBuilder;","map":{"version":3,"sources":["/Users/mtherri/Documents/Code/beckett-letters/src/components/utilities/HeaderBuilder.js"],"names":["React","Component","HeaderBuilder","render","props","type","header","entityData","attributes","__html","label","properties","length","map","entity","key","composer","description","response","reason","director","theatre","city","date","author","translator","authors","publication","artist","proposal"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nclass HeaderBuilder extends Component {\n    render() {\n        if (this.props.type === 'string') {\n            return (\n                <h1>{this.props.header}</h1>\n            )\n        }\n        else if (this.props.entityData.attributes['type-label'] === 'Attendance') {\n            return (\n                <h1>\n                    <span dangerouslySetInnerHTML={{ __html: this.props.entityData.attributes.label }} className=\"label\" />\n                    {this.props.entityData.attributes.properties ?\n                        <span>\n                            {this.props.entityData.attributes.properties['alternative-spellings'].length > 0 ? <span className='spellings'>{this.props.entityData.attributes.properties['alternative-spellings'].map((entity, key) => <span key={key} dangerouslySetInnerHTML={{ __html: entity }} className=\"list-span\"></span>)} </span> : null}\n                            {this.props.entityData.attributes.properties && this.props.entityData.attributes.properties['place-date'] ? <span dangerouslySetInnerHTML={{ __html: this.props.entityData.attributes.properties['place-date'] }} className=\"comma\" /> : null}\n                            {this.props.entityData.attributes.properties && this.props.entityData.attributes.properties['attended-with'] ? <span dangerouslySetInnerHTML={{ __html: this.props.entityData.attributes.properties['attended-with'] }} className=\"attended-with\" /> : null}\n                            {this.props.entityData.attributes.properties && this.props.entityData.attributes.properties['performed-by'] ? <span className=\"performed-by\">{this.props.entityData.attributes.properties['performed-by'].map((entity, key) => <span className=\"list-span\" key={key} dangerouslySetInnerHTML={{ __html: entity }}></span>)}</span> : null}\n                        </span>\n                        : null}\n                </h1>\n            )\n        }\n        else if (this.props.entityData.attributes['type-label'] === 'Music') {\n            return (\n                <h1>\n                    <span>{this.props.entityData.attributes.properties !== null ? this.props.entityData.attributes.properties.composer : null}</span>\n                    <span dangerouslySetInnerHTML={{ __html: this.props.entityData.attributes.label }} className=\"comma\" />\n                    {this.props.entityData.attributes.properties['alternative-titles'].length > 0 ? <span className='spellings'>{this.props.entityData.attributes.properties['alternative-titles'].map((entity, key) => <span key={key} dangerouslySetInnerHTML={{ __html: entity }} className=\"list-span\"></span>)} </span> : ', '}\n                    {this.props.entityData.attributes.properties['description'] ? <span dangerouslySetInnerHTML={{ __html: this.props.entityData.attributes.properties['description'] }} className=\"notes\" /> : null}\n                    ]            {this.props.entityData.attributes.properties['performed-by'] ? <p><span dangerouslySetInnerHTML={{ __html: this.props.entityData.attributes.properties['performed-by'] }} className=\"new-line performed-by\" /></p> : null}\n                    {this.props.entityData.attributes.properties['notes'] ? <p><span dangerouslySetInnerHTML={{ __html: this.props.entityData.attributes.properties['notes'] }} className=\"notes\" /></p> : null}\n                </h1>\n            )\n        }\n        else if (this.props.entityData.attributes['type-label'] === 'Organization') {\n            return (\n                <h1>\n                    <span dangerouslySetInnerHTML={{ __html: this.props.entityData.attributes.label }} />\n                    {this.props.entityData.attributes.properties ?\n                        <span>\n                            {this.props.entityData.attributes.properties['alternate-spellings'].length > 0 ? <span className='spellings'>{this.props.entityData.attributes.properties['alternate-spellings'].map((entity, key) => <span key={key} dangerouslySetInnerHTML={{ __html: entity }} className=\"list-span\"></span>)} </span> : ''}\n                            {this.props.entityData.attributes.properties.description ? <span className=\"comma\" dangerouslySetInnerHTML={{ __html: this.props.entityData.attributes.properties.description }} /> : null}\n                        </span>\n                        : null}\n                </h1>\n            )\n        }\n        else if (this.props.entityData.attributes['type-label'] === 'Place') {\n            return (\n                <h1>\n                    <span dangerouslySetInnerHTML={{ __html: this.props.entityData.attributes.label }} />\n                    {this.props.entityData.attributes.properties ?\n                        <span>{this.props.entityData.attributes.properties['alternate-spellings'].length > 0 ? <span className='spellings'>{this.props.entityData.attributes.properties['alternate-spellings'].map((entity, key) => <span key={key} dangerouslySetInnerHTML={{ __html: entity }} className=\"list-span\"></span>)} </span> : null}\n                            {this.props.entityData.attributes.properties.description && this.props.entityData.attributes.properties.description !== \"\" ? <span className=\"comma\" dangerouslySetInnerHTML={{ __html: this.props.entityData.attributes.properties.description }} /> : null}\n                            {this.props.entityData.attributes.properties['links'].length > 0 ? <span className='comma'>{this.props.entityData.attributes.properties['links'].map((entity, key) => <a target=\"_new\" key={key} href={entity}>{entity}</a>)} </span> : null}\n                        </span>\n                        : null}\n                </h1>\n            )\n        }\n        else if (this.props.entityData.attributes['type-label'] === 'Production') {\n            return (\n                <h1>\n                    <span dangerouslySetInnerHTML={{ __html: this.props.entityData.attributes.label }} className=\"label\" />\n                    {this.props.entityData.attributes.properties['proposal'] && this.props.entityData.attributes.properties['response'] === 'no' ?\n                        <span>\n                            {this.props.entityData.attributes.properties['proposal'] ? <span dangerouslySetInnerHTML={{ __html: this.props.entityData.attributes.properties['proposal'] }} className=\"proposed-by\" /> : null}\n                            {this.props.entityData.attributes.properties.response ? <span className=\"comma\">{this.props.entityData.attributes.properties.response}</span> : null}\n                            {this.props.entityData.attributes.properties.reason ? <span className=\"comma\">{this.props.entityData.attributes.properties.reason}</span> : null}\n                            {this.props.entityData.attributes.properties['notes'] ? <span dangerouslySetInnerHTML={{ __html: this.props.entityData.attributes.properties['notes'] }} className=\"notes\" /> : null}\n                        </span>\n                        : <span>\n                            <span className=\"detailGroup\">\n                                {this.props.entityData.attributes.properties.director ? <span dangerouslySetInnerHTML={{ __html: this.props.entityData.attributes.properties.director }} className=\"comma director\" /> : null}\n                                {this.props.entityData.attributes.properties.theatre ? <span dangerouslySetInnerHTML={{ __html: this.props.entityData.attributes.properties.theatre }} className=\"comma\" /> : null}\n                                {this.props.entityData.attributes.properties.city ? <span dangerouslySetInnerHTML={{ __html: this.props.entityData.attributes.properties.city }} className=\"comma\" /> : null}\n                                {this.props.entityData.attributes.properties.date ? <span dangerouslySetInnerHTML={{ __html: this.props.entityData.attributes.properties.date }} className=\"comma\" /> : null}\n                            </span>\n                            {this.props.entityData.attributes.properties['cast'] ? <span dangerouslySetInnerHTML={{ __html: this.props.entityData.attributes.properties['cast'] }} className=\"cast\" /> : null}\n                            {this.props.entityData.attributes.properties['notes'] ? <span dangerouslySetInnerHTML={{ __html: this.props.entityData.attributes.properties['notes'] }} className=\"notes\" /> : null}\n                            <br />\n                            {this.props.entityData.attributes.properties['staging-beckett'] ? <a href={this.props.entityData.attributes.properties['staging-beckett']} className=\"btn btn-primary\" target=\"_new\">Staging Beckett</a> : null}\n                        </span>}\n                </h1>\n            )\n        }\n        else if (this.props.entityData.attributes['type-label'] === 'Public Event') {\n            return (\n                <h1>\n                    <span dangerouslySetInnerHTML={{ __html: this.props.entityData.attributes.label }} className=\"label\" />\n                    {this.props.entityData.attributes.properties.date ? <span dangerouslySetInnerHTML={{ __html: this.props.entityData.attributes.properties.date }} className=\"comma\" /> : null}\n                </h1>\n            )\n        }\n        else if (this.props.entityData.attributes['type-label'] === 'Publication') {\n            return (\n                <h1>\n                    <span dangerouslySetInnerHTML={{ __html: this.props.entityData.attributes.label }} />\n                    {this.props.entityData.attributes.properties.author ? <span className=\"comma\">{this.props.entityData.attributes.properties.author}</span> : null}\n                    {this.props.entityData.attributes.properties.translator ? <span className=\"comma\">{this.props.entityData.attributes.properties.translator}</span> : null}\n                    {this.props.entityData.attributes.properties['publication-information'] ? <span className=\"comma\" dangerouslySetInnerHTML={{ __html: this.props.entityData.attributes.properties['publication-information'] }} /> : null}\n                    {this.props.entityData.attributes.properties['notes'] ? <span dangerouslySetInnerHTML={{ __html: this.props.entityData.attributes.properties['notes'] }} className=\"notes\" /> : null}\n                </h1>\n            )\n        }\n        else if (this.props.entityData.attributes['type-label'] === 'Reading') {\n            return (\n                <h1>\n                    {this.props.entityData.attributes.properties.authors ? <span>{this.props.entityData.attributes.properties.authors}</span> : null}\n                    <span dangerouslySetInnerHTML={{ __html: this.props.entityData.attributes.label }} className=\"comma\" />\n                    {this.props.entityData.attributes.properties.publication ? <span className=\"comma\" dangerouslySetInnerHTML={{ __html: this.props.entityData.attributes.properties.publication }} /> : null}\n                </h1>\n            )\n        }\n        else if (this.props.entityData.attributes['type-label'] === 'Translating') {\n            return (\n                <h1>\n                    <span dangerouslySetInnerHTML={{ __html: this.props.entityData.attributes.label }} />\n                    {this.props.entityData.attributes.properties.author ? <span className=\"comma\">{this.props.entityData.attributes.properties.author}</span> : null}\n                    {this.props.entityData.attributes.properties['translated-into'] ? <span className=\"comma\">{this.props.entityData.attributes.properties['translated-into']}</span> : null}\n                    {this.props.entityData.attributes.properties.translator ? <span className=\"translated-by\">{this.props.entityData.attributes.properties.translator}</span> : null}\n                    {this.props.entityData.attributes.properties['translated-title'] ? <span className=\"comma\" dangerouslySetInnerHTML={{ __html: this.props.entityData.attributes.properties['translated-title'] }} /> : null}\n                    {this.props.entityData.attributes.properties['comments'] ? <span dangerouslySetInnerHTML={{ __html: this.props.entityData.attributes.properties['comments'] }} /> : null}\n                </h1>\n            )\n        }\n        else if (this.props.entityData.attributes['type-label'] === 'Work Of Art') {\n            return (\n                <div>\n                    <h1>\n                        {this.props.entityData.attributes.properties.artist ? <span dangerouslySetInnerHTML={{ __html: this.props.entityData.attributes.properties.artist }} /> : null}\n                        {this.props.entityData.attributes.label ? <span className=\"comma\" dangerouslySetInnerHTML={{ __html: this.props.entityData.attributes.label }} /> : null}\n                        {this.props.entityData.attributes.properties['alternative-spellings'].length > 0 ? <span className='spellings'>{this.props.entityData.attributes.properties['alternative-spellings'].map((entity, key) => <span key={key} dangerouslySetInnerHTML={{ __html: entity }} className=\"list-span\"></span>)} </span> : ', '}\n                    </h1>\n                    {this.props.entityData.attributes.properties.description ? <h3><span dangerouslySetInnerHTML={{ __html: this.props.entityData.attributes.properties.description }} /></h3> : null}\n                    {this.props.entityData.attributes.properties['owner-location-accession-number-contemporaneous'] ?\n                        <h3>\n                            <p><i>Contemporaneous:  </i> {this.props.entityData.attributes.properties['owner-location-accession-number-contemporaneous']}</p>\n                        </h3>\n                        : null}\n                    <h3>\n                        <p><i>Current: </i> {this.props.entityData.attributes.properties['owner-location-accession-number-current'] ? <span>{this.props.entityData.attributes.properties['owner-location-accession-number-current']}</span> : 'Unknown'}</p>\n                    </h3>\n                </div>\n            )\n        }\n        else if (this.props.entityData.attributes['type-label'] === 'Writing') {\n            return (\n                <h1>\n                    <span dangerouslySetInnerHTML={{ __html: this.props.entityData.attributes.label }} className=\"label\" />\n                    <span className=\"comma\">{this.props.entityData.attributes.properties.date}</span>\n                    <span className=\"comma\">{this.props.entityData.attributes.properties.proposal}</span>\n                    {this.props.entityData.attributes.properties['notes'] ? <span dangerouslySetInnerHTML={{ __html: this.props.entityData.attributes.properties['notes'] }} className=\"notes\" /> : null}\n                </h1>\n            )\n        }\n        else {\n            return (\n                <h1>error</h1>\n            )\n        }\n    }\n}\n\nexport default HeaderBuilder;"]},"metadata":{},"sourceType":"module"}