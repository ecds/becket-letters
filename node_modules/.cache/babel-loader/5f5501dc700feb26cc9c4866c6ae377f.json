{"ast":null,"code":"var _jsxFileName = \"/Users/sbarre5/Development/beckett-letters/src/components/timeline.js\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nimport { Col, Row } from 'react-bootstrap';\nexport class Timeline extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      timelineEntries: []\n    };\n  }\n\n  componentDidMount() {\n    axios.all([axios.get('beckett-timeline-year.json')]).then(axios.spread(getLetterData => {\n      console.log(getLetterData);\n      const timelineEntries = getLetterData.data.events;\n      console.log(timelineEntries);\n      this.setState({\n        timelineEntries\n      });\n      this.setState({\n        isLoaded: true\n      });\n    })).catch(err => {\n      this.setState({\n        isLoaded: false\n      });\n      this.setState({\n        error: err.message\n      });\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded; // if there is an error\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Error: \", error.message); // if not loaded show loading\n    } else if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Loading...\"); // return now that component has value\n    } else {\n      let allTimelineEntries = this.state.timelineEntries;\n      console.log(allTimelineEntries);\n      Object.keys(allTimelineEntries).forEach(function (key) {\n        console.log(allTimelineEntries[key]);\n      }); // allTimelineEntries.map(function(year) {\n      //     var timelineEvent = year.map(function(event) {\n      //         return (\n      //             <div>Event</div>\n      //         )\n      //     });\n      //     return (\n      //         {timelineEvent}\n      //     )\n      // })\n      // const entries = this.state.timelineEntries;\n      // let entryArr = [];\n      // Object.keys(entries).forEach(function (key) {\n      //     entryArr.push(entries[key])\n      // });\n      // console.log(entryArr)\n      // const timeline = Object.keys(entry).forEach(function (key) {\n      //     entries.push(entry[key])\n      //     entry[key].map(function(timelineData) {\n      //         console.log('w')\n      //         return <Row>{timelineData}</Row>\n      //     });\n      // old .map()\n      // const timeline = entry[key].map(function (timelineData) {\n      //     return <Row>{timelineData}</Row>\n      // const timelineBlock = entry[key].map(function(timelineData) {\n      //     return <Row>{timelineData}</Row>\n      // });\n      // console.log(entry[key])\n      // return \"<div>he</div>\"\n      // timelineBlock()\n      // })\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Timeline\")), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Accusantium mollitia, laborum blanditiis, natus rerum distinctio architecto rem atque, aut necessitatibus illum eum veritatis. Mollitia qui similique sit corrupti, atque amet?\")), React.createElement(Row, {\n        className: \"timelineTitleRow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Personal events are in \", React.createElement(\"span\", {\n        className: \"timelineHeaderBlue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"blue\"))), React.createElement(Col, {\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Global events are in \", React.createElement(\"span\", {\n        className: \"timelineHeaderYellow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"gold\")))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"hey\"));\n    }\n  }\n\n}\nexport default Timeline;","map":{"version":3,"sources":["/Users/sbarre5/Development/beckett-letters/src/components/timeline.js"],"names":["React","Component","axios","Col","Row","Timeline","constructor","props","context","state","error","isLoaded","timelineEntries","componentDidMount","all","get","then","spread","getLetterData","console","log","data","events","setState","catch","err","message","render","allTimelineEntries","Object","keys","forEach","key"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from \"axios\";\nimport { Col, Row } from 'react-bootstrap';\n\nexport class Timeline extends Component {\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            timelineEntries: []\n        };\n    }\n\n    componentDidMount() {\n        axios.all([\n            axios.get('beckett-timeline-year.json')])\n            .then(axios.spread((getLetterData) => {\n                console.log(getLetterData);\n                const timelineEntries = getLetterData.data.events;\n                console.log(timelineEntries);\n                this.setState({ timelineEntries });\n                this.setState({ isLoaded: true })\n            }))\n            .catch((err) => {\n                this.setState({ isLoaded: false });\n                this.setState({ error: err.message });\n            });\n    }\n\n    render() {\n        const { error, isLoaded } = this.state;\n        // if there is an error\n        if (error) {\n            return <div>Error: {error.message}</div>;\n            // if not loaded show loading\n        } else if (!isLoaded) {\n            return <div>Loading...</div>;\n            // return now that component has value\n        } else {\n            let allTimelineEntries = this.state.timelineEntries\n            console.log(allTimelineEntries)\n            Object.keys(allTimelineEntries).forEach(function (key) {\n                console.log(allTimelineEntries[key])\n            });\n            // allTimelineEntries.map(function(year) {\n            //     var timelineEvent = year.map(function(event) {\n            //         return (\n            //             <div>Event</div>\n            //         )\n            //     });\n            //     return (\n            //         {timelineEvent}\n            //     )\n            // })\n            // const entries = this.state.timelineEntries;\n            // let entryArr = [];\n            // Object.keys(entries).forEach(function (key) {\n            //     entryArr.push(entries[key])\n            // });\n            // console.log(entryArr)\n\n\n            // const timeline = Object.keys(entry).forEach(function (key) {\n            //     entries.push(entry[key])\n            //     entry[key].map(function(timelineData) {\n            //         console.log('w')\n            //         return <Row>{timelineData}</Row>\n            //     });\n                // old .map()\n                // const timeline = entry[key].map(function (timelineData) {\n                //     return <Row>{timelineData}</Row>\n                // const timelineBlock = entry[key].map(function(timelineData) {\n                //     return <Row>{timelineData}</Row>\n                // });\n                // console.log(entry[key])\n                // return \"<div>he</div>\"\n                // timelineBlock()\n            // })\n            return (\n                <div>\n                    <Row>\n                        <h1>Timeline</h1>\n                    </Row>\n                    <Row>\n                        <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Accusantium mollitia, laborum blanditiis, natus rerum distinctio architecto rem atque, aut necessitatibus illum eum veritatis. Mollitia qui similique sit corrupti, atque amet?</p>\n                    </Row>\n                    <Row className='timelineTitleRow'>\n                        <Col md={6} >\n                            <Row></Row>\n                            <h5>Personal events are in <span className=\"timelineHeaderBlue\">blue</span></h5>\n                        </Col>\n                        <Col md={6} >\n                            <h5>Global events are in <span className=\"timelineHeaderYellow\">gold</span></h5>\n                        </Col>\n                    </Row>\n\n                    <div>hey</div>\n                </div>\n            )\n        }\n    }\n}\n\nexport default Timeline;\n"]},"metadata":{},"sourceType":"module"}