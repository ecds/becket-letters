{"ast":null,"code":"var _jsxFileName = \"/Users/sbarre5/Development/beckett-letters/src/components/letters.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nexport class Letters extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      letters: []\n    };\n  }\n\n  componentDidMount() {\n    axios.all([axios.get('letters_json.json')]).then(axios.spread(getLetters => {\n      const letters = getLetters.data;\n      const epexData = getEpex.data.gmprop;\n\n      for (var i = 0; i < epexData.length; i++) {\n        processedEpex[i] = epexData[i].proposalid;\n      }\n\n      for (var n = 0; n < proposals.length; n++) {\n        var a = processedEpex.indexOf(proposals[n].id);\n\n        if (a > -1) {\n          proposals[n]['epex'] = epexData[a].proposaltype;\n        } else {\n          proposals[n]['epex'] = \"Unknown\";\n        }\n      }\n\n      this.setState({\n        epexData\n      });\n      this.setState({\n        proposals\n      });\n      this.setState({\n        successfulLoad: true\n      });\n      this.setState({\n        isLoading: false\n      });\n    })).catch(err => {\n      this.setState({\n        isLoading: false\n      });\n      this.setState({\n        successfulLoad: false\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Letters\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, this.state.letters));\n  }\n\n}\nexport default Letters;","map":{"version":3,"sources":["/Users/sbarre5/Development/beckett-letters/src/components/letters.js"],"names":["React","Component","axios","Letters","constructor","props","context","state","error","isLoaded","letters","componentDidMount","all","get","then","spread","getLetters","data","epexData","getEpex","gmprop","i","length","processedEpex","proposalid","n","proposals","a","indexOf","id","proposaltype","setState","successfulLoad","isLoading","catch","err","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,OAAN,SAAsBF,SAAtB,CAAgC;AACrCG,EAAAA,WAAW,CAACC,KAAD,EAAQC,OAAR,EAAiB;AAC1B,UAAMD,KAAN,EAAaC,OAAb;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,IADI;AAEXC,MAAAA,QAAQ,EAAE,KAFC;AAGXC,MAAAA,OAAO,EAAE;AAHE,KAAb;AAKD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBT,IAAAA,KAAK,CAACU,GAAN,CAAU,CACRV,KAAK,CAACW,GAAN,CAAU,mBAAV,CADQ,CAAV,EAECC,IAFD,CAEMZ,KAAK,CAACa,MAAN,CAAcC,UAAD,IAAgB;AACjC,YAAMN,OAAO,GAAGM,UAAU,CAACC,IAA3B;AACA,YAAMC,QAAQ,GAAGC,OAAO,CAACF,IAAR,CAAaG,MAA9B;;AAEA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,QAAQ,CAACI,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACxCE,QAAAA,aAAa,CAACF,CAAD,CAAb,GAAmBH,QAAQ,CAACG,CAAD,CAAR,CAAYG,UAA/B;AACD;;AAED,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACJ,MAA9B,EAAsCG,CAAC,EAAvC,EAA2C;AACzC,YAAIE,CAAC,GAAGJ,aAAa,CAACK,OAAd,CAAsBF,SAAS,CAACD,CAAD,CAAT,CAAaI,EAAnC,CAAR;;AACA,YAAIF,CAAC,GAAG,CAAC,CAAT,EAAY;AACVD,UAAAA,SAAS,CAACD,CAAD,CAAT,CAAa,MAAb,IAAuBP,QAAQ,CAACS,CAAD,CAAR,CAAYG,YAAnC;AACD,SAFD,MAGK;AACHJ,UAAAA,SAAS,CAACD,CAAD,CAAT,CAAa,MAAb,IAAuB,SAAvB;AACD;AAEF;;AAED,WAAKM,QAAL,CAAc;AAAEb,QAAAA;AAAF,OAAd;AACA,WAAKa,QAAL,CAAc;AAAEL,QAAAA;AAAF,OAAd;AACA,WAAKK,QAAL,CAAc;AAAEC,QAAAA,cAAc,EAAC;AAAjB,OAAd;AACA,WAAKD,QAAL,CAAc;AAAEE,QAAAA,SAAS,EAAC;AAAZ,OAAd;AACD,KAvBK,CAFN,EA0BCC,KA1BD,CA0BQC,GAAD,IAAS;AACd,WAAKJ,QAAL,CAAc;AAAEE,QAAAA,SAAS,EAAC;AAAZ,OAAd;AACA,WAAKF,QAAL,CAAc;AAAEC,QAAAA,cAAc,EAAC;AAAjB,OAAd;AACD,KA7BD;AA8BD;;AAEDI,EAAAA,MAAM,GAAG;AACL,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAK7B,KAAL,CAAWG,OAAf,CAFF,CADF;AAMD;;AAlDkC;AAqDvC,eAAeP,OAAf","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nexport class Letters extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      letters: []\n    };\n  }\n\n  componentDidMount() {\n    axios.all([\n      axios.get('letters_json.json')    ])\n    .then(axios.spread((getLetters) => {\n      const letters = getLetters.data;\n      const epexData = getEpex.data.gmprop;\n\n      for (var i = 0; i < epexData.length; i++) {\n        processedEpex[i] = epexData[i].proposalid\n      }\n\n      for (var n = 0; n < proposals.length; n++) {\n        var a = processedEpex.indexOf(proposals[n].id);\n        if (a > -1) {\n          proposals[n]['epex'] = epexData[a].proposaltype;\n        }\n        else {\n          proposals[n]['epex'] = \"Unknown\"\n        }\n        \n      }\n      \n      this.setState({ epexData });\n      this.setState({ proposals });\n      this.setState({ successfulLoad:true });\n      this.setState({ isLoading:false });\n    }))\n    .catch((err) => {\n      this.setState({ isLoading:false });\n      this.setState({ successfulLoad:false });\n    });\n  }\n\n  render() {\n      return (\n        <div>\n          <h1>Letters</h1>\n          <p>{this.state.letters}</p>\n        </div>\n      )\n    }\n  }\n\nexport default Letters;"]},"metadata":{},"sourceType":"module"}