{"ast":null,"code":"var _jsxFileName = \"/Users/mtherri/Documents/Code/beckett-letters/src/components/FilterSearch.js\";\nimport DocMetaBuilder from './utilities/DocMetaBuilder';\nimport LoadingSpinner from './utilities/LoadingSpinner';\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Container, Table, Form, Button, Col, Row } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Link } from 'react-router-dom';\nimport HeaderBuilder from './utilities/HeaderBuilder';\nimport DatePicker from 'react-date-picker';\n\nclass FilterSearch extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.intiateSearch = event => {\n      this.setState({\n        firstSearched: true\n      });\n      event.preventDefault();\n      const searchTerms = event.target.elements.query.value;\n      this.search(searchTerms);\n    };\n\n    this.filterRowsByType = stateType => {\n      this.setState({\n        [`${stateType}`]: !this.state[`${stateType}`]\n      });\n    };\n\n    this.flipAllFilters = () => {\n      let direction = !this.state.hideAll;\n      this.setState({\n        areAttendancesHidden: direction ? false : true,\n        areLettersHidden: direction ? false : true,\n        areMusicsHidden: direction ? false : true,\n        areOrganizationsHidden: direction ? false : true,\n        arePeopleHidden: direction ? false : true,\n        arePlacesHidden: direction ? false : true,\n        areProductionsHidden: direction ? false : true,\n        areEventsHidden: direction ? false : true,\n        arePublicationsHidden: direction ? false : true,\n        areReadingsHidden: direction ? false : true,\n        areTranslatingsHidden: direction ? false : true,\n        areWorkOfArtsHidden: direction ? false : true,\n        areWritingsHidden: direction ? false : true,\n        hideAll: direction ? true : false\n      });\n    };\n\n    this.state = {\n      error: null,\n      isLoaded: true,\n      data: [],\n      isSearching: false,\n      firstSearched: false,\n      entityType: '',\n      checkbox: true,\n      areAttendancesHidden: false,\n      areLettersHidden: false,\n      areMusicsHidden: false,\n      areOrganizationsHidden: false,\n      arePeopleHidden: false,\n      arePlacesHidden: false,\n      areProductionsHidden: false,\n      areEventsHidden: false,\n      arePublicationsHidden: false,\n      areReadingsHidden: false,\n      areTranslatingsHidden: false,\n      areWorkOfArtsHidden: false,\n      areWritingsHidden: false,\n      hideAll: true,\n      startDate: \"January 1, 1000\",\n      endDate: \"December 31, 2000\"\n    };\n  }\n\n  search(searchTerms) {\n    this.setState({\n      isLoaded: false\n    });\n    axios.all([axios.get('http://ot-api.ecdsdev.org/entities?search=' + searchTerms)]).then(axios.spread(getAllData => {\n      const data = getAllData.data.data;\n      this.setState({\n        data,\n        isLoaded: true\n      });\n    })).catch(err => {\n      this.setState({\n        isLoaded: false,\n        error: err.message\n      });\n    });\n  }\n\n  render() {\n    let attendancesCount = 0;\n    let lettersCount = 0;\n    let musicCount = 0;\n    let organizationsCount = 0;\n    let peopleCount = 0;\n    let placesCount = 0;\n    let productionsCount = 0;\n    let publicEventsCount = 0;\n    let publicationsCount = 0;\n    let readingsCount = 0;\n    let translationsCount = 0;\n    let worksOfArtCount = 0;\n    let writingsCount = 0;\n    var EntityList = this.state.data.map(entity => {\n      if (entity.attributes['type-label'] !== null) {\n        if (entity.attributes['type-label'] === 'Attendance') {\n          attendancesCount++;\n        }\n\n        if (entity.attributes['type-label'] === 'Music') {\n          musicCount++;\n        }\n\n        if (entity.attributes['type-label'] === 'Organization') {\n          organizationsCount++;\n        }\n\n        if (entity.attributes['type-label'] === 'Person') {\n          peopleCount++;\n        }\n\n        if (entity.attributes['type-label'] === 'Place') {\n          placesCount++;\n        }\n\n        if (entity.attributes['type-label'] === 'Production') {\n          productionsCount++;\n        }\n\n        if (entity.attributes['type-label'] === 'Public Event') {\n          publicEventsCount++;\n        }\n\n        if (entity.attributes['type-label'] === 'Publication') {\n          publicationsCount++;\n        }\n\n        if (entity.attributes['type-label'] === 'Reading') {\n          readingsCount++;\n        }\n\n        if (entity.attributes['type-label'] === 'Translating') {\n          translationsCount++;\n        }\n\n        if (entity.attributes['type-label'] === 'Work Of Art') {\n          musicCount++;\n        }\n\n        if (entity.attributes['type-label'] === 'Writing') {\n          writingsCount++;\n        }\n\n        return /*#__PURE__*/React.createElement(React.Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 24\n          }\n        }, entity.attributes['type-label'] === 'Person' ? this.state.arePeopleHidden ? null : /*#__PURE__*/React.createElement(\"tr\", {\n          key: entity.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 61\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          to: {\n            pathname: `/people/${entity.id}`,\n            state: {\n              id: entity.id,\n              name: entity.attributes.label\n            }\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          dangerouslySetInnerHTML: {\n            __html: entity.attributes.label\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 37\n          }\n        }), entity.attributes.properties && entity.attributes.properties['life-dates'] ? ' (' + entity.attributes.properties['life-dates'] + ')' : null)), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 29\n          }\n        }, \"Person\")) : entity.attributes['type-label'] === 'Public Event' ? this.state.areEventsHidden ? null : /*#__PURE__*/React.createElement(\"tr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 65\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          to: {\n            pathname: `/public-events/${entity.id}`,\n            state: {\n              id: entity.id\n            }\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 37\n          }\n        }, entity.attributes.label ? /*#__PURE__*/React.createElement(\"span\", {\n          dangerouslySetInnerHTML: {\n            __html: entity.attributes.label\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 68\n          }\n        }) : /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 141\n          }\n        }, entity.id))), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 33\n          }\n        }, \"Public Event\")) : entity.attributes['type-label'] === \"Work Of Art\" ? this.state.areWorkOfArtsHidden ? null : /*#__PURE__*/React.createElement(\"tr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 73\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          to: {\n            pathname: `/work-of-arts/${entity.id}`,\n            state: {\n              id: entity.id\n            }\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 41\n          }\n        }, entity.attributes.label ? /*#__PURE__*/React.createElement(\"span\", {\n          dangerouslySetInnerHTML: {\n            __html: entity.attributes.label\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 72\n          }\n        }) : /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 145\n          }\n        }, entity.id))), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 37\n          }\n        }, \"Work of Art\")) : this.state[`are${entity.attributes[\"type-label\"]}sHidden`] ? null : /*#__PURE__*/React.createElement(\"tr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 101\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 37\n          }\n        }, entity.attributes['type-label'] === 'Translating' ? /*#__PURE__*/React.createElement(Link, {\n          to: {\n            pathname: `/translations/${entity.id}`,\n            state: {\n              id: entity.id\n            }\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 94\n          }\n        }, entity.attributes.label ? /*#__PURE__*/React.createElement(\"span\", {\n          dangerouslySetInnerHTML: {\n            __html: entity.attributes.label\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 72\n          }\n        }) : /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 145\n          }\n        }, entity.id)) : /*#__PURE__*/React.createElement(Link, {\n          to: {\n            pathname: `/${entity.attributes[\"type-label\"] + \"s\"}/${entity.id}`,\n            state: {\n              id: entity.id\n            }\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 45\n          }\n        }, entity.attributes.label ? /*#__PURE__*/React.createElement(\"span\", {\n          dangerouslySetInnerHTML: {\n            __html: entity.attributes.label\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 76\n          }\n        }) : /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 149\n          }\n        }, entity.id))), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 37\n          }\n        }, entity.attributes['type-label'])), entity.attributes['public-letters-hash'].map(letter => {\n          if (letter === null) {\n            return null;\n          } else {\n            lettersCount++;\n\n            if (this.state.areLettersHidden === true) {\n              return null;\n            } else {\n              let selectedStartDate = new Date(this.state.startDate + \"Z\");\n              let selectedEndDate = new Date(this.state.endDate + \"Z\");\n              let currentDate = new Date(letter.date.substring(letter.date.length - 4) + \"-\" + letter.date.substring(3, letter.date.length - 5) + \"-\" + parseInt(letter.date.substring(0, 2) + \"Z\"));\n\n              if (selectedStartDate <= currentDate && currentDate <= selectedEndDate) {\n                return /*#__PURE__*/React.createElement(\"tr\", {\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 234,\n                    columnNumber: 44\n                  }\n                }, /*#__PURE__*/React.createElement(\"td\", {\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 41\n                  }\n                }, /*#__PURE__*/React.createElement(Link, {\n                  to: {\n                    pathname: `/letters/letterdetails/${letter.id}`,\n                    state: {\n                      id: letter.recipients[0].id,\n                      name: letter.recipients[0].name\n                    }\n                  },\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 236,\n                    columnNumber: 45\n                  }\n                }, /*#__PURE__*/React.createElement(\"span\", {\n                  dangerouslySetInnerHTML: {\n                    __html: \"Letter to \" + letter.recipients[0].name + \" on \" + letter.date\n                  },\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 244,\n                    columnNumber: 49\n                  }\n                }))), /*#__PURE__*/React.createElement(\"td\", {\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 247,\n                    columnNumber: 41\n                  }\n                }, \"Letter\"));\n              } else return null;\n            }\n          }\n        }));\n      } else {\n        return null;\n      }\n    });\n    const metaBuild = {\n      title: 'Search and Filter',\n      description: `Search and filter entities and letters`\n    };\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(DocMetaBuilder, Object.assign({}, metaBuild, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(HeaderBuilder, {\n      header: \"Filter Search\",\n      type: \"string\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      className: \"no-gutters pt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      className: \"no-gutters\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      className: \"tab-search\",\n      onSubmit: this.intiateSearch,\n      ref: \"form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group-prepend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      \"aria-label\": \"submit button\",\n      variant: \"primary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: \"search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 49\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Control, {\n      id: \"query\",\n      name: \"query\",\n      type: \"query\",\n      \"aria-label\": \"query\",\n      placeholder: this.props.placeholder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 41\n      }\n    }))))), /*#__PURE__*/React.createElement(Col, {\n      md: 1,\n      className: \"no-gutters\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 25\n      }\n    }, this.state.isSearching ? /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.resetPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"secondary\",\n      type: \"submit\",\n      className: \"full-width\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 65\n      }\n    }, \"Clear\")) : null)), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      className: \"filterCol\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"filterBox filterByType\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 33\n      }\n    }, \"Refine by Type\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      className: \"checkbox\",\n      onChange: e => this.filterRowsByType('areAttendancesHidden', e),\n      checked: !this.state.areAttendancesHidden,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 45\n      }\n    }), \"Attendances \", attendancesCount !== 0 ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"entityCountDisplay\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 83\n      }\n    }, attendancesCount) : null)), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      className: \"checkbox\",\n      onChange: e => this.filterRowsByType('areLettersHidden', e),\n      checked: !this.state.areLettersHidden,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 45\n      }\n    }), \"Letters \", lettersCount !== 0 ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"entityCountDisplay\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 75\n      }\n    }, lettersCount) : null)), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      className: \"checkbox\",\n      onChange: e => this.filterRowsByType('areMusicsHidden', e),\n      checked: !this.state.areMusicsHidden,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 45\n      }\n    }), \"Music \", musicCount !== 0 ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"entityCountDisplay\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 71\n      }\n    }, musicCount) : null)), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      className: \"checkbox\",\n      onChange: e => this.filterRowsByType('areOrganizationsHidden', e),\n      checked: !this.state.areOrganizationsHidden,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 45\n      }\n    }), \"Organizations \", organizationsCount !== 0 ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"entityCountDisplay\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 87\n      }\n    }, organizationsCount) : null)), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      className: \"checkbox\",\n      onChange: e => this.filterRowsByType('arePeopleHidden', e),\n      checked: !this.state.arePeopleHidden,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 45\n      }\n    }), \"People \", peopleCount !== 0 ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"entityCountDisplay\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 73\n      }\n    }, peopleCount) : null)), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      className: \"checkbox\",\n      onChange: e => this.filterRowsByType('arePlacesHidden', e),\n      checked: !this.state.arePlacesHidden,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 45\n      }\n    }), \"Places \", placesCount !== 0 ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"entityCountDisplay\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 73\n      }\n    }, placesCount) : null)), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      className: \"checkbox\",\n      onChange: e => this.filterRowsByType('areProductionsHidden', e),\n      checked: !this.state.areProductionsHidden,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 45\n      }\n    }), \"Productions \", productionsCount !== 0 ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"entityCountDisplay\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 83\n      }\n    }, productionsCount) : null)), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      className: \"checkbox\",\n      onChange: e => this.filterRowsByType('areEventsHidden', e),\n      checked: !this.state.areEventsHidden,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 45\n      }\n    }), \"Public Events \", publicEventsCount !== 0 ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"entityCountDisplay\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 86\n      }\n    }, publicEventsCount) : null)), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      className: \"checkbox\",\n      onChange: e => this.filterRowsByType('arePublicationsHidden', e),\n      checked: !this.state.arePublicationsHidden,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 45\n      }\n    }), \"Publications \", publicationsCount !== 0 ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"entityCountDisplay\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 85\n      }\n    }, publicationsCount) : null)), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      className: \"checkbox\",\n      onChange: e => this.filterRowsByType('areReadingsHidden', e),\n      checked: !this.state.areReadingsHidden,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 45\n      }\n    }), \"Readings \", readingsCount !== 0 ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"entityCountDisplay\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 77\n      }\n    }, readingsCount) : null)), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      className: \"checkbox\",\n      onChange: e => this.filterRowsByType('areTranslatingsHidden', e),\n      checked: !this.state.areTranslatingsHidden,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 45\n      }\n    }), \"Translations \", translationsCount !== 0 ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"entityCountDisplay\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 85\n      }\n    }, translationsCount) : null)), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      className: \"checkbox\",\n      onChange: e => this.filterRowsByType('areWorkOfArtsHidden', e),\n      checked: !this.state.areWorkOfArtsHidden,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 45\n      }\n    }), \"Works of Art \", worksOfArtCount !== 0 ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"entityCountDisplay\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 83\n      }\n    }, worksOfArtCount) : null)), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      className: \"checkbox\",\n      onChange: e => this.filterRowsByType('areWritingsHidden', e),\n      checked: !this.state.areWritingsHidden,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 45\n      }\n    }), \"Writings \", writingsCount !== 0 ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"entityCountDisplay\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 77\n      }\n    }, writingsCount) : null)), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"button btn btn-primary\",\n      onClick: e => this.flipAllFilters(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 41\n      }\n    }, this.state.hideAll ? \"Hide All\" : \"Show All\")))), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"filterBox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 33\n      }\n    }, \"Refine by Date\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 41\n      }\n    }, \"Start\"), /*#__PURE__*/React.createElement(DatePicker, {\n      format: \"dd/MMM/y\",\n      disableCalendar: true,\n      minDate: new Date('January 1957'),\n      maxDate: new Date('December 1969'),\n      value: this.state.date,\n      onChange: date => this.setState({\n        startDate: date\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 41\n      }\n    }, \"End\"), /*#__PURE__*/React.createElement(DatePicker, {\n      format: \"dd/MMM/y\",\n      disableCalendar: true,\n      minDate: new Date('January 1957'),\n      maxDate: new Date('December 1969'),\n      value: this.state.date,\n      onChange: date => this.setState({\n        endDate: date\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 41\n      }\n    }))))), !this.state.firstSearched ? null : /*#__PURE__*/React.createElement(Col, {\n      md: 9,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 61\n      }\n    }, !this.state.isLoaded ? /*#__PURE__*/React.createElement(LoadingSpinner, {\n      className: \"centerIcon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 33\n      }\n    }) : /*#__PURE__*/React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      className: \"browse-by\",\n      id: \"browse-by\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 45\n      }\n    }, \"Result\"), /*#__PURE__*/React.createElement(\"th\", {\n      id: \"typeColumn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 45\n      }\n    }, \"Type\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 37\n      }\n    }, EntityList))))));\n  }\n\n}\n\nexport default FilterSearch;","map":{"version":3,"sources":["/Users/mtherri/Documents/Code/beckett-letters/src/components/FilterSearch.js"],"names":["DocMetaBuilder","LoadingSpinner","React","Component","axios","Container","Table","Form","Button","Col","Row","FontAwesomeIcon","Link","HeaderBuilder","DatePicker","FilterSearch","constructor","props","context","intiateSearch","event","setState","firstSearched","preventDefault","searchTerms","target","elements","query","value","search","filterRowsByType","stateType","state","flipAllFilters","direction","hideAll","areAttendancesHidden","areLettersHidden","areMusicsHidden","areOrganizationsHidden","arePeopleHidden","arePlacesHidden","areProductionsHidden","areEventsHidden","arePublicationsHidden","areReadingsHidden","areTranslatingsHidden","areWorkOfArtsHidden","areWritingsHidden","error","isLoaded","data","isSearching","entityType","checkbox","startDate","endDate","all","get","then","spread","getAllData","catch","err","message","render","attendancesCount","lettersCount","musicCount","organizationsCount","peopleCount","placesCount","productionsCount","publicEventsCount","publicationsCount","readingsCount","translationsCount","worksOfArtCount","writingsCount","EntityList","map","entity","attributes","id","pathname","name","label","__html","properties","letter","selectedStartDate","Date","selectedEndDate","currentDate","date","substring","length","parseInt","recipients","metaBuild","title","description","placeholder","resetPage","e"],"mappings":"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","sourcesContent":["import DocMetaBuilder from './utilities/DocMetaBuilder';\nimport LoadingSpinner from './utilities/LoadingSpinner';\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Container, Table, Form, Button, Col, Row } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Link } from 'react-router-dom';\nimport HeaderBuilder from './utilities/HeaderBuilder';\nimport DatePicker from 'react-date-picker';\n\nclass FilterSearch extends Component {\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            error: null,\n            isLoaded: true,\n            data: [],\n            isSearching: false,\n            firstSearched: false,\n            entityType: '',\n            checkbox: true,\n            areAttendancesHidden: false,\n            areLettersHidden: false,\n            areMusicsHidden: false,\n            areOrganizationsHidden: false,\n            arePeopleHidden: false,\n            arePlacesHidden: false,\n            areProductionsHidden: false,\n            areEventsHidden: false,\n            arePublicationsHidden: false,\n            areReadingsHidden: false,\n            areTranslatingsHidden: false,\n            areWorkOfArtsHidden: false,\n            areWritingsHidden: false,\n            hideAll: true,\n            startDate: \"January 1, 1000\",\n            endDate: \"December 31, 2000\",\n        };\n    }\n\n    search(searchTerms) {\n        this.setState({ isLoaded: false })\n        axios.all([\n            axios.get('http://ot-api.ecdsdev.org/entities?search=' + searchTerms)\n        ])\n            .then(axios.spread((getAllData) => {\n                const data = getAllData.data.data;\n                this.setState({ data, isLoaded: true });\n            }))\n            .catch((err) => {\n                this.setState({ isLoaded: false, error: err.message });\n            });\n    }\n\n    intiateSearch = (event) => {\n        this.setState({ firstSearched: true })\n        event.preventDefault()\n        const searchTerms = event.target.elements.query.value;\n        this.search(searchTerms)\n    }\n\n    filterRowsByType = (stateType) => {\n        this.setState({\n            [`${stateType}`]: !this.state[`${stateType}`],\n        })\n    }\n\n    flipAllFilters = () => {\n        let direction = !this.state.hideAll;\n        this.setState({\n            areAttendancesHidden: direction ? false : true,\n            areLettersHidden: direction ? false : true,\n            areMusicsHidden: direction ? false : true,\n            areOrganizationsHidden: direction ? false : true,\n            arePeopleHidden: direction ? false : true,\n            arePlacesHidden: direction ? false : true,\n            areProductionsHidden: direction ? false : true,\n            areEventsHidden: direction ? false : true,\n            arePublicationsHidden: direction ? false : true,\n            areReadingsHidden: direction ? false : true,\n            areTranslatingsHidden: direction ? false : true,\n            areWorkOfArtsHidden: direction ? false : true,\n            areWritingsHidden: direction ? false : true,\n            hideAll: direction ? true : false,\n        }\n        )\n    }\n\n    render() {\n        let attendancesCount = 0\n        let lettersCount = 0\n        let musicCount = 0\n        let organizationsCount = 0\n        let peopleCount = 0\n        let placesCount = 0\n        let productionsCount = 0\n        let publicEventsCount = 0\n        let publicationsCount = 0\n        let readingsCount = 0\n        let translationsCount = 0\n        let worksOfArtCount = 0\n        let writingsCount = 0\n        var EntityList = this.state.data.map((entity) => {\n            if (entity.attributes['type-label'] !== null) {\n                if (entity.attributes['type-label'] === 'Attendance') {\n                    attendancesCount++\n                }\n                if (entity.attributes['type-label'] === 'Music') {\n                    musicCount++\n                }\n                if (entity.attributes['type-label'] === 'Organization') {\n                    organizationsCount++\n                }\n                if (entity.attributes['type-label'] === 'Person') {\n                    peopleCount++\n                }\n                if (entity.attributes['type-label'] === 'Place') {\n                    placesCount++\n                }\n                if (entity.attributes['type-label'] === 'Production') {\n                    productionsCount++\n                }\n                if (entity.attributes['type-label'] === 'Public Event') {\n                    publicEventsCount++\n                }\n                if (entity.attributes['type-label'] === 'Publication') {\n                    publicationsCount++\n                }\n                if (entity.attributes['type-label'] === 'Reading') {\n                    readingsCount++\n                }\n                if (entity.attributes['type-label'] === 'Translating') {\n                    translationsCount++\n                }\n                if (entity.attributes['type-label'] === 'Work Of Art') {\n                    musicCount++\n                }\n                if (entity.attributes['type-label'] === 'Writing') {\n                    writingsCount++\n                }\n                return <React.Fragment>\n                    {/* create row for each search result */}\n                    {entity.attributes['type-label'] === 'Person' ?\n                        this.state.arePeopleHidden ? null : <tr key={entity.id} >\n                            <td>\n                                <Link\n                                    to={{\n                                        pathname: `/people/${entity.id}`,\n                                        state: {\n                                            id: entity.id,\n                                            name: entity.attributes.label\n                                        }\n                                    }}>\n                                    <span dangerouslySetInnerHTML={{ __html: entity.attributes.label }} />\n                                    {entity.attributes.properties && entity.attributes.properties['life-dates'] ? ' (' + entity.attributes.properties['life-dates'] + ')' : null}\n                                </Link>\n                            </td>\n                            <td>Person</td>\n                        </tr>\n                        :\n                        entity.attributes['type-label'] === 'Public Event' ?\n                            this.state.areEventsHidden ? null : <tr>\n                                <td>\n                                    <Link\n                                        to={{\n                                            pathname: `/public-events/${entity.id}`,\n                                            state: {\n                                                id: entity.id\n                                            }\n                                        }}>\n                                        {entity.attributes.label ? <span dangerouslySetInnerHTML={{ __html: entity.attributes.label }} /> : <span>{entity.id}</span>}\n                                    </Link>\n                                </td>\n                                <td>Public Event</td>\n                            </tr>\n                            :\n                            entity.attributes['type-label'] === \"Work Of Art\" ?\n                                this.state.areWorkOfArtsHidden ? null : <tr>\n                                    <td>\n                                        <Link\n                                            to={{\n                                                pathname: `/work-of-arts/${entity.id}`,\n                                                state: {\n                                                    id: entity.id\n                                                }\n                                            }}>\n                                            {entity.attributes.label ? <span dangerouslySetInnerHTML={{ __html: entity.attributes.label }} /> : <span>{entity.id}</span>}\n                                        </Link>\n                                    </td>\n                                    <td>Work of Art</td>\n                                </tr>\n                                :\n                                this.state[`are${entity.attributes[\"type-label\"]}sHidden`] ? null : <tr>\n                                    <td>\n                                        {entity.attributes['type-label'] === 'Translating' ? <Link\n                                            to={{\n                                                pathname: `/translations/${entity.id}`,\n                                                state: {\n                                                    id: entity.id\n                                                }\n                                            }}>\n                                            {entity.attributes.label ? <span dangerouslySetInnerHTML={{ __html: entity.attributes.label }} /> : <span>{entity.id}</span>}\n                                        </Link>\n                                            :\n                                            <Link\n                                                to={{\n                                                    pathname: `/${entity.attributes[\"type-label\"] + \"s\"}/${entity.id}`,\n                                                    state: {\n                                                        id: entity.id\n                                                    }\n                                                }}>\n                                                {entity.attributes.label ? <span dangerouslySetInnerHTML={{ __html: entity.attributes.label }} /> : <span>{entity.id}</span>}\n                                            </Link>\n                                        }\n                                    </td>\n                                    <td>{entity.attributes['type-label']}</td>\n                                </tr>\n                    }\n                    {/* create row for each public letter of search result */}\n                    {entity.attributes['public-letters-hash'].map((letter) => {\n                        if (letter === null) {\n                            return null\n                        }\n                        else {\n                            lettersCount++\n                            if (this.state.areLettersHidden === true) {\n                                return null\n                            }\n                            else {\n                                let selectedStartDate = new Date(this.state.startDate + \"Z\")\n                                let selectedEndDate = new Date(this.state.endDate + \"Z\")\n                                let currentDate = new Date(letter.date.substring(letter.date.length - 4) + \"-\" + letter.date.substring(3, letter.date.length - 5) + \"-\" + parseInt(letter.date.substring(0, 2) + \"Z\"))\n                                if (selectedStartDate <= currentDate && currentDate <= selectedEndDate) {\n                                    return <tr>\n                                        <td>\n                                            <Link\n                                                to={{\n                                                    pathname: `/letters/letterdetails/${letter.id}`,\n                                                    state: {\n                                                        id: letter.recipients[0].id,\n                                                        name: letter.recipients[0].name\n                                                    }\n                                                }}>\n                                                <span dangerouslySetInnerHTML={{ __html: \"Letter to \" + letter.recipients[0].name + \" on \" + letter.date }} />\n                                            </Link>\n                                        </td>\n                                        <td>\n                                            Letter\n                                        </td>\n                                    </tr>\n                                }\n                                else return null\n                            }\n                        }\n                    }\n                    )\n                    }\n                </React.Fragment >\n            }\n\n            else {\n                return null\n            }\n\n        }\n        );\n\n        const metaBuild = {\n            title: 'Search and Filter',\n            description: `Search and filter entities and letters`,\n        };\n\n        return (\n            <Container >\n                <DocMetaBuilder {...metaBuild} />\n                <div className='pt-3'>\n                    <HeaderBuilder header='Filter Search' type='string' />\n                    <Row className=\"no-gutters pt-3\">\n                        <Col md={12} className=\"no-gutters\">\n                            {/* work on search function */}\n                            <Form className=\"tab-search\" onSubmit={this.intiateSearch} ref=\"form\">\n                                <Form.Group>\n                                    <div className=\"input-group mb-3\">\n                                        <div className=\"input-group-prepend\">\n                                            <Button aria-label='submit button' variant=\"primary\" type=\"submit\">\n                                                <FontAwesomeIcon icon=\"search\" />\n                                            </Button>\n                                        </div>\n                                        <Form.Control id=\"query\" name=\"query\" type=\"query\" aria-label='query' placeholder={this.props.placeholder} />\n                                    </div>\n                                </Form.Group>\n                            </Form>\n                        </Col>\n                        <Col md={1} className=\"no-gutters\">\n                            {this.state.isSearching ?\n                                <Form onSubmit={this.resetPage}><Button variant=\"secondary\" type=\"submit\" className=\"full-width\">Clear</Button></Form>\n                                : null\n                            }\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col md={3} className='filterCol'>\n                            <form className='filterBox filterByType' >\n                                <h2>Refine by Type</h2>\n                                <ul>\n                                    <li>\n                                        <label>\n                                            <input\n                                                type=\"checkbox\"\n                                                className=\"checkbox\"\n                                                onChange={(e) => this.filterRowsByType('areAttendancesHidden', e)}\n                                                checked={!this.state.areAttendancesHidden}\n                                            />\n                                            Attendances {attendancesCount !== 0 ? <span className='entityCountDisplay'>{attendancesCount}</span> : null}\n                                        </label>\n                                    </li>\n                                    <li>\n                                        <label>\n                                            <input\n                                                type=\"checkbox\"\n                                                className=\"checkbox\"\n                                                onChange={(e) => this.filterRowsByType('areLettersHidden', e)}\n                                                checked={!this.state.areLettersHidden}\n                                            />\n                                            Letters {lettersCount !== 0 ? <span className='entityCountDisplay'>{lettersCount}</span> : null}\n                                        </label>\n                                    </li>\n                                    <li>\n                                        <label>\n                                            <input\n                                                type=\"checkbox\"\n                                                className=\"checkbox\"\n                                                onChange={(e) => this.filterRowsByType('areMusicsHidden', e)}\n                                                checked={!this.state.areMusicsHidden}\n\n                                            />\n                                            Music {musicCount !== 0 ? <span className='entityCountDisplay'>{musicCount}</span> : null}\n                                        </label>\n                                    </li>\n                                    <li>\n                                        <label>\n                                            <input\n                                                type=\"checkbox\"\n                                                className=\"checkbox\"\n                                                onChange={(e) => this.filterRowsByType('areOrganizationsHidden', e)}\n                                                checked={!this.state.areOrganizationsHidden}\n\n                                            />\n                                            Organizations {organizationsCount !== 0 ? <span className='entityCountDisplay'>{organizationsCount}</span> : null}\n                                        </label>\n                                    </li>\n                                    <li>\n                                        <label>\n                                            <input\n                                                type=\"checkbox\"\n                                                className=\"checkbox\"\n                                                onChange={(e) => this.filterRowsByType('arePeopleHidden', e)}\n                                                checked={!this.state.arePeopleHidden}\n\n                                            />\n                                            People {peopleCount !== 0 ? <span className='entityCountDisplay'>{peopleCount}</span> : null}\n                                        </label>\n                                    </li>\n                                    <li>\n                                        <label>\n                                            <input\n                                                type=\"checkbox\"\n                                                className=\"checkbox\"\n                                                onChange={(e) => this.filterRowsByType('arePlacesHidden', e)}\n                                                checked={!this.state.arePlacesHidden}\n\n                                            />\n                                            Places {placesCount !== 0 ? <span className='entityCountDisplay'>{placesCount}</span> : null}\n                                        </label>\n                                    </li>\n                                    <li>\n                                        <label>\n                                            <input\n                                                type=\"checkbox\"\n                                                className=\"checkbox\"\n                                                onChange={(e) => this.filterRowsByType('areProductionsHidden', e)}\n                                                checked={!this.state.areProductionsHidden}\n\n                                            />\n                                            Productions {productionsCount !== 0 ? <span className='entityCountDisplay'>{productionsCount}</span> : null}\n                                        </label>\n                                    </li>\n                                    <li>\n                                        <label>\n                                            <input\n                                                type=\"checkbox\"\n                                                className=\"checkbox\"\n                                                onChange={(e) => this.filterRowsByType('areEventsHidden', e)}\n                                                checked={!this.state.areEventsHidden}\n\n                                            />\n                                            Public Events {publicEventsCount !== 0 ? <span className='entityCountDisplay'>{publicEventsCount}</span> : null}\n                                        </label>\n                                    </li>\n                                    <li>\n                                        <label>\n                                            <input\n                                                type=\"checkbox\"\n                                                className=\"checkbox\"\n                                                onChange={(e) => this.filterRowsByType('arePublicationsHidden', e)}\n                                                checked={!this.state.arePublicationsHidden}\n\n                                            />\n                                            Publications {publicationsCount !== 0 ? <span className='entityCountDisplay'>{publicationsCount}</span> : null}\n                                        </label>\n                                    </li>\n                                    <li>\n                                        <label>\n                                            <input\n                                                type=\"checkbox\"\n                                                className=\"checkbox\"\n                                                onChange={(e) => this.filterRowsByType('areReadingsHidden', e)}\n                                                checked={!this.state.areReadingsHidden}\n\n                                            />\n                                            Readings {readingsCount !== 0 ? <span className='entityCountDisplay'>{readingsCount}</span> : null}\n                                        </label>\n                                    </li>\n                                    <li>\n                                        <label>\n                                            <input\n                                                type=\"checkbox\"\n                                                className=\"checkbox\"\n                                                onChange={(e) => this.filterRowsByType('areTranslatingsHidden', e)}\n                                                checked={!this.state.areTranslatingsHidden}\n\n                                            />\n                                            Translations {translationsCount !== 0 ? <span className='entityCountDisplay'>{translationsCount}</span> : null}\n                                        </label>\n                                    </li>\n                                    <li>\n                                        <label>\n                                            <input\n                                                type=\"checkbox\"\n                                                className=\"checkbox\"\n                                                onChange={(e) => this.filterRowsByType('areWorkOfArtsHidden', e)}\n                                                checked={!this.state.areWorkOfArtsHidden}\n\n                                            />\n                                            Works of Art {worksOfArtCount !== 0 ? <span className='entityCountDisplay'>{worksOfArtCount}</span> : null}\n                                        </label>\n                                    </li>\n                                    <li>\n                                        <label>\n                                            <input\n                                                type=\"checkbox\"\n                                                className=\"checkbox\"\n                                                onChange={(e) => this.filterRowsByType('areWritingsHidden', e)}\n                                                checked={!this.state.areWritingsHidden}\n\n                                            />\n                                            Writings {writingsCount !== 0 ? <span className='entityCountDisplay'>{writingsCount}</span> : null}\n                                        </label>\n                                    </li>\n                                    <li>\n                                        <button type=\"button\" className=\"button btn btn-primary\" onClick={(e) => this.flipAllFilters(e)}>{this.state.hideAll ? \"Hide All\" : \"Show All\"}</button>\n                                    </li>\n                                </ul>\n                            </form>\n                            <form className='filterBox'>\n                                <h2>Refine by Date</h2>\n                                <ul>\n                                    <li>\n                                        <h3>Start</h3>\n                                        <DatePicker format='dd/MMM/y' disableCalendar={true} minDate={new Date('January 1957')} maxDate={new Date('December 1969')} value={this.state.date} onChange={(date) => this.setState({ startDate: date })} />\n                                    </li>\n                                    <li>\n                                        <h3>End</h3>\n                                        <DatePicker format='dd/MMM/y' disableCalendar={true} minDate={new Date('January 1957')} maxDate={new Date('December 1969')} value={this.state.date} onChange={(date) => this.setState({ endDate: date })} />\n                                    </li>\n                                </ul>\n                            </form>\n                        </Col>\n                        {!this.state.firstSearched ? null : <Col md={9}>\n                            {!this.state.isLoaded ?\n                                <LoadingSpinner className='centerIcon' />\n                                :\n                                <Table striped bordered className=\"browse-by\" id='browse-by'>\n                                    <thead>\n                                        <tr>\n                                            <th>Result</th>\n                                            <th id='typeColumn'>Type</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {EntityList}\n                                    </tbody>\n                                </Table>\n                            }\n                        </Col>\n                        }\n                    </Row>\n                </div>\n            </Container >\n        )\n    }\n}\n\nexport default FilterSearch;"]},"metadata":{},"sourceType":"module"}