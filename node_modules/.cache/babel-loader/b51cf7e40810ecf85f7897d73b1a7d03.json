{"ast":null,"code":"var _jsxFileName = \"/Users/mtherri/Documents/Code/beckett-letters/src/components/letters.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport filterFactory, { textFilter, Comparator } from 'react-bootstrap-table2-filter';\nconst numberFilter = numberFilter({\n  options: [2100, 2103, 2105],\n  // if options defined, will render number select instead of number input\n  delay: 600,\n  // how long will trigger filtering after user typing, default is 500 ms\n  placeholder: 'custom placeholder',\n  // placeholder for number input\n  withoutEmptyComparatorOption: true,\n  // dont render empty option for comparator\n  withoutEmptyNumberOption: true,\n  // dont render empty option for numner select if it is defined\n  comparators: [Comparator.EQ, Comparator.GT, Comparator.LT],\n  // Custom the comparators\n  style: {\n    display: 'inline-grid'\n  },\n  // custom the style on number filter\n  className: 'custom-numberfilter-class',\n  // custom the class on number filter\n  comparatorStyle: {\n    backgroundColor: 'antiquewhite'\n  },\n  // custom the style on comparator select\n  comparatorClassName: 'custom-comparator-class',\n  // custom the class on comparator select\n  numberStyle: {\n    backgroundColor: 'cadetblue',\n    margin: '0px'\n  },\n  // custom the style on number input/select\n  numberClassName: 'custom-number-class',\n  // custom the class on ber input/select\n  defaultValue: {\n    number: 2103,\n    comparator: Comparator.GT\n  } // default value\n\n});\nconst columns = [{\n  dataField: 'ID',\n  text: 'ID',\n  sort: true,\n  filter: textFilter()\n}, {\n  dataField: 'Code',\n  text: 'Code',\n  sort: true,\n  filter: textFilter()\n}, {\n  dataField: 'Year',\n  text: 'Date',\n  sort: true,\n  filter: numberFilter()\n}, {\n  dataField: 'Addressed to (Actual)',\n  text: 'Addressed to (Actual)',\n  sort: true,\n  filter: textFilter()\n}, {\n  dataField: 'Reg place sent',\n  text: 'Reg place sent',\n  sort: true,\n  filter: textFilter()\n}, {\n  dataField: 'PrimaryLang',\n  text: 'PrimaryLang',\n  sort: true,\n  filter: textFilter()\n}];\nexport class Letters extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      letters: []\n    };\n  }\n\n  componentDidMount() {\n    axios.all([axios.get('letters_json.json')]).then(axios.spread(getLetters => {\n      const letters = getLetters.data;\n      this.setState({\n        letters\n      });\n      console.log(letters);\n    })).catch(err => {\n      this.setState({\n        isLoaded: false\n      });\n      this.setState({\n        error: err.message\n      });\n    });\n  }\n\n  render() {\n    // const allLetters = this.state.letters.map((letter) => <li>{letter.ID}, {letter.Additional} </li>)\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Letters\"), React.createElement(BootstrapTable, {\n      keyField: \"id\",\n      data: this.state.letters,\n      columns: columns,\n      filter: filterFactory(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }));\n  }\n\n}\nexport default Letters;","map":{"version":3,"sources":["/Users/mtherri/Documents/Code/beckett-letters/src/components/letters.js"],"names":["React","Component","axios","BootstrapTable","filterFactory","textFilter","Comparator","numberFilter","options","delay","placeholder","withoutEmptyComparatorOption","withoutEmptyNumberOption","comparators","EQ","GT","LT","style","display","className","comparatorStyle","backgroundColor","comparatorClassName","numberStyle","margin","numberClassName","defaultValue","number","comparator","columns","dataField","text","sort","filter","Letters","constructor","props","context","state","error","isLoaded","letters","componentDidMount","all","get","then","spread","getLetters","data","setState","console","log","catch","err","message","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport filterFactory, { textFilter, Comparator } from 'react-bootstrap-table2-filter';\n\nconst numberFilter = numberFilter ({\n  options: [2100, 2103, 2105],  // if options defined, will render number select instead of number input\n  delay: 600,  // how long will trigger filtering after user typing, default is 500 ms\n  placeholder: 'custom placeholder',  // placeholder for number input\n  withoutEmptyComparatorOption: true,  // dont render empty option for comparator\n  withoutEmptyNumberOption: true,  // dont render empty option for numner select if it is defined\n  comparators: [Comparator.EQ, Comparator.GT, Comparator.LT],  // Custom the comparators\n  style: { display: 'inline-grid' },  // custom the style on number filter\n  className: 'custom-numberfilter-class',  // custom the class on number filter\n  comparatorStyle: { backgroundColor: 'antiquewhite' }, // custom the style on comparator select\n  comparatorClassName: 'custom-comparator-class',  // custom the class on comparator select\n  numberStyle: { backgroundColor: 'cadetblue', margin: '0px' },  // custom the style on number input/select\n  numberClassName: 'custom-number-class',  // custom the class on ber input/select\n  defaultValue: { number: 2103, comparator: Comparator.GT },  // default value\n})\n\nconst columns = [{\n  dataField: 'ID',\n  text: 'ID',\n  sort: true,\n  filter: textFilter()\n}, {\n  dataField: 'Code',\n  text: 'Code',\n  sort: true,\n  filter: textFilter()\n}, {\n  dataField: 'Year',\n  text: 'Date',\n  sort: true,\n  filter: numberFilter()\n}, {\n  dataField: 'Addressed to (Actual)',\n  text: 'Addressed to (Actual)',\n  sort: true,\n  filter: textFilter()\n}, {\n  dataField: 'Reg place sent',\n  text: 'Reg place sent',\n  sort: true,\n  filter: textFilter()\n}, {\n  dataField: 'PrimaryLang',\n  text: 'PrimaryLang',\n  sort: true,\n  filter: textFilter()\n}];\n\nexport class Letters extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      letters: []\n    };\n  }\n\n  componentDidMount() {\n    axios.all([\n      axios.get('letters_json.json')    ])\n    .then(axios.spread((getLetters) => {\n      const letters = getLetters.data;\n      this.setState({ letters });\n      console.log(letters)\n    }))\n    .catch((err) => {\n      this.setState({ isLoaded:false });\n      this.setState({ error:err.message });\n    });\n  }\n\n  render() {\n    // const allLetters = this.state.letters.map((letter) => <li>{letter.ID}, {letter.Additional} </li>)\n      return (\n        <div>\n          <h1>Letters</h1>\n          <BootstrapTable keyField='id' data={ this.state.letters } columns={ columns } filter={ filterFactory() } />\n          {/* {allLetters} */}\n        </div>\n      )\n    }\n  }\n\nexport default Letters;"]},"metadata":{},"sourceType":"module"}